[
  {
    "name": "Add selected repository to an organization secret",
    "scope": "actions",
    "id": "addSelectedRepoToOrgSecret",
    "method": "PUT",
    "url": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#add-selected-repository-to-an-organization-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response when repository was added to the selected list",
        "examples": null
      },
      {
        "code": 409,
        "description": "Response when visibility type is not set to selected",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Cancel a workflow run",
    "scope": "actions",
    "id": "cancelWorkflowRun",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/cancel",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Cancels a workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#cancel-a-workflow-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 202, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Create or update an organization secret",
    "scope": "actions",
    "id": "createOrUpdateOrgSecret",
    "method": "PUT",
    "url": "/orgs/{org}/actions/secrets/{secret_name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to\nuse this endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "encrypted_value",
        "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/rest/reference/actions#get-an-organization-public-key) endpoint.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "key_id",
        "description": "ID of the key you used to encrypt the secret.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "visibility",
        "description": "Configures the access that repositories have to the organization secret. Can be one of:  \n\\- `all` - All repositories in an organization can access the secret.  \n\\- `private` - Private repositories in an organization can access the secret.  \n\\- `selected` - Only specific repositories can access the secret.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["all", "private", "selected"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "selected_repository_ids",
        "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "Response when creating a secret",
        "examples": null
      },
      {
        "code": 204,
        "description": "Response when updating a secret",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Create or update a repository secret",
    "scope": "actions",
    "id": "createOrUpdateRepoSecret",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use\nthis endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#create-or-update-a-repository-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "encrypted_value",
        "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/reference/actions#get-a-repository-public-key) endpoint.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "key_id",
        "description": "ID of the key you used to encrypt the secret.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "Response when creating a secret",
        "examples": null
      },
      {
        "code": 204,
        "description": "Response when updating a secret",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a registration token for an organization",
    "scope": "actions",
    "id": "createRegistrationTokenForOrg",
    "method": "POST",
    "url": "/orgs/{org}/actions/runners/registration-token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org --token TOKEN\n```",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#create-a-registration-token-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"token\":\"LLBF3JGZDX3P5PMEXLND6TS6FCWO6\",\"expires_at\":\"2020-01-22T12:13:35.123-08:00\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a registration token for a repository",
    "scope": "actions",
    "id": "createRegistrationTokenForRepo",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/actions/runners/registration-token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate\nusing an access token with the `repo` scope to use this endpoint.\n\n#### Example using registration token\n \nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN\n```",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#create-a-registration-token-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"token\":\"LLBF3JGZDX3P5PMEXLND6TS6FCWO6\",\"expires_at\":\"2020-01-22T12:13:35.123-08:00\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a remove token for an organization",
    "scope": "actions",
    "id": "createRemoveTokenForOrg",
    "method": "POST",
    "url": "/orgs/{org}/actions/runners/remove-token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#create-a-remove-token-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"token\":\"AABF3JGZDX3P5PMEXLND6TS6FCWO6\",\"expires_at\":\"2020-01-29T12:13:35.123-08:00\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a remove token for a repository",
    "scope": "actions",
    "id": "createRemoveTokenForRepo",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/actions/runners/remove-token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour.\nYou must authenticate using an access token with the `repo` scope to use this endpoint.\n\n#### Example using remove token\n \nTo remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#create-a-remove-token-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"token\":\"AABF3JGZDX3P5PMEXLND6TS6FCWO6\",\"expires_at\":\"2020-01-29T12:13:35.123-08:00\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a workflow dispatch event",
    "scope": "actions",
    "id": "createWorkflowDispatch",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.\n\nYou must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see \"[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#create-a-workflow-dispatch-event",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "workflow_id",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "in": "PATH",
        "type": null,
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The git reference for the workflow. The reference can be a branch or tag name.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "inputs",
        "description": "Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties configured in the workflow file will be used when `inputs` are omitted.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "inputs.*",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an artifact",
    "scope": "actions",
    "id": "deleteArtifact",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes an artifact for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#delete-an-artifact",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "artifact_id",
        "description": "artifact_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an organization secret",
    "scope": "actions",
    "id": "deleteOrgSecret",
    "method": "DELETE",
    "url": "/orgs/{org}/actions/secrets/{secret_name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#delete-an-organization-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a repository secret",
    "scope": "actions",
    "id": "deleteRepoSecret",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#delete-a-repository-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a self-hosted runner from an organization",
    "scope": "actions",
    "id": "deleteSelfHostedRunnerFromOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/actions/runners/{runner_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "runner_id",
        "description": "Unique identifier of the self-hosted runner.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a self-hosted runner from a repository",
    "scope": "actions",
    "id": "deleteSelfHostedRunnerFromRepo",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `repo`\nscope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "runner_id",
        "description": "Unique identifier of the self-hosted runner.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a workflow run",
    "scope": "actions",
    "id": "deleteWorkflowRun",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is\nprivate you must use an access token with the `repo` scope. GitHub Apps must have the `actions:write` permission to use\nthis endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#delete-a-workflow-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete workflow run logs",
    "scope": "actions",
    "id": "deleteWorkflowRunLogs",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/logs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes all logs for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#delete-workflow-run-logs",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Disable a selected repository for GitHub Actions in an organization",
    "scope": "actions",
    "id": "disableSelectedRepositoryGithubActionsOrganization",
    "method": "DELETE",
    "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#disable-a-selected-repository-for-github-actions-in-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Disable a workflow",
    "scope": "actions",
    "id": "disableWorkflow",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Disables a workflow and sets the `state` of the workflow to `disabled_manually`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#disable-a-workflow",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "workflow_id",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "in": "PATH",
        "type": null,
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Download an artifact",
    "scope": "actions",
    "id": "downloadArtifact",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in\nthe response header to find the URL for the download. The `:archive_format` must be `zip`. Anyone with read access to\nthe repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.\nGitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#download-an-artifact",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "artifact_id",
        "description": "artifact_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "archive_format",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 302, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Download job logs for a workflow run",
    "scope": "actions",
    "id": "downloadJobLogsForWorkflowRun",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/jobs/{job_id}/logs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look\nfor `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can\nuse this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must\nhave the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#download-job-logs-for-a-workflow-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "job_id",
        "description": "job_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 302, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Download workflow run logs",
    "scope": "actions",
    "id": "downloadWorkflowRunLogs",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/logs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for\n`Location:` in the response header to find the URL for the download. Anyone with read access to the repository can use\nthis endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have\nthe `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#download-workflow-run-logs",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 302, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Enable a selected repository for GitHub Actions in an organization",
    "scope": "actions",
    "id": "enableSelectedRepositoryGithubActionsOrganization",
    "method": "PUT",
    "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#enable-a-selected-repository-for-github-actions-in-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Enable a workflow",
    "scope": "actions",
    "id": "enableWorkflow",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Enables a workflow and sets the `state` of the workflow to `active`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#enable-a-workflow",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "workflow_id",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "in": "PATH",
        "type": null,
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get allowed actions for an organization",
    "scope": "actions",
    "id": "getAllowedActionsOrganization",
    "method": "GET",
    "url": "/orgs/{org}/actions/permissions/selected-actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the selected actions that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-allowed-actions-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"github_owned_allowed\":true,\"verified_allowed\":false,\"patterns_allowed\":[\"monalisa/octocat@*\",\"docker/*\"]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get allowed actions for a repository",
    "scope": "actions",
    "id": "getAllowedActionsRepository",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/permissions/selected-actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the settings for selected actions that are allowed in a repository. To use this endpoint, the repository policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-allowed-actions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"github_owned_allowed\":true,\"verified_allowed\":false,\"patterns_allowed\":[\"monalisa/octocat@*\",\"docker/*\"]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an artifact",
    "scope": "actions",
    "id": "getArtifact",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-an-artifact",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "artifact_id",
        "description": "artifact_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":11,\"node_id\":\"MDg6QXJ0aWZhY3QxMQ==\",\"name\":\"Rails\",\"size_in_bytes\":556,\"url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11\",\"archive_download_url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip\",\"expired\":false,\"created_at\":\"2020-01-10T14:59:22Z\",\"expires_at\":\"2020-01-21T14:59:22Z\",\"updated_at\":\"2020-01-21T14:59:22Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Actions permissions for an organization",
    "scope": "actions",
    "id": "getGithubActionsPermissionsOrganization",
    "method": "GET",
    "url": "/orgs/{org}/actions/permissions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the GitHub Actions permissions policy for repositories and allowed actions in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"enabled_repositories\":\"all\",\"allowed_actions\":\"selected\",\"selected_actions_url\":\"https://api.github.com/organizations/42/actions/permissions/selected-actions\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Actions permissions for a repository",
    "scope": "actions",
    "id": "getGithubActionsPermissionsRepository",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/permissions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository.\n\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint. GitHub Apps must have the `administration` repository permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"enabled\":true,\"allowed_actions\":\"selected\",\"selected_actions_url\":\"https://api.github.com/repositories/42/actions/permissions/selected-actions\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a job for a workflow run",
    "scope": "actions",
    "id": "getJobForWorkflowRun",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/jobs/{job_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-a-job-for-a-workflow-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "job_id",
        "description": "job_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":399444496,\"run_id\":29679449,\"run_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449\",\"node_id\":\"MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==\",\"head_sha\":\"f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0\",\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496\",\"html_url\":\"https://github.com/octo-org/octo-repo/runs/399444496\",\"status\":\"completed\",\"conclusion\":\"success\",\"started_at\":\"2020-01-20T17:42:40Z\",\"completed_at\":\"2020-01-20T17:44:39Z\",\"name\":\"build\",\"steps\":[{\"name\":\"Set up job\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":1,\"started_at\":\"2020-01-20T09:42:40.000-08:00\",\"completed_at\":\"2020-01-20T09:42:41.000-08:00\"},{\"name\":\"Run actions/checkout@v2\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":2,\"started_at\":\"2020-01-20T09:42:41.000-08:00\",\"completed_at\":\"2020-01-20T09:42:45.000-08:00\"},{\"name\":\"Set up Ruby\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":3,\"started_at\":\"2020-01-20T09:42:45.000-08:00\",\"completed_at\":\"2020-01-20T09:42:45.000-08:00\"},{\"name\":\"Run actions/cache@v2\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":4,\"started_at\":\"2020-01-20T09:42:45.000-08:00\",\"completed_at\":\"2020-01-20T09:42:48.000-08:00\"},{\"name\":\"Install Bundler\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":5,\"started_at\":\"2020-01-20T09:42:48.000-08:00\",\"completed_at\":\"2020-01-20T09:42:52.000-08:00\"},{\"name\":\"Install Gems\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":6,\"started_at\":\"2020-01-20T09:42:52.000-08:00\",\"completed_at\":\"2020-01-20T09:42:53.000-08:00\"},{\"name\":\"Run Tests\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":7,\"started_at\":\"2020-01-20T09:42:53.000-08:00\",\"completed_at\":\"2020-01-20T09:42:59.000-08:00\"},{\"name\":\"Deploy to Heroku\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":8,\"started_at\":\"2020-01-20T09:42:59.000-08:00\",\"completed_at\":\"2020-01-20T09:44:39.000-08:00\"},{\"name\":\"Post actions/cache@v2\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":16,\"started_at\":\"2020-01-20T09:44:39.000-08:00\",\"completed_at\":\"2020-01-20T09:44:39.000-08:00\"},{\"name\":\"Complete job\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":17,\"started_at\":\"2020-01-20T09:44:39.000-08:00\",\"completed_at\":\"2020-01-20T09:44:39.000-08:00\"}],\"check_run_url\":\"https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization public key",
    "scope": "actions",
    "id": "getOrgPublicKey",
    "method": "GET",
    "url": "/orgs/{org}/actions/secrets/public-key",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-an-organization-public-key",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key_id\":\"012345678912345678\",\"key\":\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization secret",
    "scope": "actions",
    "id": "getOrgSecret",
    "method": "GET",
    "url": "/orgs/{org}/actions/secrets/{secret_name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-an-organization-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"name\":\"GH_TOKEN\",\"created_at\":\"2019-08-10T14:59:22Z\",\"updated_at\":\"2020-01-10T14:59:22Z\",\"visibility\":\"selected\",\"selected_repositories_url\":\"https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Actions permissions for a repository",
    "scope": "actions",
    "id": "getRepoPermissions",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/permissions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository.\n\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint. GitHub Apps must have the `administration` repository permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"enabled\":true,\"allowed_actions\":\"selected\",\"selected_actions_url\":\"https://api.github.com/repositories/42/actions/permissions/selected-actions\"}"
          }
        ]
      }
    ],
    "renamed": {
      "before": { "scope": "actions", "id": "getRepoPermissions" },
      "after": {
        "scope": "actions",
        "id": "getGithubActionsPermissionsRepository"
      },
      "date": "2020-11-10",
      "note": null
    }
  },
  {
    "name": "Get a repository public key",
    "scope": "actions",
    "id": "getRepoPublicKey",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/secrets/public-key",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-a-repository-public-key",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key_id\":\"012345678912345678\",\"key\":\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a repository secret",
    "scope": "actions",
    "id": "getRepoSecret",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-a-repository-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"name\":\"GH_TOKEN\",\"created_at\":\"2019-08-10T14:59:22Z\",\"updated_at\":\"2020-01-10T14:59:22Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a self-hosted runner for an organization",
    "scope": "actions",
    "id": "getSelfHostedRunnerForOrg",
    "method": "GET",
    "url": "/orgs/{org}/actions/runners/{runner_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a specific self-hosted runner configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "runner_id",
        "description": "Unique identifier of the self-hosted runner.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":23,\"name\":\"MBP\",\"os\":\"macos\",\"status\":\"online\",\"busy\":true,\"labels\":[{\"id\":5,\"name\":\"self-hosted\",\"type\":\"read-only\"},{\"id\":7,\"name\":\"X64\",\"type\":\"read-only\"},{\"id\":20,\"name\":\"macOS\",\"type\":\"read-only\"},{\"id\":21,\"name\":\"no-gpu\",\"type\":\"custom\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a self-hosted runner for a repository",
    "scope": "actions",
    "id": "getSelfHostedRunnerForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a specific self-hosted runner configured in a repository.\n\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "runner_id",
        "description": "Unique identifier of the self-hosted runner.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":23,\"name\":\"MBP\",\"os\":\"macos\",\"status\":\"online\",\"busy\":true,\"labels\":[{\"id\":5,\"name\":\"self-hosted\",\"type\":\"read-only\"},{\"id\":7,\"name\":\"X64\",\"type\":\"read-only\"},{\"id\":20,\"name\":\"macOS\",\"type\":\"read-only\"},{\"id\":21,\"name\":\"no-gpu\",\"type\":\"custom\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a workflow",
    "scope": "actions",
    "id": "getWorkflow",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a specific workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-a-workflow",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "workflow_id",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "in": "PATH",
        "type": null,
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":161335,\"node_id\":\"MDg6V29ya2Zsb3cxNjEzMzU=\",\"name\":\"CI\",\"path\":\".github/workflows/blank.yaml\",\"state\":\"active\",\"created_at\":\"2020-01-08T23:48:37.000-08:00\",\"updated_at\":\"2020-01-08T23:50:21.000-08:00\",\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335\",\"html_url\":\"https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335\",\"badge_url\":\"https://github.com/octo-org/octo-repo/workflows/CI/badge.svg\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a workflow run",
    "scope": "actions",
    "id": "getWorkflowRun",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-a-workflow-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":30433642,\"name\":\"Build\",\"node_id\":\"MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==\",\"head_branch\":\"master\",\"head_sha\":\"acb5820ced9479c074f688cc328bf03f341a511d\",\"run_number\":562,\"event\":\"push\",\"status\":\"queued\",\"conclusion\":null,\"workflow_id\":159038,\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642\",\"html_url\":\"https://github.com/octo-org/octo-repo/actions/runs/30433642\",\"pull_requests\":[],\"created_at\":\"2020-01-22T19:33:08Z\",\"updated_at\":\"2020-01-22T19:33:08Z\",\"jobs_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs\",\"logs_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs\",\"check_suite_url\":\"https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374\",\"artifacts_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts\",\"cancel_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel\",\"rerun_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun\",\"workflow_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038\",\"head_commit\":{\"id\":\"acb5820ced9479c074f688cc328bf03f341a511d\",\"tree_id\":\"d23f6eedb1e1b9610bbc754ddb5197bfe7271223\",\"message\":\"Create linter.yaml\",\"timestamp\":\"2020-01-22T19:33:05Z\",\"author\":{\"name\":\"Octo Cat\",\"email\":\"octocat@github.com\"},\"committer\":{\"name\":\"GitHub\",\"email\":\"noreply@github.com\"}},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"head_repository\":{\"id\":217723378,\"node_id\":\"MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=\",\"name\":\"octo-repo\",\"full_name\":\"octo-org/octo-repo\",\"private\":true,\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"html_url\":\"https://github.com/octo-org/octo-repo\",\"description\":null,\"fork\":false,\"url\":\"https://api.github.com/repos/octo-org/octo-repo\",\"forks_url\":\"https://api.github.com/repos/octo-org/octo-repo/forks\",\"keys_url\":\"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/octo-org/octo-repo/teams\",\"hooks_url\":\"https://api.github.com/repos/octo-org/octo-repo/hooks\",\"issue_events_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/octo-org/octo-repo/events\",\"assignees_url\":\"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/octo-org/octo-repo/tags\",\"blobs_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/octo-org/octo-repo/languages\",\"stargazers_url\":\"https://api.github.com/repos/octo-org/octo-repo/stargazers\",\"contributors_url\":\"https://api.github.com/repos/octo-org/octo-repo/contributors\",\"subscribers_url\":\"https://api.github.com/repos/octo-org/octo-repo/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octo-org/octo-repo/subscription\",\"commits_url\":\"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/octo-org/octo-repo/merges\",\"archive_url\":\"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/octo-org/octo-repo/downloads\",\"issues_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/octo-org/octo-repo/deployments\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get workflow run usage",
    "scope": "actions",
    "id": "getWorkflowRunUsage",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/timing",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-workflow-run-usage",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"billable\":{\"UBUNTU\":{\"total_ms\":180000,\"jobs\":1},\"MACOS\":{\"total_ms\":240000,\"jobs\":4},\"WINDOWS\":{\"total_ms\":300000,\"jobs\":2}},\"run_duration_ms\":500000}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get workflow usage",
    "scope": "actions",
    "id": "getWorkflowUsage",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nYou can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#get-workflow-usage",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "workflow_id",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "in": "PATH",
        "type": null,
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"billable\":{\"UBUNTU\":{\"total_ms\":180000},\"MACOS\":{\"total_ms\":240000},\"WINDOWS\":{\"total_ms\":300000}}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List artifacts for a repository",
    "scope": "actions",
    "id": "listArtifactsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/artifacts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-artifacts-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":2,\"artifacts\":[{\"id\":11,\"node_id\":\"MDg6QXJ0aWZhY3QxMQ==\",\"name\":\"Rails\",\"size_in_bytes\":556,\"url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11\",\"archive_download_url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip\",\"expired\":false,\"created_at\":\"2020-01-10T14:59:22Z\",\"expires_at\":\"2020-03-21T14:59:22Z\",\"updated_at\":\"2020-02-21T14:59:22Z\"},{\"id\":13,\"node_id\":\"MDg6QXJ0aWZhY3QxMw==\",\"name\":\"\",\"size_in_bytes\":453,\"url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13\",\"archive_download_url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip\",\"expired\":false,\"created_at\":\"2020-01-10T14:59:22Z\",\"expires_at\":\"2020-03-21T14:59:22Z\",\"updated_at\":\"2020-02-21T14:59:22Z\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List jobs for a workflow run",
    "scope": "actions",
    "id": "listJobsForWorkflowRun",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-jobs-for-a-workflow-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filters jobs by their `completed_at` timestamp. Can be one of:  \n\\* `latest`: Returns jobs from the most recent execution of the workflow run.  \n\\* `all`: Returns all jobs for a workflow run, including from old executions of the workflow run.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["latest", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"jobs\":[{\"id\":399444496,\"run_id\":29679449,\"run_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449\",\"node_id\":\"MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==\",\"head_sha\":\"f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0\",\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496\",\"html_url\":\"https://github.com/octo-org/octo-repo/runs/399444496\",\"status\":\"completed\",\"conclusion\":\"success\",\"started_at\":\"2020-01-20T17:42:40Z\",\"completed_at\":\"2020-01-20T17:44:39Z\",\"name\":\"build\",\"steps\":[{\"name\":\"Set up job\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":1,\"started_at\":\"2020-01-20T09:42:40.000-08:00\",\"completed_at\":\"2020-01-20T09:42:41.000-08:00\"},{\"name\":\"Run actions/checkout@v2\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":2,\"started_at\":\"2020-01-20T09:42:41.000-08:00\",\"completed_at\":\"2020-01-20T09:42:45.000-08:00\"},{\"name\":\"Set up Ruby\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":3,\"started_at\":\"2020-01-20T09:42:45.000-08:00\",\"completed_at\":\"2020-01-20T09:42:45.000-08:00\"},{\"name\":\"Run actions/cache@v2\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":4,\"started_at\":\"2020-01-20T09:42:45.000-08:00\",\"completed_at\":\"2020-01-20T09:42:48.000-08:00\"},{\"name\":\"Install Bundler\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":5,\"started_at\":\"2020-01-20T09:42:48.000-08:00\",\"completed_at\":\"2020-01-20T09:42:52.000-08:00\"},{\"name\":\"Install Gems\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":6,\"started_at\":\"2020-01-20T09:42:52.000-08:00\",\"completed_at\":\"2020-01-20T09:42:53.000-08:00\"},{\"name\":\"Run Tests\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":7,\"started_at\":\"2020-01-20T09:42:53.000-08:00\",\"completed_at\":\"2020-01-20T09:42:59.000-08:00\"},{\"name\":\"Deploy to Heroku\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":8,\"started_at\":\"2020-01-20T09:42:59.000-08:00\",\"completed_at\":\"2020-01-20T09:44:39.000-08:00\"},{\"name\":\"Post actions/cache@v2\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":16,\"started_at\":\"2020-01-20T09:44:39.000-08:00\",\"completed_at\":\"2020-01-20T09:44:39.000-08:00\"},{\"name\":\"Complete job\",\"status\":\"completed\",\"conclusion\":\"success\",\"number\":17,\"started_at\":\"2020-01-20T09:44:39.000-08:00\",\"completed_at\":\"2020-01-20T09:44:39.000-08:00\"}],\"check_run_url\":\"https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List organization secrets",
    "scope": "actions",
    "id": "listOrgSecrets",
    "method": "GET",
    "url": "/orgs/{org}/actions/secrets",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-organization-secrets",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":3,\"secrets\":[{\"name\":\"GIST_ID\",\"created_at\":\"2019-08-10T14:59:22Z\",\"updated_at\":\"2020-01-10T14:59:22Z\",\"visibility\":\"private\"},{\"name\":\"DEPLOY_TOKEN\",\"created_at\":\"2019-08-10T14:59:22Z\",\"updated_at\":\"2020-01-10T14:59:22Z\",\"visibility\":\"all\"},{\"name\":\"GH_TOKEN\",\"created_at\":\"2019-08-10T14:59:22Z\",\"updated_at\":\"2020-01-10T14:59:22Z\",\"visibility\":\"selected\",\"selected_repositories_url\":\"https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repository secrets",
    "scope": "actions",
    "id": "listRepoSecrets",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/secrets",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-repository-secrets",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":2,\"secrets\":[{\"name\":\"GH_TOKEN\",\"created_at\":\"2019-08-10T14:59:22Z\",\"updated_at\":\"2020-01-10T14:59:22Z\"},{\"name\":\"GIST_ID\",\"created_at\":\"2020-01-10T10:59:22Z\",\"updated_at\":\"2020-01-11T11:59:22Z\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repository workflows",
    "scope": "actions",
    "id": "listRepoWorkflows",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/workflows",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-repository-workflows",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":2,\"workflows\":[{\"id\":161335,\"node_id\":\"MDg6V29ya2Zsb3cxNjEzMzU=\",\"name\":\"CI\",\"path\":\".github/workflows/blank.yaml\",\"state\":\"active\",\"created_at\":\"2020-01-08T23:48:37.000-08:00\",\"updated_at\":\"2020-01-08T23:50:21.000-08:00\",\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335\",\"html_url\":\"https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335\",\"badge_url\":\"https://github.com/octo-org/octo-repo/workflows/CI/badge.svg\"},{\"id\":269289,\"node_id\":\"MDE4OldvcmtmbG93IFNlY29uZGFyeTI2OTI4OQ==\",\"name\":\"Linter\",\"path\":\".github/workflows/linter.yaml\",\"state\":\"active\",\"created_at\":\"2020-01-08T23:48:37.000-08:00\",\"updated_at\":\"2020-01-08T23:50:21.000-08:00\",\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/269289\",\"html_url\":\"https://github.com/octo-org/octo-repo/blob/master/.github/workflows/269289\",\"badge_url\":\"https://github.com/octo-org/octo-repo/workflows/Linter/badge.svg\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List runner applications for an organization",
    "scope": "actions",
    "id": "listRunnerApplicationsForOrg",
    "method": "GET",
    "url": "/orgs/{org}/actions/runners/downloads",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-runner-applications-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"os\":\"osx\",\"architecture\":\"x64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz\",\"filename\":\"actions-runner-osx-x64-2.164.0.tar.gz\"},{\"os\":\"linux\",\"architecture\":\"x64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz\",\"filename\":\"actions-runner-linux-x64-2.164.0.tar.gz\"},{\"os\":\"linux\",\"architecture\":\"arm\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz\",\"filename\":\"actions-runner-linux-arm-2.164.0.tar.gz\"},{\"os\":\"win\",\"architecture\":\"x64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip\",\"filename\":\"actions-runner-win-x64-2.164.0.zip\"},{\"os\":\"linux\",\"architecture\":\"arm64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz\",\"filename\":\"actions-runner-linux-arm64-2.164.0.tar.gz\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List runner applications for a repository",
    "scope": "actions",
    "id": "listRunnerApplicationsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runners/downloads",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-runner-applications-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"os\":\"osx\",\"architecture\":\"x64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz\",\"filename\":\"actions-runner-osx-x64-2.164.0.tar.gz\"},{\"os\":\"linux\",\"architecture\":\"x64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz\",\"filename\":\"actions-runner-linux-x64-2.164.0.tar.gz\"},{\"os\":\"linux\",\"architecture\":\"arm\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz\",\"filename\":\"actions-runner-linux-arm-2.164.0.tar.gz\"},{\"os\":\"win\",\"architecture\":\"x64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip\",\"filename\":\"actions-runner-win-x64-2.164.0.zip\"},{\"os\":\"linux\",\"architecture\":\"arm64\",\"download_url\":\"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz\",\"filename\":\"actions-runner-linux-arm64-2.164.0.tar.gz\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List selected repositories for an organization secret",
    "scope": "actions",
    "id": "listSelectedReposForOrgSecret",
    "method": "GET",
    "url": "/orgs/{org}/actions/secrets/{secret_name}/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List selected repositories enabled for GitHub Actions in an organization",
    "scope": "actions",
    "id": "listSelectedRepositoriesEnabledGithubActionsOrganization",
    "method": "GET",
    "url": "/orgs/{org}/actions/permissions/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-selected-repositories-enabled-for-github-actions-in-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List self-hosted runners for an organization",
    "scope": "actions",
    "id": "listSelfHostedRunnersForOrg",
    "method": "GET",
    "url": "/orgs/{org}/actions/runners",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all self-hosted runners configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":2,\"runners\":[{\"id\":23,\"name\":\"linux_runner\",\"os\":\"linux\",\"status\":\"online\",\"busy\":true,\"labels\":[{\"id\":5,\"name\":\"self-hosted\",\"type\":\"read-only\"},{\"id\":7,\"name\":\"X64\",\"type\":\"read-only\"},{\"id\":11,\"name\":\"Linux\",\"type\":\"read-only\"}]},{\"id\":24,\"name\":\"mac_runner\",\"os\":\"macos\",\"status\":\"offline\",\"busy\":false,\"labels\":[{\"id\":5,\"name\":\"self-hosted\",\"type\":\"read-only\"},{\"id\":7,\"name\":\"X64\",\"type\":\"read-only\"},{\"id\":20,\"name\":\"macOS\",\"type\":\"read-only\"},{\"id\":21,\"name\":\"no-gpu\",\"type\":\"custom\"}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List self-hosted runners for a repository",
    "scope": "actions",
    "id": "listSelfHostedRunnersForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runners",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the `repo` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":2,\"runners\":[{\"id\":23,\"name\":\"linux_runner\",\"os\":\"linux\",\"status\":\"online\",\"busy\":true,\"labels\":[{\"id\":5,\"name\":\"self-hosted\",\"type\":\"read-only\"},{\"id\":7,\"name\":\"X64\",\"type\":\"read-only\"},{\"id\":11,\"name\":\"Linux\",\"type\":\"read-only\"}]},{\"id\":24,\"name\":\"mac_runner\",\"os\":\"macos\",\"status\":\"offline\",\"busy\":false,\"labels\":[{\"id\":5,\"name\":\"self-hosted\",\"type\":\"read-only\"},{\"id\":7,\"name\":\"X64\",\"type\":\"read-only\"},{\"id\":20,\"name\":\"macOS\",\"type\":\"read-only\"},{\"id\":21,\"name\":\"no-gpu\",\"type\":\"custom\"}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List workflow run artifacts",
    "scope": "actions",
    "id": "listWorkflowRunArtifacts",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-workflow-run-artifacts",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":2,\"artifacts\":[{\"id\":11,\"node_id\":\"MDg6QXJ0aWZhY3QxMQ==\",\"name\":\"Rails\",\"size_in_bytes\":556,\"url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11\",\"archive_download_url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip\",\"expired\":false,\"created_at\":\"2020-01-10T14:59:22Z\",\"expires_at\":\"2020-03-21T14:59:22Z\",\"updated_at\":\"2020-02-21T14:59:22Z\"},{\"id\":13,\"node_id\":\"MDg6QXJ0aWZhY3QxMw==\",\"name\":\"\",\"size_in_bytes\":453,\"url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13\",\"archive_download_url\":\"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip\",\"expired\":false,\"created_at\":\"2020-01-10T14:59:22Z\",\"expires_at\":\"2020-03-21T14:59:22Z\",\"updated_at\":\"2020-02-21T14:59:22Z\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List workflow runs",
    "scope": "actions",
    "id": "listWorkflowRuns",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-workflow-runs",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "workflow_id",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "in": "PATH",
        "type": null,
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actor",
        "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event",
        "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\"",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "Returns workflow runs associated with the check run `status` or `conclusion` you specify. For example, a conclusion can be `success` or a status can be `completed`. For more information, see the `status` and `conclusion` options available in \"[Create a check run](https://docs.github.com/rest/reference/checks#create-a-check-run).\"",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["completed", "status", "conclusion"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"workflow_runs\":[{\"id\":30433642,\"name\":\"Build\",\"node_id\":\"MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==\",\"head_branch\":\"master\",\"head_sha\":\"acb5820ced9479c074f688cc328bf03f341a511d\",\"run_number\":562,\"event\":\"push\",\"status\":\"queued\",\"conclusion\":null,\"workflow_id\":159038,\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642\",\"html_url\":\"https://github.com/octo-org/octo-repo/actions/runs/30433642\",\"pull_requests\":[],\"created_at\":\"2020-01-22T19:33:08Z\",\"updated_at\":\"2020-01-22T19:33:08Z\",\"jobs_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs\",\"logs_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs\",\"check_suite_url\":\"https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374\",\"artifacts_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts\",\"cancel_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel\",\"rerun_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun\",\"workflow_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038\",\"head_commit\":{\"id\":\"acb5820ced9479c074f688cc328bf03f341a511d\",\"tree_id\":\"d23f6eedb1e1b9610bbc754ddb5197bfe7271223\",\"message\":\"Create linter.yaml\",\"timestamp\":\"2020-01-22T19:33:05Z\",\"author\":{\"name\":\"Octo Cat\",\"email\":\"octocat@github.com\"},\"committer\":{\"name\":\"GitHub\",\"email\":\"noreply@github.com\"}},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"head_repository\":{\"id\":217723378,\"node_id\":\"MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=\",\"name\":\"octo-repo\",\"full_name\":\"octo-org/octo-repo\",\"private\":true,\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"html_url\":\"https://github.com/octo-org/octo-repo\",\"description\":null,\"fork\":false,\"url\":\"https://api.github.com/repos/octo-org/octo-repo\",\"forks_url\":\"https://api.github.com/repos/octo-org/octo-repo/forks\",\"keys_url\":\"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/octo-org/octo-repo/teams\",\"hooks_url\":\"https://api.github.com/repos/octo-org/octo-repo/hooks\",\"issue_events_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/octo-org/octo-repo/events\",\"assignees_url\":\"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/octo-org/octo-repo/tags\",\"blobs_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/octo-org/octo-repo/languages\",\"stargazers_url\":\"https://api.github.com/repos/octo-org/octo-repo/stargazers\",\"contributors_url\":\"https://api.github.com/repos/octo-org/octo-repo/contributors\",\"subscribers_url\":\"https://api.github.com/repos/octo-org/octo-repo/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octo-org/octo-repo/subscription\",\"commits_url\":\"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/octo-org/octo-repo/merges\",\"archive_url\":\"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/octo-org/octo-repo/downloads\",\"issues_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/octo-org/octo-repo/deployments\"}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List workflow runs for a repository",
    "scope": "actions",
    "id": "listWorkflowRunsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/actions/runs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#list-workflow-runs-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actor",
        "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event",
        "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\"",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "Returns workflow runs associated with the check run `status` or `conclusion` you specify. For example, a conclusion can be `success` or a status can be `completed`. For more information, see the `status` and `conclusion` options available in \"[Create a check run](https://docs.github.com/rest/reference/checks#create-a-check-run).\"",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["completed", "status", "conclusion"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"workflow_runs\":[{\"id\":30433642,\"name\":\"Build\",\"node_id\":\"MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==\",\"head_branch\":\"master\",\"head_sha\":\"acb5820ced9479c074f688cc328bf03f341a511d\",\"run_number\":562,\"event\":\"push\",\"status\":\"queued\",\"conclusion\":null,\"workflow_id\":159038,\"url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642\",\"html_url\":\"https://github.com/octo-org/octo-repo/actions/runs/30433642\",\"pull_requests\":[],\"created_at\":\"2020-01-22T19:33:08Z\",\"updated_at\":\"2020-01-22T19:33:08Z\",\"jobs_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs\",\"logs_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs\",\"check_suite_url\":\"https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374\",\"artifacts_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts\",\"cancel_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel\",\"rerun_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun\",\"workflow_url\":\"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038\",\"head_commit\":{\"id\":\"acb5820ced9479c074f688cc328bf03f341a511d\",\"tree_id\":\"d23f6eedb1e1b9610bbc754ddb5197bfe7271223\",\"message\":\"Create linter.yaml\",\"timestamp\":\"2020-01-22T19:33:05Z\",\"author\":{\"name\":\"Octo Cat\",\"email\":\"octocat@github.com\"},\"committer\":{\"name\":\"GitHub\",\"email\":\"noreply@github.com\"}},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"head_repository\":{\"id\":217723378,\"node_id\":\"MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=\",\"name\":\"octo-repo\",\"full_name\":\"octo-org/octo-repo\",\"private\":true,\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"html_url\":\"https://github.com/octo-org/octo-repo\",\"description\":null,\"fork\":false,\"url\":\"https://api.github.com/repos/octo-org/octo-repo\",\"forks_url\":\"https://api.github.com/repos/octo-org/octo-repo/forks\",\"keys_url\":\"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/octo-org/octo-repo/teams\",\"hooks_url\":\"https://api.github.com/repos/octo-org/octo-repo/hooks\",\"issue_events_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/octo-org/octo-repo/events\",\"assignees_url\":\"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/octo-org/octo-repo/tags\",\"blobs_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/octo-org/octo-repo/languages\",\"stargazers_url\":\"https://api.github.com/repos/octo-org/octo-repo/stargazers\",\"contributors_url\":\"https://api.github.com/repos/octo-org/octo-repo/contributors\",\"subscribers_url\":\"https://api.github.com/repos/octo-org/octo-repo/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octo-org/octo-repo/subscription\",\"commits_url\":\"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/octo-org/octo-repo/merges\",\"archive_url\":\"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/octo-org/octo-repo/downloads\",\"issues_url\":\"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/octo-org/octo-repo/deployments\"}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Re-run a workflow",
    "scope": "actions",
    "id": "reRunWorkflow",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#re-run-a-workflow",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "run_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 201, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Remove selected repository from an organization secret",
    "scope": "actions",
    "id": "removeSelectedRepoFromOrgSecret",
    "method": "DELETE",
    "url": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response when repository was removed from the selected list",
        "examples": null
      },
      {
        "code": 409,
        "description": "Response when visibility type not set to selected",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Set allowed actions for an organization",
    "scope": "actions",
    "id": "setAllowedActionsOrganization",
    "method": "PUT",
    "url": "/orgs/{org}/actions/permissions/selected-actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Sets the actions that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nIf the organization belongs to an enterprise that has `selected` actions set at the enterprise level, then you cannot override any of the enterprise's allowed actions settings.\n\nTo use the `patterns_allowed` setting for private repositories, the organization must belong to an enterprise. If the organization does not belong to an enterprise, then the `patterns_allowed` setting only applies to public repositories in the organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#set-allowed-actions-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "github_owned_allowed",
        "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "verified_allowed",
        "description": "Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "patterns_allowed",
        "description": "Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.\"",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set allowed actions for a repository",
    "scope": "actions",
    "id": "setAllowedActionsRepository",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/actions/permissions/selected-actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Sets the actions that are allowed in a repository. To use this endpoint, the repository permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository).\"\n\nIf the repository belongs to an organization or enterprise that has `selected` actions set at the organization or enterprise levels, then you cannot override any of the allowed actions settings.\n\nTo use the `patterns_allowed` setting for private repositories, the repository must belong to an enterprise. If the repository does not belong to an enterprise, then the `patterns_allowed` setting only applies to public repositories.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#set-allowed-actions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "github_owned_allowed",
        "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "verified_allowed",
        "description": "Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "patterns_allowed",
        "description": "Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.\"",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set GitHub Actions permissions for an organization",
    "scope": "actions",
    "id": "setGithubActionsPermissionsOrganization",
    "method": "PUT",
    "url": "/orgs/{org}/actions/permissions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Sets the GitHub Actions permissions policy for repositories and allowed actions in an organization.\n\nIf the organization belongs to an enterprise that has set restrictive permissions at the enterprise level, such as `allowed_actions` to `selected` actions, then you cannot override them for the organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "enabled_repositories",
        "description": "The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["all", "none", "selected"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allowed_actions",
        "description": "The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `local_only`, or `selected`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["all", "local_only", "selected"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set GitHub Actions permissions for a repository",
    "scope": "actions",
    "id": "setGithubActionsPermissionsRepository",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/actions/permissions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions in the repository.\n\nIf the repository belongs to an organization or enterprise that has set restrictive permissions at the organization or enterprise levels, such as `allowed_actions` to `selected` actions, then you cannot override them for the repository.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "enabled",
        "description": "Whether GitHub Actions is enabled on the repository.",
        "in": "BODY",
        "type": "boolean",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allowed_actions",
        "description": "The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `local_only`, or `selected`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["all", "local_only", "selected"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set selected repositories for an organization secret",
    "scope": "actions",
    "id": "setSelectedReposForOrgSecret",
    "method": "PUT",
    "url": "/orgs/{org}/actions/secrets/{secret_name}/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "selected_repository_ids",
        "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Set selected repositories for an organization secret](https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.",
        "in": "BODY",
        "type": "integer[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set selected repositories enabled for GitHub Actions in an organization",
    "scope": "actions",
    "id": "setSelectedRepositoriesEnabledGithubActionsOrganization",
    "method": "PUT",
    "url": "/orgs/{org}/actions/permissions/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.",
    "documentationUrl": "https://docs.github.com/rest/reference/actions#set-selected-repositories-enabled-for-github-actions-in-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "selected_repository_ids",
        "description": "List of repository IDs to enable for GitHub Actions.",
        "in": "BODY",
        "type": "integer[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check if a repository is starred by the authenticated user",
    "scope": "activity",
    "id": "checkRepoIsStarredByAuthenticatedUser",
    "method": "GET",
    "url": "/user/starred/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#check-if-a-repository-is-starred-by-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if this repository is starred by you",
        "examples": null
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "Response if this repository is not starred by you",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a repository subscription",
    "scope": "activity",
    "id": "deleteRepoSubscription",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/subscription",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://docs.github.com/rest/reference/activity#set-a-repository-subscription).",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#delete-a-repository-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a thread subscription",
    "scope": "activity",
    "id": "deleteThreadSubscription",
    "method": "DELETE",
    "url": "/notifications/threads/{thread_id}/subscription",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Mutes all future notifications for a conversation until you comment on the thread or get an **@mention**. If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the [Set a thread subscription](https://docs.github.com/rest/reference/activity#set-a-thread-subscription) endpoint and set `ignore` to `true`.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#delete-a-thread-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get feeds",
    "scope": "activity",
    "id": "getFeeds",
    "method": "GET",
    "url": "/feeds",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#get-feeds",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"timeline_url\":\"https://github.com/timeline\",\"user_url\":\"https://github.com/{user}\",\"current_user_public_url\":\"https://github.com/octocat\",\"current_user_url\":\"https://github.com/octocat.private?token=abc123\",\"current_user_actor_url\":\"https://github.com/octocat.private.actor?token=abc123\",\"current_user_organization_url\":\"\",\"current_user_organization_urls\":[\"https://github.com/organizations/github/octocat.private.atom?token=abc123\"],\"security_advisories_url\":\"https://github.com/security-advisories\",\"_links\":{\"timeline\":{\"href\":\"https://github.com/timeline\",\"type\":\"application/atom+xml\"},\"user\":{\"href\":\"https://github.com/{user}\",\"type\":\"application/atom+xml\"},\"current_user_public\":{\"href\":\"https://github.com/octocat\",\"type\":\"application/atom+xml\"},\"current_user\":{\"href\":\"https://github.com/octocat.private?token=abc123\",\"type\":\"application/atom+xml\"},\"current_user_actor\":{\"href\":\"https://github.com/octocat.private.actor?token=abc123\",\"type\":\"application/atom+xml\"},\"current_user_organization\":{\"href\":\"\",\"type\":\"\"},\"current_user_organizations\":[{\"href\":\"https://github.com/organizations/github/octocat.private.atom?token=abc123\",\"type\":\"application/atom+xml\"}],\"security_advisories\":{\"href\":\"https://github.com/security-advisories\",\"type\":\"application/atom+xml\"}}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a repository subscription",
    "scope": "activity",
    "id": "getRepoSubscription",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/subscription",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#get-a-repository-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if you subscribe to the repository",
        "examples": [
          {
            "data": "{\"subscribed\":true,\"ignored\":false,\"reason\":null,\"created_at\":\"2012-10-06T21:34:12Z\",\"url\":\"https://api.github.com/repos/octocat/example/subscription\",\"repository_url\":\"https://api.github.com/repos/octocat/example\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "Response if you don't subscribe to the repository",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a thread",
    "scope": "activity",
    "id": "getThread",
    "method": "GET",
    "url": "/notifications/threads/{thread_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#get-a-thread",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":\"1\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"subject\":{\"title\":\"Greetings\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\"latest_comment_url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\"type\":\"Issue\"},\"reason\":\"subscribed\",\"unread\":true,\"updated_at\":\"2014-11-07T22:01:45Z\",\"last_read_at\":\"2014-11-07T22:01:45Z\",\"url\":\"https://api.github.com/notifications/threads/1\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a thread subscription for the authenticated user",
    "scope": "activity",
    "id": "getThreadSubscriptionForAuthenticatedUser",
    "method": "GET",
    "url": "/notifications/threads/{thread_id}/subscription",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#get-a-thread-subscription-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"subscribed\":true,\"ignored\":false,\"reason\":null,\"created_at\":\"2012-10-06T21:34:12Z\",\"url\":\"https://api.github.com/notifications/threads/1/subscription\",\"thread_url\":\"https://api.github.com/notifications/threads/1\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List events for the authenticated user",
    "scope": "activity",
    "id": "listEventsForAuthenticatedUser",
    "method": "GET",
    "url": "/users/{username}/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-events-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "List notifications for the authenticated user",
    "scope": "activity",
    "id": "listNotificationsForAuthenticatedUser",
    "method": "GET",
    "url": "/notifications",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all notifications for the current user, sorted by most recently updated.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "all",
        "description": "If `true`, show notifications marked as read.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "participating",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":\"1\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"subject\":{\"title\":\"Greetings\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\"latest_comment_url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\"type\":\"Issue\"},\"reason\":\"subscribed\",\"unread\":true,\"updated_at\":\"2014-11-07T22:01:45Z\",\"last_read_at\":\"2014-11-07T22:01:45Z\",\"url\":\"https://api.github.com/notifications/threads/1\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organization events for the authenticated user",
    "scope": "activity",
    "id": "listOrgEventsForAuthenticatedUser",
    "method": "GET",
    "url": "/users/{username}/events/orgs/{org}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This is the user's organization dashboard. You must be authenticated as the user to view this.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-organization-events-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "List public events",
    "scope": "activity",
    "id": "listPublicEvents",
    "method": "GET",
    "url": "/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-public-events",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List public events for a network of repositories",
    "scope": "activity",
    "id": "listPublicEventsForRepoNetwork",
    "method": "GET",
    "url": "/networks/{owner}/{repo}/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-public-events-for-a-network-of-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      { "code": 301, "description": "Moved Permanently", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List public events for a user",
    "scope": "activity",
    "id": "listPublicEventsForUser",
    "method": "GET",
    "url": "/users/{username}/events/public",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-public-events-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "List public organization events",
    "scope": "activity",
    "id": "listPublicOrgEvents",
    "method": "GET",
    "url": "/orgs/{org}/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-public-organization-events",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "List events received by the authenticated user",
    "scope": "activity",
    "id": "listReceivedEventsForUser",
    "method": "GET",
    "url": "/users/{username}/received_events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-events-received-by-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "List public events received by a user",
    "scope": "activity",
    "id": "listReceivedPublicEventsForUser",
    "method": "GET",
    "url": "/users/{username}/received_events/public",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-public-events-received-by-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "List repository events",
    "scope": "activity",
    "id": "listRepoEvents",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-repository-events",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "List repository notifications for the authenticated user",
    "scope": "activity",
    "id": "listRepoNotificationsForAuthenticatedUser",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/notifications",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all notifications for the current user.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "all",
        "description": "If `true`, show notifications marked as read.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "participating",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":\"1\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"subject\":{\"title\":\"Greetings\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\"latest_comment_url\":\"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\"type\":\"Issue\"},\"reason\":\"subscribed\",\"unread\":true,\"updated_at\":\"2014-11-07T22:01:45Z\",\"last_read_at\":\"2014-11-07T22:01:45Z\",\"url\":\"https://api.github.com/notifications/threads/1\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories starred by the authenticated user",
    "scope": "activity",
    "id": "listReposStarredByAuthenticatedUser",
    "method": "GET",
    "url": "/user/starred",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-repositories-starred-by-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}]"
          }
        ]
      },
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"starred_at\":\"2011-01-16T19:06:43Z\",\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repositories starred by a user",
    "scope": "activity",
    "id": "listReposStarredByUser",
    "method": "GET",
    "url": "/users/{username}/starred",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-repositories-starred-by-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}]"
          }
        ]
      },
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"starred_at\":\"2011-01-16T19:06:43Z\",\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories watched by a user",
    "scope": "activity",
    "id": "listReposWatchedByUser",
    "method": "GET",
    "url": "/users/{username}/subscriptions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists repositories a user is watching.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-repositories-watched-by-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List stargazers",
    "scope": "activity",
    "id": "listStargazersForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/stargazers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-stargazers",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"starred_at\":\"2011-01-16T19:06:43Z\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repositories watched by the authenticated user",
    "scope": "activity",
    "id": "listWatchedReposForAuthenticatedUser",
    "method": "GET",
    "url": "/user/subscriptions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists repositories the authenticated user is watching.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-repositories-watched-by-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List watchers",
    "scope": "activity",
    "id": "listWatchersForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/subscribers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the people watching the specified repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#list-watchers",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Mark notifications as read",
    "scope": "activity",
    "id": "markNotificationsAsRead",
    "method": "PUT",
    "url": "/notifications",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Marks all notifications as \"read\" removes it from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List notifications for the authenticated user](https://docs.github.com/rest/reference/activity#list-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#mark-notifications-as-read",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "last_read_at",
        "description": "Describes the last point that notifications were checked.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "read",
        "description": "Whether the notification has been read.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 202, "description": "response", "examples": null },
      { "code": 205, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Mark repository notifications as read",
    "scope": "activity",
    "id": "markRepoNotificationsAsRead",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/notifications",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Marks all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List repository notifications for the authenticated user](https://docs.github.com/rest/reference/activity#list-repository-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#mark-repository-notifications-as-read",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "last_read_at",
        "description": "Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 202, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Mark a thread as read",
    "scope": "activity",
    "id": "markThreadAsRead",
    "method": "PATCH",
    "url": "/notifications/threads/{thread_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#mark-a-thread-as-read",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 205, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set a repository subscription",
    "scope": "activity",
    "id": "setRepoSubscription",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/subscription",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](https://docs.github.com/rest/reference/activity#delete-a-repository-subscription) completely.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#set-a-repository-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "subscribed",
        "description": "Determines if notifications should be received from this repository.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ignored",
        "description": "Determines if all notifications should be blocked from this repository.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"subscribed\":true,\"ignored\":false,\"reason\":null,\"created_at\":\"2012-10-06T21:34:12Z\",\"url\":\"https://api.github.com/repos/octocat/example/subscription\",\"repository_url\":\"https://api.github.com/repos/octocat/example\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Set a thread subscription",
    "scope": "activity",
    "id": "setThreadSubscription",
    "method": "PUT",
    "url": "/notifications/threads/{thread_id}/subscription",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.\n\nYou can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.\n\nUnsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/rest/reference/activity#delete-a-thread-subscription) endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#set-a-thread-subscription",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ignored",
        "description": "Whether to block all notifications from a thread.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"subscribed\":true,\"ignored\":false,\"reason\":null,\"created_at\":\"2012-10-06T21:34:12Z\",\"url\":\"https://api.github.com/notifications/threads/1/subscription\",\"thread_url\":\"https://api.github.com/notifications/threads/1\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Star a repository for the authenticated user",
    "scope": "activity",
    "id": "starRepoForAuthenticatedUser",
    "method": "PUT",
    "url": "/user/starred/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#star-a-repository-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unstar a repository for the authenticated user",
    "scope": "activity",
    "id": "unstarRepoForAuthenticatedUser",
    "method": "DELETE",
    "url": "/user/starred/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/activity#unstar-a-repository-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add a repository to an app installation",
    "scope": "apps",
    "id": "addRepoToInstallation",
    "method": "PUT",
    "url": "/user/installations/{installation_id}/repositories/{repository_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Add a single repository to an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations#create-a-new-authorization) or [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#add-a-repository-to-an-app-installation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check an authorization",
    "scope": "apps",
    "id": "checkAuthorization",
    "method": "GET",
    "url": "/applications/{client_id}/tokens/{access_token}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#check-an-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check a token",
    "scope": "apps",
    "id": "checkToken",
    "method": "POST",
    "url": "/applications/{client_id}/token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) to use this endpoint, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#check-a-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "The access_token of the OAuth application.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a content attachment",
    "scope": "apps",
    "id": "createContentAttachment",
    "method": "POST",
    "url": "/content_references/{content_reference_id}/attachments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://docs.github.com/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://docs.github.com/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#create-a-content-attachment",
    "previews": [{ "name": "corsair" }],
    "headers": [],
    "parameters": [
      {
        "name": "content_reference_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the attachment",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The body of the attachment",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":101,\"title\":\"[A-1234] Error found in core/models.py file'\",\"body\":\"You have used an email that already exists for the user_email_uniq field.\\n ## DETAILS:\\n\\nThe (email)=(Octocat@github.com) already exists.\\n\\n The error was found in core/models.py in get_or_create_user at line 62.\\n\\n self.save()\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a GitHub App from a manifest",
    "scope": "apps",
    "id": "createFromManifest",
    "method": "POST",
    "url": "/app-manifests/{code}/conversions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.",
    "documentationUrl": "https://docs.github.com/v3/apps/#create-a-github-app-from-a-manifest",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "code",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDxOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"],\"client_id\":\"Iv1.8a61f9b3a7aba766\",\"client_secret\":\"1726be1638095a19edd134c77bde3aa2ece1e5d8\",\"webhook_secret\":\"e340154128314309424b7c8e90325147d99fdafa\",\"pem\":\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM\\n9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP\\nX0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/\\n6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm\\noNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma\\nszdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ\\ndBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva\\nKOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo\\ngDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP\\nkYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX\\nNuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd\\nNBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE\\nZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG\\nJ4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv\\neDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3\\nFI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk\\n77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH\\nPza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB\\n1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c\\n57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8\\nM5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic\\nI9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN\\n6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK\\nfgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG\\nZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu\\n-----END RSA PRIVATE KEY-----\\n\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create an installation access token for an app",
    "scope": "apps",
    "id": "createInstallationAccessToken",
    "method": "POST",
    "url": "/app/installations/{installation_id}/access_tokens",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#create-an-installation-access-token-for-an-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repositories",
        "description": "List of repository names that the token should have access to",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_ids",
        "description": "List of repository IDs that the token should have access to",
        "in": "BODY",
        "type": "integer[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions.contents",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions.issues",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions.deployments",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions.single_file",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions.def_not_a_repo",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"token\":\"v1.1f699f1069f60xxx\",\"expires_at\":\"2016-07-11T22:14:10Z\",\"permissions\":{\"issues\":\"write\",\"contents\":\"read\"},\"repository_selection\":\"selected\",\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}]}"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an app authorization",
    "scope": "apps",
    "id": "deleteAuthorization",
    "method": "DELETE",
    "url": "/applications/{client_id}/grant",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid OAuth `access_token` as an input parameter and the grant for the token's owner will be deleted.\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#delete-an-app-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "The OAuth access token used to authenticate to the GitHub API.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an installation for the authenticated app",
    "scope": "apps",
    "id": "deleteInstallation",
    "method": "DELETE",
    "url": "/app/installations/{installation_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's access to your account's resources, then we recommend the \"[Suspend an app installation](https://docs.github.com/v3/apps/#suspend-an-app-installation)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#delete-an-installation-for-the-authenticated-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an app token",
    "scope": "apps",
    "id": "deleteToken",
    "method": "DELETE",
    "url": "/applications/{client_id}/token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#delete-an-app-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "The OAuth access token used to authenticate to the GitHub API.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get the authenticated app",
    "scope": "apps",
    "id": "getAuthenticated",
    "method": "GET",
    "url": "/app",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#get-the-authenticated-app",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get an app",
    "scope": "apps",
    "id": "getBySlug",
    "method": "GET",
    "url": "/apps/{app_slug}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#get-an-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "app_slug",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an installation for the authenticated app",
    "scope": "apps",
    "id": "getInstallation",
    "method": "GET",
    "url": "/app/installations/{installation_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#get-an-installation-for-the-authenticated-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"single_file_name\":\"config.yaml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"repository_selection\":\"selected\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"app_slug\":\"github-actions\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization installation for the authenticated app",
    "scope": "apps",
    "id": "getOrgInstallation",
    "method": "GET",
    "url": "/orgs/{org}/installation",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#get-an-organization-installation-for-the-authenticated-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/orgs/github\",\"html_url\":\"https://github.com/github\",\"followers_url\":\"https://api.github.com/users/github/followers\",\"following_url\":\"https://api.github.com/users/github/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/github/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/github/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/github/subscriptions\",\"organizations_url\":\"https://api.github.com/users/github/orgs\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"received_events_url\":\"https://api.github.com/users/github/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"all\",\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"created_at\":\"2018-02-09T20:51:14Z\",\"updated_at\":\"2018-02-09T20:51:14Z\",\"single_file_name\":\"config.yml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"app_slug\":\"github-actions\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a repository installation for the authenticated app",
    "scope": "apps",
    "id": "getRepoInstallation",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/installation",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#get-a-repository-installation-for-the-authenticated-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/orgs/github\",\"html_url\":\"https://github.com/github\",\"followers_url\":\"https://api.github.com/users/github/followers\",\"following_url\":\"https://api.github.com/users/github/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/github/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/github/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/github/subscriptions\",\"organizations_url\":\"https://api.github.com/users/github/orgs\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"received_events_url\":\"https://api.github.com/users/github/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"all\",\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"created_at\":\"2018-02-09T20:51:14Z\",\"updated_at\":\"2018-02-09T20:51:14Z\",\"single_file_name\":\"config.yml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"app_slug\":\"github-actions\"}"
          }
        ]
      },
      { "code": 301, "description": "Moved Permanently", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a subscription plan for an account",
    "scope": "apps",
    "id": "getSubscriptionPlanForAccount",
    "method": "GET",
    "url": "/marketplace_listing/accounts/{account_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "account_id",
        "description": "account_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/github\",\"type\":\"Organization\",\"id\":4,\"login\":\"github\",\"organization_billing_email\":\"billing@github.com\",\"marketplace_pending_change\":{\"effective_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"id\":77,\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1111\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1111/accounts\",\"id\":1111,\"number\":2,\"name\":\"Startup\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":699,\"yearly_price_in_cents\":7870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"state\":\"published\",\"unit_name\":null,\"bullets\":[\"Up to 10 private repositories\",\"3 concurrent builds\"]}},\"marketplace_purchase\":{\"billing_cycle\":\"monthly\",\"next_billing_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"on_free_trial\":true,\"free_trial_ends_on\":\"2017-11-11T00:00:00Z\",\"updated_at\":\"2017-11-02T01:12:12Z\",\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}}}"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response when the account has not purchased the listing",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a subscription plan for an account (stubbed)",
    "scope": "apps",
    "id": "getSubscriptionPlanForAccountStubbed",
    "method": "GET",
    "url": "/marketplace_listing/stubbed/accounts/{account_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account-stubbed",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "account_id",
        "description": "account_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/github\",\"type\":\"Organization\",\"id\":4,\"login\":\"github\",\"organization_billing_email\":\"billing@github.com\",\"marketplace_pending_change\":{\"effective_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"id\":77,\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1111\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1111/accounts\",\"id\":1111,\"number\":2,\"name\":\"Startup\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":699,\"yearly_price_in_cents\":7870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"state\":\"published\",\"unit_name\":null,\"bullets\":[\"Up to 10 private repositories\",\"3 concurrent builds\"]}},\"marketplace_purchase\":{\"billing_cycle\":\"monthly\",\"next_billing_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"on_free_trial\":true,\"free_trial_ends_on\":\"2017-11-11T00:00:00Z\",\"updated_at\":\"2017-11-02T01:12:12Z\",\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}}}"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response when the account has not purchased the listing",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a user installation for the authenticated app",
    "scope": "apps",
    "id": "getUserInstallation",
    "method": "GET",
    "url": "/users/{username}/installation",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#get-a-user-installation-for-the-authenticated-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"account\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/orgs/github\",\"html_url\":\"https://github.com/github\",\"followers_url\":\"https://api.github.com/users/github/followers\",\"following_url\":\"https://api.github.com/users/github/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/github/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/github/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/github/subscriptions\",\"organizations_url\":\"https://api.github.com/users/github/orgs\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"received_events_url\":\"https://api.github.com/users/github/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"all\",\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"created_at\":\"2018-02-09T20:51:14Z\",\"updated_at\":\"2018-02-09T20:51:14Z\",\"single_file_name\":\"config.yml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"app_slug\":\"github-actions\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a webhook configuration for an app",
    "scope": "apps",
    "id": "getWebhookConfigForApp",
    "method": "GET",
    "url": "/app/hook/config",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"[Creating a GitHub App](/developers/apps/creating-a-github-app).\"\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps#get-a-webhook-configuration-for-an-app",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\",\"url\":\"https://example.com/webhook\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List accounts for a plan",
    "scope": "apps",
    "id": "listAccountsForPlan",
    "method": "GET",
    "url": "/marketplace_listing/plans/{plan_id}/accounts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "plan_id",
        "description": "plan_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/orgs/github\",\"type\":\"Organization\",\"id\":4,\"login\":\"github\",\"organization_billing_email\":\"billing@github.com\",\"marketplace_pending_change\":{\"effective_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"id\":77,\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1111\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1111/accounts\",\"id\":1111,\"number\":2,\"name\":\"Startup\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":699,\"yearly_price_in_cents\":7870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"state\":\"published\",\"unit_name\":null,\"bullets\":[\"Up to 10 private repositories\",\"3 concurrent builds\"]}},\"marketplace_purchase\":{\"billing_cycle\":\"monthly\",\"next_billing_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"on_free_trial\":true,\"free_trial_ends_on\":\"2017-11-11T00:00:00Z\",\"updated_at\":\"2017-11-02T01:12:12Z\",\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}}}]"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List accounts for a plan (stubbed)",
    "scope": "apps",
    "id": "listAccountsForPlanStubbed",
    "method": "GET",
    "url": "/marketplace_listing/stubbed/plans/{plan_id}/accounts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan-stubbed",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "plan_id",
        "description": "plan_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/orgs/github\",\"type\":\"Organization\",\"id\":4,\"login\":\"github\",\"organization_billing_email\":\"billing@github.com\",\"marketplace_pending_change\":{\"effective_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"id\":77,\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1111\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1111/accounts\",\"id\":1111,\"number\":2,\"name\":\"Startup\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":699,\"yearly_price_in_cents\":7870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"state\":\"published\",\"unit_name\":null,\"bullets\":[\"Up to 10 private repositories\",\"3 concurrent builds\"]}},\"marketplace_purchase\":{\"billing_cycle\":\"monthly\",\"next_billing_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"on_free_trial\":true,\"free_trial_ends_on\":\"2017-11-11T00:00:00Z\",\"updated_at\":\"2017-11-02T01:12:12Z\",\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}}}]"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories accessible to the user access token",
    "scope": "apps",
    "id": "listInstallationReposForAuthenticatedUser",
    "method": "GET",
    "url": "/user/installations/{installation_id}/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-user-access-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "The access the user has to each repository is included in the hash under the `permissions` key.",
        "examples": [
          {
            "data": "{\"total_count\":1,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List installations for the authenticated app",
    "scope": "apps",
    "id": "listInstallations",
    "method": "GET",
    "url": "/app/installations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
    "documentationUrl": "https://docs.github.com/v3/apps/#list-installations-for-the-authenticated-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "outdated",
        "description": "",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "The permissions the installation has are included under the `permissions` key.",
        "examples": [
          {
            "data": "[{\"id\":1,\"account\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"single_file_name\":\"config.yaml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"repository_selection\":\"selected\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"app_slug\":\"github-actions\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List app installations accessible to the user access token",
    "scope": "apps",
    "id": "listInstallationsForAuthenticatedUser",
    "method": "GET",
    "url": "/user/installations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "You can find the permissions for the installation under the `permissions` key.",
        "examples": [
          {
            "data": "{\"total_count\":2,\"installations\":[{\"id\":1,\"account\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"single_file_name\":\"config.yaml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"repository_selection\":\"all\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"app_slug\":\"github-actions\"},{\"id\":3,\"account\":{\"login\":\"octocat\",\"id\":2,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"access_tokens_url\":\"https://api.github.com/installations/1/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/github/settings/installations/1\",\"app_id\":1,\"target_id\":1,\"target_type\":\"Organization\",\"permissions\":{\"checks\":\"write\",\"metadata\":\"read\",\"contents\":\"read\"},\"events\":[\"push\",\"pull_request\"],\"single_file_name\":\"config.yaml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"repository_selection\":\"all\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"app_slug\":\"github-actions\"}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List plans",
    "scope": "apps",
    "id": "listPlans",
    "method": "GET",
    "url": "/marketplace_listing/plans",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-plans",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}]"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List plans (stubbed)",
    "scope": "apps",
    "id": "listPlansStubbed",
    "method": "GET",
    "url": "/marketplace_listing/stubbed/plans",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-plans-stubbed",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}]"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories accessible to the app installation",
    "scope": "apps",
    "id": "listReposAccessibleToInstallation",
    "method": "GET",
    "url": "/installation/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-app-installation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List subscriptions for the authenticated user",
    "scope": "apps",
    "id": "listSubscriptionsForAuthenticatedUser",
    "method": "GET",
    "url": "/user/marketplace_purchases",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"billing_cycle\":\"monthly\",\"next_billing_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"on_free_trial\":true,\"free_trial_ends_on\":\"2017-11-11T00:00:00Z\",\"updated_at\":\"2017-11-02T01:12:12Z\",\"account\":{\"login\":\"github\",\"id\":4,\"url\":\"https://api.github.com/orgs/github\",\"email\":null,\"organization_billing_email\":\"billing@github.com\",\"type\":\"Organization\"},\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List subscriptions for the authenticated user (stubbed)",
    "scope": "apps",
    "id": "listSubscriptionsForAuthenticatedUserStubbed",
    "method": "GET",
    "url": "/user/marketplace_purchases/stubbed",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user-stubbed",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"billing_cycle\":\"monthly\",\"next_billing_date\":\"2017-11-11T00:00:00Z\",\"unit_count\":null,\"on_free_trial\":true,\"free_trial_ends_on\":\"2017-11-11T00:00:00Z\",\"updated_at\":\"2017-11-02T01:12:12Z\",\"account\":{\"login\":\"github\",\"id\":4,\"url\":\"https://api.github.com/orgs/github\",\"email\":null,\"organization_billing_email\":\"billing@github.com\",\"type\":\"Organization\"},\"plan\":{\"url\":\"https://api.github.com/marketplace_listing/plans/1313\",\"accounts_url\":\"https://api.github.com/marketplace_listing/plans/1313/accounts\",\"id\":1313,\"number\":3,\"name\":\"Pro\",\"description\":\"A professional-grade CI solution\",\"monthly_price_in_cents\":1099,\"yearly_price_in_cents\":11870,\"price_model\":\"flat-rate\",\"has_free_trial\":true,\"unit_name\":null,\"state\":\"published\",\"bullets\":[\"Up to 25 private repositories\",\"11 concurrent builds\"]}}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove a repository from an app installation",
    "scope": "apps",
    "id": "removeRepoFromInstallation",
    "method": "DELETE",
    "url": "/user/installations/{installation_id}/repositories/{repository_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Remove a single repository from an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations#create-a-new-authorization) or [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#remove-a-repository-from-an-app-installation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repository_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Reset an authorization",
    "scope": "apps",
    "id": "resetAuthorization",
    "method": "POST",
    "url": "/applications/{client_id}/tokens/{access_token}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#reset-an-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Reset a token",
    "scope": "apps",
    "id": "resetToken",
    "method": "PATCH",
    "url": "/applications/{client_id}/token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#reset-a-token",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "The access_token of the OAuth application.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Revoke an authorization for an application",
    "scope": "apps",
    "id": "revokeAuthorizationForApplication",
    "method": "DELETE",
    "url": "/applications/{client_id}/tokens/{access_token}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#revoke-an-authorization-for-an-application",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Revoke a grant for an application",
    "scope": "apps",
    "id": "revokeGrantForApplication",
    "method": "DELETE",
    "url": "/applications/{client_id}/grants/{access_token}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under \"Authorized OAuth Apps\" on GitHub](https://github.com/settings/applications#authorized).",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#revoke-a-grant-for-an-application",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "access_token",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Revoke an installation access token",
    "scope": "apps",
    "id": "revokeInstallationAccessToken",
    "method": "DELETE",
    "url": "/installation/token",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Revokes the installation token you're using to authenticate as an installation and access this endpoint.\n\nOnce an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the \"[Create an installation access token for an app](https://docs.github.com/rest/reference/apps#create-an-installation-access-token-for-an-app)\" endpoint.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/apps#revoke-an-installation-access-token",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Suspend an app installation",
    "scope": "apps",
    "id": "suspendInstallation",
    "method": "PUT",
    "url": "/app/installations/{installation_id}/suspended",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see \"[Suspending a GitHub App installation](https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/).\"\n\nSuspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub API or webhook events is blocked for that account.\n\nTo suspend a GitHub App, you must be an account owner or have admin permissions in the repository or organization where the app is installed.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#suspend-an-app-installation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unsuspend an app installation",
    "scope": "apps",
    "id": "unsuspendInstallation",
    "method": "DELETE",
    "url": "/app/installations/{installation_id}/suspended",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see \"[Suspending a GitHub App installation](https://docs.github.com/apps/managing-github-apps/suspending-a-github-app-installation/).\"\n\nRemoves a GitHub App installation suspension.\n\nTo unsuspend a GitHub App, you must be an account owner or have admin permissions in the repository or organization where the app is installed and suspended.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps/#unsuspend-an-app-installation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a webhook configuration for an app",
    "scope": "apps",
    "id": "updateWebhookConfigForApp",
    "method": "PATCH",
    "url": "/app/hook/config",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"[Creating a GitHub App](/developers/apps/creating-a-github-app).\"\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/apps#update-a-webhook-configuration-for-an-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\",\"url\":\"https://example.com/webhook\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Actions billing for an organization",
    "scope": "billing",
    "id": "getGithubActionsBillingOrg",
    "method": "GET",
    "url": "/orgs/{org}/settings/billing/actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAccess tokens must have the `read:org` scope.",
    "documentationUrl": "https://docs.github.com/v3/billing/#get-github-actions-billing-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_minutes_used\":305,\"total_paid_minutes_used\":0,\"included_minutes\":3000,\"minutes_used_breakdown\":{\"UBUNTU\":205,\"MACOS\":10,\"WINDOWS\":90}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Actions billing for a user",
    "scope": "billing",
    "id": "getGithubActionsBillingUser",
    "method": "GET",
    "url": "/users/{username}/settings/billing/actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAccess tokens must have the `user` scope.",
    "documentationUrl": "https://docs.github.com/v3/billing/#get-github-actions-billing-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_minutes_used\":305,\"total_paid_minutes_used\":0,\"included_minutes\":3000,\"minutes_used_breakdown\":{\"UBUNTU\":205,\"MACOS\":10,\"WINDOWS\":90}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Packages billing for an organization",
    "scope": "billing",
    "id": "getGithubPackagesBillingOrg",
    "method": "GET",
    "url": "/orgs/{org}/settings/billing/packages",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the free and paid storage usued for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `read:org` scope.",
    "documentationUrl": "https://docs.github.com/v3/billing/#get-github-packages-billing-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_gigabytes_bandwidth_used\":50,\"total_paid_gigabytes_bandwidth_used\":40,\"included_gigabytes_bandwidth\":10}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Packages billing for a user",
    "scope": "billing",
    "id": "getGithubPackagesBillingUser",
    "method": "GET",
    "url": "/users/{username}/settings/billing/packages",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `user` scope.",
    "documentationUrl": "https://docs.github.com/v3/billing/#get-github-packages-billing-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_gigabytes_bandwidth_used\":50,\"total_paid_gigabytes_bandwidth_used\":40,\"included_gigabytes_bandwidth\":10}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get shared storage billing for an organization",
    "scope": "billing",
    "id": "getSharedStorageBillingOrg",
    "method": "GET",
    "url": "/orgs/{org}/settings/billing/shared-storage",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `read:org` scope.",
    "documentationUrl": "https://docs.github.com/v3/billing/#get-shared-storage-billing-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"days_left_in_billing_cycle\":20,\"estimated_paid_storage_for_month\":15,\"estimated_storage_for_month\":40}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get shared storage billing for a user",
    "scope": "billing",
    "id": "getSharedStorageBillingUser",
    "method": "GET",
    "url": "/users/{username}/settings/billing/shared-storage",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `user` scope.",
    "documentationUrl": "https://docs.github.com/v3/billing/#get-shared-storage-billing-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"days_left_in_billing_cycle\":20,\"estimated_paid_storage_for_month\":15,\"estimated_storage_for_month\":40}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a check run",
    "scope": "checks",
    "id": "create",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/check-runs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.\n\nIn a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#create-a-check-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the check. For example, \"code-coverage\".",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head_sha",
        "description": "The SHA of the commit.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "details_url",
        "description": "The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "external_id",
        "description": "A reference for the run on the integrator's system.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "started_at",
        "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "conclusion",
        "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `skipped`, `timed_out`, or `action_required`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. Only GitHub can change a check run conclusion to `stale`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": [
          "success",
          "failure",
          "neutral",
          "cancelled",
          "skipped",
          "timed_out",
          "action_required"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "completed_at",
        "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output",
        "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/rest/reference/checks#output-object) description.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.title",
        "description": "The title of the check run.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.summary",
        "description": "The summary of the check run. This parameter supports Markdown.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.text",
        "description": "The details of the check run. This parameter supports Markdown.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations",
        "description": "Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/rest/reference/checks#annotations-object) description for details about how to use this parameter.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].path",
        "description": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_line",
        "description": "The start line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_line",
        "description": "The end line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_column",
        "description": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_column",
        "description": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].annotation_level",
        "description": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["notice", "warning", "failure"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].message",
        "description": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].title",
        "description": "The title that represents the annotation. The maximum size is 255 characters.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].raw_details",
        "description": "Details about this annotation. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images",
        "description": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/rest/reference/checks#images-object) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].alt",
        "description": "The alternative text for the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].image_url",
        "description": "The full URL of the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].caption",
        "description": "A short image description.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions",
        "description": "Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions).\" To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions).\"",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].label",
        "description": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].description",
        "description": "A short explanation of what this action would do. The maximum size is 40 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].identifier",
        "description": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"42\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"https://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"in_progress\",\"conclusion\":null,\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":null,\"output\":{\"title\":\"Mighty Readme Report\",\"summary\":\"\",\"text\":\"\",\"annotations_count\":1,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          },
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"https://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a check suite",
    "scope": "checks",
    "id": "createSuite",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/check-suites",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://docs.github.com/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Update repository preferences for check suites](https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites)\". Your GitHub App must have the `checks:write` permission to create check suites.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#create-a-check-suite",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head_sha",
        "description": "The sha of the head commit.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":5,\"node_id\":\"MDEwOkNoZWNrU3VpdGU1\",\"head_branch\":\"master\",\"head_sha\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"url\":\"https://api.github.com/repos/github/hello-world/check-suites/5\",\"before\":\"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\"after\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"pull_requests\":[],\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"template_repository\":\"octocat/template-repo\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0},\"head_commit\":{\"id\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"tree_id\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"message\":\"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\"timestamp\":\"2016-10-10T00:00:00Z\",\"author\":{\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"},\"committer\":{\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"}},\"latest_check_runs_count\":1,\"check_runs_url\":\"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a check run",
    "scope": "checks",
    "id": "get",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#get-a-check-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"https://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a check suite",
    "scope": "checks",
    "id": "getSuite",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-suites/{check_suite_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#get-a-check-suite",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":5,\"node_id\":\"MDEwOkNoZWNrU3VpdGU1\",\"head_branch\":\"master\",\"head_sha\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"url\":\"https://api.github.com/repos/github/hello-world/check-suites/5\",\"before\":\"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\"after\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"pull_requests\":[],\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"template_repository\":\"octocat/template-repo\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0},\"head_commit\":{\"id\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"tree_id\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"message\":\"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\"timestamp\":\"2016-10-10T00:00:00Z\",\"author\":{\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"},\"committer\":{\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"}},\"latest_check_runs_count\":1,\"check_runs_url\":\"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List check run annotations",
    "scope": "checks",
    "id": "listAnnotations",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#list-check-run-annotations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"path\":\"README.md\",\"start_line\":2,\"end_line\":2,\"start_column\":5,\"end_column\":10,\"annotation_level\":\"warning\",\"title\":\"Spell Checker\",\"message\":\"Check your spelling for 'banaas'.\",\"raw_details\":\"Do you mean 'bananas' or 'banana'?\",\"blob_href\":\"https://api.github.com/repos/github/rest-api-description/git/blobs/abc\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List check runs for a Git reference",
    "scope": "checks",
    "id": "listForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/check-runs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#list-check-runs-for-a-git-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["latest", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"check_runs\":[{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"https://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List check runs in a check suite",
    "scope": "checks",
    "id": "listForSuite",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["latest", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"check_runs\":[{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"https://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List check suites for a Git reference",
    "scope": "checks",
    "id": "listSuitesForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/check-suites",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "app_id",
        "description": "Filters check suites by GitHub App `id`.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"check_suites\":[{\"id\":5,\"node_id\":\"MDEwOkNoZWNrU3VpdGU1\",\"head_branch\":\"master\",\"head_sha\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"url\":\"https://api.github.com/repos/github/hello-world/check-suites/5\",\"before\":\"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\"after\":\"d6fde92930d4715a2b49857d24b940956b26d2d3\",\"pull_requests\":[],\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0},\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"head_commit\":{\"id\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"tree_id\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"message\":\"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\"timestamp\":\"2016-10-10T00:00:00Z\",\"author\":{\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"},\"committer\":{\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"}},\"latest_check_runs_count\":1,\"check_runs_url\":\"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Rerequest a check suite",
    "scope": "checks",
    "id": "rerequestSuite",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://docs.github.com/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#rerequest-a-check-suite",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 201, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Update repository preferences for check suites",
    "scope": "checks",
    "id": "setSuitesPreferences",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/check-suites/preferences",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_trigger_checks",
        "description": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://docs.github.com/rest/reference/checks#auto_trigger_checks-object) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_trigger_checks[].app_id",
        "description": "The `id` of the GitHub App.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_trigger_checks[].setting",
        "description": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
        "in": "BODY",
        "type": "boolean",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"preferences\":{\"auto_trigger_checks\":[{\"app_id\":2,\"setting\":true},{\"app_id\":4,\"setting\":false}]},\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"http://choosealicense.com/licenses/mit/\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a check run",
    "scope": "checks",
    "id": "update",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.",
    "documentationUrl": "https://docs.github.com/rest/reference/checks#update-a-check-run",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the check. For example, \"code-coverage\".",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "details_url",
        "description": "The URL of the integrator's site that has the full details of the check.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "external_id",
        "description": "A reference for the run on the integrator's system.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "started_at",
        "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status",
        "description": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["queued", "in_progress", "completed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "conclusion",
        "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `skipped`, `timed_out`, or `action_required`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. Only GitHub can change a check run conclusion to `stale`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": [
          "success",
          "failure",
          "neutral",
          "cancelled",
          "skipped",
          "timed_out",
          "action_required"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "completed_at",
        "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output",
        "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/rest/reference/checks#output-object-1) description.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.title",
        "description": "**Required**.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.summary",
        "description": "Can contain Markdown.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.text",
        "description": "Can contain Markdown.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations",
        "description": "Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/rest/reference/checks#annotations-object-1) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].path",
        "description": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_line",
        "description": "The start line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_line",
        "description": "The end line of the annotation.",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].start_column",
        "description": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].end_column",
        "description": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].annotation_level",
        "description": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["notice", "warning", "failure"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].message",
        "description": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].title",
        "description": "The title that represents the annotation. The maximum size is 255 characters.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.annotations[].raw_details",
        "description": "Details about this annotation. The maximum size is 64 KB.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images",
        "description": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/rest/reference/checks#annotations-object-1) description for details.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].alt",
        "description": "The alternative text for the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].image_url",
        "description": "The full URL of the image.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "output.images[].caption",
        "description": "A short image description.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions",
        "description": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions).\"",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].label",
        "description": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].description",
        "description": "A short explanation of what this action would do. The maximum size is 40 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "actions[].identifier",
        "description": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":4,\"head_sha\":\"ce587453ced02b1526dfb4cb910479d431683101\",\"node_id\":\"MDg6Q2hlY2tSdW40\",\"external_id\":\"\",\"url\":\"https://api.github.com/repos/github/hello-world/check-runs/4\",\"html_url\":\"https://github.com/github/hello-world/runs/4\",\"details_url\":\"https://example.com\",\"status\":\"completed\",\"conclusion\":\"neutral\",\"started_at\":\"2018-05-04T01:14:52Z\",\"completed_at\":\"2018-05-04T01:14:52Z\",\"output\":{\"title\":\"Mighty Readme report\",\"summary\":\"There are 0 failures, 2 warnings, and 1 notice.\",\"text\":\"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\"annotations_count\":2,\"annotations_url\":\"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"},\"name\":\"mighty_readme\",\"check_suite\":{\"id\":5},\"app\":{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]},\"pull_requests\":[{\"url\":\"https://api.github.com/repos/github/hello-world/pulls/1\",\"id\":1934,\"number\":3956,\"head\":{\"ref\":\"say-hello\",\"sha\":\"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}},\"base\":{\"ref\":\"master\",\"sha\":\"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\"repo\":{\"id\":526,\"url\":\"https://api.github.com/repos/github/hello-world\",\"name\":\"hello-world\"}}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a code scanning alert",
    "scope": "codeScanning",
    "id": "getAlert",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.\n\nThe security `alert_number` is found at the end of the security alert's URL. For example, the security alert ID for `https://github.com/Octo-org/octo-repo/security/code-scanning/88` is `88`.",
    "documentationUrl": "https://docs.github.com/v3/code-scanning/#get-a-code-scanning-alert",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "alert_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "alert_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": "alert_number",
        "deprecated": true
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"number\":42,\"created_at\":\"2020-06-19T11:21:34Z\",\"url\":\"https://api.github.com/repos/github/hello-world/code-scanning/alerts/42\",\"html_url\":\"https://github.com/github/hello-world/code-scanning/42\",\"instances\":[{\"ref\":\"refs/heads/main\",\"analysis_key\":\".github/workflows/codeql-analysis.yml:CodeQL-Build\",\"environment\":\"\",\"state\":\"fixed\"},{\"ref\":\"refs/pull/3740/head\",\"analysis_key\":\".github/workflows/codeql-analysis.yml:CodeQL-Build\",\"environment\":\"\",\"state\":\"dismissed\"}],\"state\":\"dismissed\",\"dismissed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"dismissed_at\":\"2020-02-14T12:29:18Z\",\"dismissed_reason\":\"false positive\",\"rule\":{\"id\":\"js/polynomial-redos\",\"severity\":\"warning\",\"description\":\"Polynomial regular expression used on uncontrolled data\"},\"tool\":{\"name\":\"CodeQL command-line toolchain\",\"version\":null}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List code scanning alerts for a repository",
    "scope": "codeScanning",
    "id": "listAlertsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/code-scanning/alerts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all open code scanning alerts for the default branch (usually `main` or `master`). For private repos, you must use an access token with the `repo` scope. For public repos, you must use an access token with `public_repo` and `repo:security_events` scopes. GitHub Apps must have the `security_events` read permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/code-scanning/#list-code-scanning-alerts-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Set to `open`, `fixed`, or `dismissed` to list code scanning alerts in a specific state.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "dismissed", "fixed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "Set a full Git reference to list alerts for a specific branch. The `ref` must be formatted as `refs/heads/<branch name>`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"number\":4,\"created_at\":\"2020-02-13T12:29:18Z\",\"url\":\"https://api.github.com/repos/github/hello-world/code-scanning/alerts/4\",\"html_url\":\"https://github.com/github/hello-world/code-scanning/4\",\"state\":\"open\",\"dismissed_by\":null,\"dismissed_at\":null,\"dismissed_reason\":null,\"rule\":{\"id\":\"js/zipslip\",\"severity\":\"error\",\"description\":\"Arbitrary file write during zip extraction\"},\"tool\":{\"name\":\"CodeQL command-line toolchain\",\"version\":null}},{\"number\":3,\"created_at\":\"2020-02-13T12:29:18Z\",\"url\":\"https://api.github.com/repos/github/hello-world/code-scanning/alerts/3\",\"html_url\":\"https://github.com/github/hello-world/code-scanning/3\",\"state\":\"dismissed\",\"dismissed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"dismissed_at\":\"2020-02-14T12:29:18Z\",\"dismissed_reason\":\"false positive\",\"rule\":{\"id\":\"js/zipslip\",\"severity\":\"error\",\"description\":\"Arbitrary file write during zip extraction\"},\"tool\":{\"name\":\"CodeQL command-line toolchain\",\"version\":null}}]"
          }
        ]
      },
      {
        "code": 404,
        "description": "Response if the ref does not match an existing ref",
        "examples": null
      },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List recent code scanning analyses for a repository",
    "scope": "codeScanning",
    "id": "listRecentAnalyses",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/code-scanning/analyses",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the details of recent code scanning analyses for a repository. For private repos, you must use an access token with the `repo` scope. For public repos, you must use an access token with `public_repo` and `repo:security_events` scopes. GitHub Apps must have the `security_events` read permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/code-scanning/#list-recent-analyses",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "Set a full Git reference to list alerts for a specific branch. The `ref` must be formatted as `refs/heads/<branch name>`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tool_name",
        "description": "Set a single code scanning tool name to filter alerts by tool.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"ref\":\"refs/heads/master\",\"commit_sha\":\"d99612c3e1f2970085cfbaeadf8f010ef69bad83\",\"analysis_key\":\".github/workflows/codeql-analysis.yml:analyze\",\"tool_name\":\"CodeQL command-line toolchain\",\"environment\":\"{}\",\"error\":\"\",\"created_at\":\"2020-08-27T15:05:21Z\"},{\"ref\":\"refs/heads/my-branch\",\"commit_sha\":\"c8cff6510d4d084fb1b4aa13b64b97ca12b07321\",\"analysis_key\":\".github/workflows/shiftleft.yml:build\",\"tool_name\":\"Python Security Analysis\",\"environment\":\"{}\",\"error\":\"\",\"created_at\":\"2020-08-31T22:46:44Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a code scanning alert",
    "scope": "codeScanning",
    "id": "updateAlert",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates the status of a single code scanning alert. For private repos, you must use an access token with the `repo` scope. For public repos, you must use an access token with `public_repo` and `repo:security_events` scopes.\nGitHub Apps must have the `security_events` write permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/code-scanning/#upload-a-code-scanning-alert",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "alert_number",
        "description": "The security alert number, found at the end of the security alert's URL.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Sets the state of the code scanning alert. Can be one of `open` or `dismissed`. You must provide `dismissed_reason` when you set the state to `dismissed`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["open", "dismissed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismissed_reason",
        "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"number\":42,\"created_at\":\"2020-08-25T21:28:36Z\",\"url\":\"https://api.github.com/repos/github/hello-world/code-scanning/alerts/42\",\"html_url\":\"https://github.com/github/hello-world/code-scanning/42\",\"instances\":[{\"ref\":\"refs/heads/codeql-analysis-yml\",\"analysis_key\":\".github/workflows/codeql-analysis.yml:CodeQL-Build\",\"environment\":\"\",\"state\":\"dismissed\"},{\"ref\":\"refs/pull/3740/head\",\"analysis_key\":\".github/workflows/codeql-analysis.yml:CodeQL-Build\",\"environment\":\"\",\"state\":\"dismissed\"}],\"state\":\"dismissed\",\"dismissed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"dismissed_at\":\"2020-09-02T22:34:56Z\",\"dismissed_reason\":\"false positive\",\"rule\":{\"id\":\"js/polynomial-redos\",\"severity\":\"warning\",\"description\":\"Polynomial regular expression used on uncontrolled data\"},\"tool\":{\"name\":\"CodeQL command-line toolchain\",\"version\":null}}"
          }
        ]
      },
      {
        "code": 403,
        "description": "Response if the repository is archived",
        "examples": null
      },
      {
        "code": 503,
        "description": "Response when code scanning is not available and you should try again at a later time",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Upload a SARIF file",
    "scope": "codeScanning",
    "id": "uploadSarif",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/code-scanning/sarifs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Upload a SARIF file containing the results of a code scanning analysis to make the results available in a repository.\nFor private repos, you must use an access token with the `repo` scope. For public repos, you must use an access token with `public_repo` and `repo:security_events` scopes. GitHub Apps must have the `security_events` write permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/code-scanning/#upload-a-sarif-analysis",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "The commit SHA of the code scanning analysis file.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": "^[0-9a-fA-F]+$",
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The full Git reference of the code scanning analysis file, formatted as `refs/heads/<branch name>`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sarif",
        "description": "A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html) and then translate the contents of the file into a Base64 encoding string.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "checkout_uri",
        "description": "The base directory used in the analysis, as it appears in the SARIF file.\nThis property is used to convert file paths from absolute to relative, so that alerts can be mapped to their correct location in the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "started_at",
        "description": "The time that the analysis run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tool_name",
        "description": "The name of the tool used to generate the code scanning analysis alert.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 202, "description": "response", "examples": null },
      {
        "code": 400,
        "description": "Response if the `sarif` field is invalid",
        "examples": null
      },
      {
        "code": 403,
        "description": "Response if the repository is archived",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if `commit_sha` or `ref` cannot be found",
        "examples": null
      },
      {
        "code": 413,
        "description": "Response if the `sarif` field is too large",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Get all codes of conduct",
    "scope": "codesOfConduct",
    "id": "getAllCodesOfConduct",
    "method": "GET",
    "url": "/codes_of_conduct",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/codes_of_conduct/#get-all-codes-of-conduct",
    "previews": [{ "name": "scarlet-witch" }],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"key\":\"citizen_code_of_conduct\",\"name\":\"Citizen Code of Conduct\",\"url\":\"https://api.github.com/codes_of_conduct/citizen_code_of_conduct\",\"html_url\":\"http://citizencodeofconduct.org/\"},{\"key\":\"contributor_covenant\",\"name\":\"Contributor Covenant\",\"url\":\"https://api.github.com/codes_of_conduct/contributor_covenant\",\"html_url\":\"https://www.contributor-covenant.org/version/2/0/code_of_conduct/\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a code of conduct",
    "scope": "codesOfConduct",
    "id": "getConductCode",
    "method": "GET",
    "url": "/codes_of_conduct/{key}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/codes_of_conduct/#get-a-code-of-conduct",
    "previews": [{ "name": "scarlet-witch" }],
    "headers": [],
    "parameters": [
      {
        "name": "key",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key\":\"contributor_covenant\",\"name\":\"Contributor Covenant\",\"url\":\"https://api.github.com/codes_of_conduct/contributor_covenant\",\"body\":\"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\",\"html_url\":\"http://contributor-covenant.org/version/1/4/\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get the code of conduct for a repository",
    "scope": "codesOfConduct",
    "id": "getForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/community/code_of_conduct",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This method returns the contents of the repository's code of conduct file, if one is detected.",
    "documentationUrl": "https://docs.github.com/v3/codes_of_conduct/#get-the-code-of-conduct-for-a-repository",
    "previews": [{ "name": "scarlet-witch" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key\":\"contributor_covenant\",\"name\":\"Contributor Covenant\",\"url\":\"https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md\",\"body\":\"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include=>\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include=>\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\nto any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\nposting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\",\"html_url\":\"https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get emojis",
    "scope": "emojis",
    "id": "get",
    "method": "GET",
    "url": "/emojis",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all the emojis available to use on GitHub.",
    "documentationUrl": "https://docs.github.com/v3/emojis/#get-emojis",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Disable a selected organization for GitHub Actions in an enterprise",
    "scope": "enterpriseAdmin",
    "id": "disableSelectedOrganizationGithubActionsEnterprise",
    "method": "DELETE",
    "url": "/enterprises/{enterprise}/actions/permissions/organizations/{org_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#disable-a-selected-organization-for-github-actions-in-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "org_id",
        "description": "Unique identifier of an organization.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Enable a selected organization for GitHub Actions in an enterprise",
    "scope": "enterpriseAdmin",
    "id": "enableSelectedOrganizationGithubActionsEnterprise",
    "method": "PUT",
    "url": "/enterprises/{enterprise}/actions/permissions/organizations/{org_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#enable-a-selected-organization-for-github-actions-in-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "org_id",
        "description": "Unique identifier of an organization.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get allowed actions for an enterprise",
    "scope": "enterpriseAdmin",
    "id": "getAllowedActionsEnterprise",
    "method": "GET",
    "url": "/enterprises/{enterprise}/actions/permissions/selected-actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the selected actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#get-allowed-actions-for-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"github_owned_allowed\":true,\"verified_allowed\":false,\"patterns_allowed\":[\"monalisa/octocat@*\",\"docker/*\"]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Actions permissions for an enterprise",
    "scope": "enterpriseAdmin",
    "id": "getGithubActionsPermissionsEnterprise",
    "method": "GET",
    "url": "/enterprises/{enterprise}/actions/permissions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#get-github-actions-permissions-for-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"enabled_organizations\":\"all\",\"allowed_actions\":\"selected\",\"selected_actions_url\":\"https://api.github.com/enterprises/2/actions/permissions/selected-actions\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List selected organizations enabled for GitHub Actions in an enterprise",
    "scope": "enterpriseAdmin",
    "id": "listSelectedOrganizationsEnabledGithubActionsEnterprise",
    "method": "GET",
    "url": "/enterprises/{enterprise}/actions/permissions/organizations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#list-selected-organizations-enabled-for-github-actions-in-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"organizations\":[{\"login\":\"octocat\",\"id\":161335,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"url\":\"https://api.github.com/orgs/octo-org\",\"repos_url\":\"https://api.github.com/orgs/octo-org/repos\",\"events_url\":\"https://api.github.com/orgs/octo-org/events\",\"hooks_url\":\"https://api.github.com/orgs/octo-org/hooks\",\"issues_url\":\"https://api.github.com/orgs/octo-org/issues\",\"members_url\":\"https://api.github.com/orgs/octo-org/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/octo-org/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Set allowed actions for an enterprise",
    "scope": "enterpriseAdmin",
    "id": "setAllowedActionsEnterprise",
    "method": "PUT",
    "url": "/enterprises/{enterprise}/actions/permissions/selected-actions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Sets the actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#set-allowed-actions-for-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "github_owned_allowed",
        "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "verified_allowed",
        "description": "Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "patterns_allowed",
        "description": "Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.\"",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set GitHub Actions permissions for an enterprise",
    "scope": "enterpriseAdmin",
    "id": "setGithubActionsPermissionsEnterprise",
    "method": "PUT",
    "url": "/enterprises/{enterprise}/actions/permissions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Sets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#set-github-actions-permissions-for-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "enabled_organizations",
        "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["all", "none", "selected"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allowed_actions",
        "description": "The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `local_only`, or `selected`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["all", "local_only", "selected"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set selected organizations enabled for GitHub Actions in an enterprise",
    "scope": "enterpriseAdmin",
    "id": "setSelectedOrganizationsEnabledGithubActionsEnterprise",
    "method": "PUT",
    "url": "/enterprises/{enterprise}/actions/permissions/organizations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/enterprise-admin#set-selected-organizations-enabled-for-github-actions-in-an-enterprise",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "selected_organization_ids",
        "description": "List of organization IDs to enable for GitHub Actions.",
        "in": "BODY",
        "type": "integer[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check if a gist is starred",
    "scope": "gists",
    "id": "checkIsStarred",
    "method": "GET",
    "url": "/gists/{gist_id}/star",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/gists/#check-if-a-gist-is-starred",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if gist is starred",
        "examples": null
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "Response if gist is not starred",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a gist",
    "scope": "gists",
    "id": "create",
    "method": "POST",
    "url": "/gists",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.",
    "documentationUrl": "https://docs.github.com/v3/gists/#create-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "description",
        "description": "Description of the gist",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files",
        "description": "Names and content for the files that make up the gist",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.*",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.*.content",
        "description": "Content of the file",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "public",
        "description": "",
        "in": "BODY",
        "type": null,
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a gist comment",
    "scope": "gists",
    "id": "createComment",
    "method": "POST",
    "url": "/gists/{gist_id}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/gists#create-a-gist-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The comment text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a gist",
    "scope": "gists",
    "id": "delete",
    "method": "DELETE",
    "url": "/gists/{gist_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/gists/#delete-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a gist comment",
    "scope": "gists",
    "id": "deleteComment",
    "method": "DELETE",
    "url": "/gists/{gist_id}/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/gists#delete-a-gist-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Fork a gist",
    "scope": "gists",
    "id": "fork",
    "method": "POST",
    "url": "/gists/{gist_id}/forks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note**: This was previously `/gists/:gist_id/fork`.",
    "documentationUrl": "https://docs.github.com/v3/gists/#fork-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a gist",
    "scope": "gists",
    "id": "get",
    "method": "GET",
    "url": "/gists/{gist_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/gists/#get-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden Gist", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a gist comment",
    "scope": "gists",
    "id": "getComment",
    "method": "GET",
    "url": "/gists/{gist_id}/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/gists#get-a-gist-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden Gist", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a gist revision",
    "scope": "gists",
    "id": "getRevision",
    "method": "GET",
    "url": "/gists/{gist_id}/{sha}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/gists/#get-a-gist-revision",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List gists for the authenticated user",
    "scope": "gists",
    "id": "list",
    "method": "GET",
    "url": "/gists",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:",
    "documentationUrl": "https://docs.github.com/v3/gists/#list-gists-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List gist comments",
    "scope": "gists",
    "id": "listComments",
    "method": "GET",
    "url": "/gists/{gist_id}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/gists#list-gist-comments",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\",\"author_association\":\"collaborator\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List gist commits",
    "scope": "gists",
    "id": "listCommits",
    "method": "GET",
    "url": "/gists/{gist_id}/commits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/gists/#list-gist-commits",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"version\":\"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"change_status\":{\"deletions\":0,\"additions\":180,\"total\":180},\"committed_at\":\"2010-04-14T02:15:15Z\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List gists for a user",
    "scope": "gists",
    "id": "listForUser",
    "method": "GET",
    "url": "/users/{username}/gists",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists public gists for the specified user:",
    "documentationUrl": "https://docs.github.com/v3/gists/#list-gists-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List gist forks",
    "scope": "gists",
    "id": "listForks",
    "method": "GET",
    "url": "/gists/{gist_id}/forks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/gists/#list-gist-forks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/dee9c42e4998ce2ea439\",\"id\":\"dee9c42e4998ce2ea439\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List public gists",
    "scope": "gists",
    "id": "listPublic",
    "method": "GET",
    "url": "/gists/public",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.",
    "documentationUrl": "https://docs.github.com/v3/gists/#list-public-gists",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List starred gists",
    "scope": "gists",
    "id": "listStarred",
    "method": "GET",
    "url": "/gists/starred",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the authenticated user's starred gists:",
    "documentationUrl": "https://docs.github.com/v3/gists/#list-starred-gists",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"files\":{\"hello_world.rb\":{\"filename\":\"hello_world.rb\",\"type\":\"application/x-ruby\",\"language\":\"Ruby\",\"raw_url\":\"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\"size\":167}},\"public\":true,\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"user\":null,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"truncated\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Star a gist",
    "scope": "gists",
    "id": "star",
    "method": "PUT",
    "url": "/gists/{gist_id}/star",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "documentationUrl": "https://docs.github.com/v3/gists/#star-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unstar a gist",
    "scope": "gists",
    "id": "unstar",
    "method": "DELETE",
    "url": "/gists/{gist_id}/star",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/gists/#unstar-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a gist",
    "scope": "gists",
    "id": "update",
    "method": "PATCH",
    "url": "/gists/{gist_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.",
    "documentationUrl": "https://docs.github.com/v3/gists/#update-a-gist",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "Description of the gist",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files",
        "description": "Names of files to be updated",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.*",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.*.content",
        "description": "The new content of the file",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "files.*.filename",
        "description": "The new filename for the file",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d\",\"forks_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\"commits_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\"id\":\"aa5a315d61ae9438b18d\",\"node_id\":\"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\"git_pull_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"git_push_url\":\"https://gist.github.com/aa5a315d61ae9438b18d.git\",\"html_url\":\"https://gist.github.com/aa5a315d61ae9438b18d\",\"created_at\":\"2010-04-14T02:15:15Z\",\"updated_at\":\"2011-06-20T11:34:15Z\",\"description\":\"Hello World Examples\",\"comments\":0,\"comments_url\":\"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a gist comment",
    "scope": "gists",
    "id": "updateComment",
    "method": "PATCH",
    "url": "/gists/{gist_id}/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/gists#update-a-gist-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The comment text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDExOkdpc3RDb21tZW50MQ==\",\"url\":\"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\"body\":\"Just commenting for the sake of commenting\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-18T23:23:56Z\",\"updated_at\":\"2011-04-18T23:23:56Z\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a blob",
    "scope": "git",
    "id": "createBlob",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/blobs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/git#create-a-blob",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The new blob's content.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "encoding",
        "description": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\"sha\":\"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 409, "description": "Conflict", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a commit",
    "scope": "git",
    "id": "createCommit",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/commits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "documentationUrl": "https://docs.github.com/rest/reference/git#create-a-commit",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree",
        "description": "The SHA of the tree object this commit points to",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "parents",
        "description": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.date",
        "description": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.date",
        "description": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "signature",
        "description": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132\",\"sha\":\"827efc6d56897b048c772eb4087f854f46256132\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0\",\"sha\":\"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a reference",
    "scope": "git",
    "id": "createRef",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/refs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.",
    "documentationUrl": "https://docs.github.com/rest/reference/git#create-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The SHA1 value for this reference.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "key",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"ref\":\"refs/heads/featureA\",\"node_id\":\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\"object\":{\"type\":\"commit\",\"sha\":\"aa218f56b14c9653891f9e74264a383fa43fefbd\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"}}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a tag object",
    "scope": "git",
    "id": "createTag",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/tags",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://docs.github.com/rest/reference/git#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://docs.github.com/rest/reference/git#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "documentationUrl": "https://docs.github.com/rest/reference/git#create-a-tag-object",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tag",
        "description": "The tag's name. This is typically a version (e.g., \"v0.0.1\").",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The tag message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "object",
        "description": "The SHA of the git object this is tagging.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "type",
        "description": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["commit", "tree", "blob"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger",
        "description": "An object with information about the individual creating the tag.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger.name",
        "description": "The name of the author of the tag",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger.email",
        "description": "The email of the author of the tag",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tagger.date",
        "description": "When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"node_id\":\"MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==\",\"tag\":\"v0.0.1\",\"sha\":\"940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"message\":\"initial version\",\"tagger\":{\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\",\"date\":\"2014-11-07T22:01:45Z\"},\"object\":{\"type\":\"commit\",\"sha\":\"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"},\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a tree",
    "scope": "git",
    "id": "createTree",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/git/trees",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.\n\nIf you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"[Create a commit](https://docs.github.com/rest/reference/git#create-a-commit)\" and \"[Update a reference](https://docs.github.com/rest/reference/git#update-a-reference).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/git#create-a-tree",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree",
        "description": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure.",
        "in": "BODY",
        "type": "object[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].path",
        "description": "The file referenced in the tree.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].mode",
        "description": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["100644", "100755", "040000", "160000", "120000"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].type",
        "description": "Either `blob`, `tree`, or `commit`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["blob", "tree", "commit"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].sha",
        "description": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree[].content",
        "description": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base_tree",
        "description": "The SHA1 of the tree you want to update with new data. If you don't set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"sha\":\"cd8274d15fa3ae2ab983129fb037999f264ba9a7\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7\",\"tree\":[{\"path\":\"file.rb\",\"mode\":\"100644\",\"type\":\"blob\",\"size\":132,\"sha\":\"7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\"}],\"truncated\":true}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a reference",
    "scope": "git",
    "id": "deleteRef",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/git/refs/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/git#delete-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a blob",
    "scope": "git",
    "id": "getBlob",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/blobs/{file_sha}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size.",
    "documentationUrl": "https://docs.github.com/rest/reference/git#get-a-blob",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "file_sha",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":\"Q29udGVudCBvZiB0aGUgYmxvYg==\",\"encoding\":\"base64\",\"url\":\"https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\"sha\":\"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\"size\":19,\"node_id\":\"Q29udGVudCBvZiB0aGUgYmxvYg==\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a commit",
    "scope": "git",
    "id": "getCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/commits/{commit_sha}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "documentationUrl": "https://docs.github.com/rest/reference/git#get-a-commit",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"added readme, because im a good github citizen\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a reference",
    "scope": "git",
    "id": "getRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/ref/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".",
    "documentationUrl": "https://docs.github.com/rest/reference/git#get-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"ref\":\"refs/heads/featureA\",\"node_id\":\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\"object\":{\"type\":\"commit\",\"sha\":\"aa218f56b14c9653891f9e74264a383fa43fefbd\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a tag",
    "scope": "git",
    "id": "getTag",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/tags/{tag_sha}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "documentationUrl": "https://docs.github.com/rest/reference/git#get-a-tag",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tag_sha",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"node_id\":\"MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==\",\"tag\":\"v0.0.1\",\"sha\":\"940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\"message\":\"initial version\",\"tagger\":{\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\",\"date\":\"2014-11-07T22:01:45Z\"},\"object\":{\"type\":\"commit\",\"sha\":\"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"},\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a tree",
    "scope": "git",
    "id": "getTree",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/trees/{tree_sha}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a single tree using the SHA1 value for that tree.\n\nIf `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.",
    "documentationUrl": "https://docs.github.com/rest/reference/git#get-a-tree",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tree_sha",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "recursive",
        "description": "Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in `:tree_sha`. For example, setting `recursive` to any of the following will enable returning objects or subtrees: `0`, `1`, `\"true\"`, and `\"false\"`. Omit this parameter to prevent recursively returning objects or subtrees.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"sha\":\"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/trees/9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\"tree\":[{\"path\":\"file.rb\",\"mode\":\"100644\",\"type\":\"blob\",\"size\":30,\"sha\":\"44b4fc6d56897b048c772eb4087f854f46256132\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132\"},{\"path\":\"subdir\",\"mode\":\"040000\",\"type\":\"tree\",\"sha\":\"f484d249c660418515fb01c2b9662073663c242e\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/f484d249c660418515fb01c2b9662073663c242e\"},{\"path\":\"exec_file\",\"mode\":\"100755\",\"type\":\"blob\",\"size\":75,\"sha\":\"45b983be36b73c0788dc9cbcb76cbb80fc7bb057\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/45b983be36b73c0788dc9cbcb76cbb80fc7bb057\"}],\"truncated\":false}"
          },
          {
            "data": "{\"sha\":\"fc6274d15fa3ae2ab983129fb037999f264ba9a7\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/trees/fc6274d15fa3ae2ab983129fb037999f264ba9a7\",\"tree\":[{\"path\":\"subdir/file.txt\",\"mode\":\"100644\",\"type\":\"blob\",\"size\":132,\"sha\":\"7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\"}],\"truncated\":false}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List matching references",
    "scope": "git",
    "id": "listMatchingRefs",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/git/matching-refs/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.",
    "documentationUrl": "https://docs.github.com/rest/reference/git#list-matching-references",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"ref\":\"refs/heads/feature-a\",\"node_id\":\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-a\",\"object\":{\"type\":\"commit\",\"sha\":\"aa218f56b14c9653891f9e74264a383fa43fefbd\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"}},{\"ref\":\"refs/heads/feature-b\",\"node_id\":\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWI=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-b\",\"object\":{\"type\":\"commit\",\"sha\":\"612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a reference",
    "scope": "git",
    "id": "updateRef",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/git/refs/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/git#update-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The SHA1 value to set this reference to",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "force",
        "description": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"ref\":\"refs/heads/featureA\",\"node_id\":\"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\"object\":{\"type\":\"commit\",\"sha\":\"aa218f56b14c9653891f9e74264a383fa43fefbd\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"}}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get all gitignore templates",
    "scope": "gitignore",
    "id": "getAllTemplates",
    "method": "GET",
    "url": "/gitignore/templates",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user).",
    "documentationUrl": "https://docs.github.com/v3/gitignore/#get-all-gitignore-templates",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[\"Actionscript\",\"Android\",\"AppceleratorTitanium\",\"Autotools\",\"Bancha\",\"C\",\"C++\"]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a gitignore template",
    "scope": "gitignore",
    "id": "getTemplate",
    "method": "GET",
    "url": "/gitignore/templates/{name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/rest/overview/media-types/) to get the raw contents.",
    "documentationUrl": "https://docs.github.com/v3/gitignore/#get-a-gitignore-template",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "name",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"name\":\"C\",\"source\":\"# Object files\\n*.o\\n\\n# Libraries\\n*.lib\\n*.a\\n\\n# Shared objects (inc. Windows DLLs)\\n*.dll\\n*.so\\n*.so.*\\n*.dylib\\n\\n# Executables\\n*.exe\\n*.out\\n*.app\\n\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get interaction restrictions for an organization",
    "scope": "interactions",
    "id": "getRestrictionsForOrg",
    "method": "GET",
    "url": "/orgs/{org}/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Shows which type of GitHub user can interact with this organization and when the restriction expires. If there is no restrictions, you will see an empty response.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"limit\":\"collaborators_only\",\"origin\":\"organization\",\"expires_at\":\"2018-08-17T04:18:39Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get interaction restrictions for a repository",
    "scope": "interactions",
    "id": "getRestrictionsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"limit\":\"collaborators_only\",\"origin\":\"repository\",\"expires_at\":\"2018-08-17T04:18:39Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get interaction restrictions for your public repositories",
    "scope": "interactions",
    "id": "getRestrictionsForYourPublicRepos",
    "method": "GET",
    "url": "/user/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Shows which type of GitHub user can interact with your public repositories and when the restriction expires. If there are no restrictions, you will see an empty response.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-your-public-repositories",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"limit\":\"collaborators_only\",\"origin\":\"user\",\"expires_at\":\"2018-08-17T04:18:39Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove interaction restrictions for an organization",
    "scope": "interactions",
    "id": "removeRestrictionsForOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove interaction restrictions for a repository",
    "scope": "interactions",
    "id": "removeRestrictionsForRepo",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions. If the interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 409, "description": "Conflict", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove interaction restrictions from your public repositories",
    "scope": "interactions",
    "id": "removeRestrictionsForYourPublicRepos",
    "method": "DELETE",
    "url": "/user/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes any interaction restrictions from your public repositories.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-from-your-public-repositories",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set interaction restrictions for an organization",
    "scope": "interactions",
    "id": "setRestrictionsForOrg",
    "method": "PUT",
    "url": "/orgs/{org}/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Temporarily restricts interactions to a certain type of GitHub user in any public repository in the given organization. You must be an organization owner to set these restrictions. Setting the interaction limit at the organization level will overwrite any interaction limits that are set for individual repositories owned by the organization.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "limit",
        "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["existing_users", "contributors_only", "collaborators_only"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "expiry",
        "description": "The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": [
          "one_day",
          "three_days",
          "one_week",
          "one_month",
          "six_months"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"limit\":\"collaborators_only\",\"origin\":\"organization\",\"expires_at\":\"2018-08-17T04:18:39Z\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set interaction restrictions for a repository",
    "scope": "interactions",
    "id": "setRestrictionsForRepo",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or admin access to set these restrictions. If an interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "limit",
        "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["existing_users", "contributors_only", "collaborators_only"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "expiry",
        "description": "The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": [
          "one_day",
          "three_days",
          "one_week",
          "one_month",
          "six_months"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"limit\":\"collaborators_only\",\"origin\":\"repository\",\"expires_at\":\"2018-08-17T04:18:39Z\"}"
          }
        ]
      },
      { "code": 409, "description": "Conflict", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set interaction restrictions for your public repositories",
    "scope": "interactions",
    "id": "setRestrictionsForYourPublicRepos",
    "method": "PUT",
    "url": "/user/interaction-limits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Temporarily restricts which type of GitHub user can interact with your public repositories. Setting the interaction limit at the user level will overwrite any interaction limits that are set for individual repositories owned by the user.",
    "documentationUrl": "https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-your-public-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "limit",
        "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["existing_users", "contributors_only", "collaborators_only"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "expiry",
        "description": "The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": [
          "one_day",
          "three_days",
          "one_week",
          "one_month",
          "six_months"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"limit\":\"collaborators_only\",\"origin\":\"user\",\"expires_at\":\"2018-08-17T04:18:39Z\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add assignees to an issue",
    "scope": "issues",
    "id": "addAssignees",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#add-assignees-to-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true},{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"author_association\":\"collaborator\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add labels to an issue",
    "scope": "issues",
    "id": "addLabels",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#add-labels-to-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "The name of the label to add to the issue. Must contain at least one label. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key.",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true},{\"id\":208045947,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDc=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\"name\":\"enhancement\",\"description\":\"New feature or request\",\"color\":\"a2eeef\",\"default\":false}]"
          }
        ]
      },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check if a user can be assigned",
    "scope": "issues",
    "id": "checkUserCanBeAssigned",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/assignees/{assignee}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#check-if-a-user-can-be-assigned",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.",
        "examples": null
      },
      {
        "code": 404,
        "description": "Otherwise a `404` status code is returned.",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Create an issue",
    "scope": "issues",
    "id": "create",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/v3/issues/#create-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the issue.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the issue.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone",
        "description": "The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._",
        "in": "BODY",
        "type": "undefined[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"closed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create an issue comment",
    "scope": "issues",
    "id": "createComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-abuse-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#create-an-issue-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a label",
    "scope": "issues",
    "id": "createLabel",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#create-a-label",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "color",
        "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the label.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a milestone",
    "scope": "issues",
    "id": "createMilestone",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/milestones",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#create-a-milestone",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the milestone.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state of the milestone. Either `open` or `closed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A description of the milestone.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "due_on",
        "description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an issue comment",
    "scope": "issues",
    "id": "deleteComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#delete-an-issue-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a label",
    "scope": "issues",
    "id": "deleteLabel",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/labels/{name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#delete-a-label",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a milestone",
    "scope": "issues",
    "id": "deleteMilestone",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/milestones/{milestone_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#delete-a-milestone",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an issue",
    "scope": "issues",
    "id": "get",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://docs.github.com/v3/issues/#get-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"closed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 301, "description": "Moved Permanently", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an issue comment",
    "scope": "issues",
    "id": "getComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#get-an-issue-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an issue event",
    "scope": "issues",
    "id": "getEvent",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/events/{event_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#get-an-issue-event",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEwOklzc3VlRXZlbnQx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\"actor\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"event\":\"closed\",\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"created_at\":\"2011-04-14T16:00:49Z\",\"issue\":{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"author_association\":\"collaborator\"}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a label",
    "scope": "issues",
    "id": "getLabel",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/labels/{name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#get-a-label",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a milestone",
    "scope": "issues",
    "id": "getMilestone",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/milestones/{milestone_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#get-a-milestone",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List issues assigned to the authenticated user",
    "scope": "issues",
    "id": "list",
    "method": "GET",
    "url": "/issues",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://docs.github.com/v3/issues/#list-issues-assigned-to-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["assigned", "created", "mentioned", "subscribed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "comments"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "collab",
        "description": "",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "orgs",
        "description": "",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owned",
        "description": "",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pulls",
        "description": "",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1},\"author_association\":\"collaborator\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List assignees",
    "scope": "issues",
    "id": "listAssignees",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/assignees",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-assignees",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List issue comments",
    "scope": "issues",
    "id": "listComments",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Issue Comments are ordered by ascending ID.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-issue-comments",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"author_association\":\"collaborator\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List issue comments for a repository",
    "scope": "issues",
    "id": "listCommentsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "By default, Issue Comments are ordered by ascending ID.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-issue-comments-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Either `asc` or `desc`. Ignored without the `sort` parameter.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"author_association\":\"collaborator\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List issue events",
    "scope": "issues",
    "id": "listEvents",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-issue-events",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDEwOklzc3VlRXZlbnQx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\"actor\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"event\":\"closed\",\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"created_at\":\"2011-04-14T16:00:49Z\"}]"
          }
        ]
      },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List issue events for a repository",
    "scope": "issues",
    "id": "listEventsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-issue-events-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDEwOklzc3VlRXZlbnQx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\"actor\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"event\":\"closed\",\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"created_at\":\"2011-04-14T16:00:49Z\",\"issue\":{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"author_association\":\"collaborator\"}}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List timeline events for an issue",
    "scope": "issues",
    "id": "listEventsForTimeline",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/timeline",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-timeline-events-for-an-issue",
    "previews": [{ "name": "mockingbird" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDEwOklzc3VlRXZlbnQx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\"actor\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"event\":\"closed\",\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"created_at\":\"2011-04-14T16:00:49Z\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List user account issues assigned to the authenticated user",
    "scope": "issues",
    "id": "listForAuthenticatedUser",
    "method": "GET",
    "url": "/user/issues",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://docs.github.com/v3/issues/#list-user-account-issues-assigned-to-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["assigned", "created", "mentioned", "subscribed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "comments"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1},\"author_association\":\"collaborator\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organization issues assigned to the authenticated user",
    "scope": "issues",
    "id": "listForOrg",
    "method": "GET",
    "url": "/orgs/{org}/issues",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://docs.github.com/v3/issues/#list-organization-issues-assigned-to-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["assigned", "created", "mentioned", "subscribed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "comments"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1},\"author_association\":\"collaborator\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repository issues",
    "scope": "issues",
    "id": "listForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://docs.github.com/v3/issues/#list-repository-issues",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone",
        "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "creator",
        "description": "The user that created the issue.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "mentioned",
        "description": "A user that's mentioned in the issue.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "comments"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"author_association\":\"collaborator\"}]"
          }
        ]
      },
      { "code": 301, "description": "Moved Permanently", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List labels for issues in a milestone",
    "scope": "issues",
    "id": "listLabelsForMilestone",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/milestones/{milestone_number}/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-labels-for-issues-in-a-milestone",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true},{\"id\":208045947,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDc=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\"name\":\"enhancement\",\"description\":\"New feature or request\",\"color\":\"a2eeef\",\"default\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List labels for a repository",
    "scope": "issues",
    "id": "listLabelsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-labels-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true},{\"id\":208045947,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDc=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\"name\":\"enhancement\",\"description\":\"New feature or request\",\"color\":\"a2eeef\",\"default\":false}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List labels for an issue",
    "scope": "issues",
    "id": "listLabelsOnIssue",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-labels-for-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true},{\"id\":208045947,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDc=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\"name\":\"enhancement\",\"description\":\"New feature or request\",\"color\":\"a2eeef\",\"default\":false}]"
          }
        ]
      },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List milestones",
    "scope": "issues",
    "id": "listMilestones",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/milestones",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#list-milestones",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state of the milestone. Either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Either `due_on` or `completeness`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["due_on", "completeness"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "The direction of the sort. Either `asc` or `desc`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Lock an issue",
    "scope": "issues",
    "id": "lock",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/lock",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "documentationUrl": "https://docs.github.com/v3/issues/#lock-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "lock_reason",
        "description": "The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  \n\\* `off-topic`  \n\\* `too heated`  \n\\* `resolved`  \n\\* `spam`",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["off-topic", "too heated", "resolved", "spam"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove all labels from an issue",
    "scope": "issues",
    "id": "removeAllLabels",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#remove-all-labels-from-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove assignees from an issue",
    "scope": "issues",
    "id": "removeAssignees",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes one or more assignees from an issue.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#remove-assignees-from-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true},{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"author_association\":\"collaborator\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove a label from an issue",
    "scope": "issues",
    "id": "removeLabel",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#remove-a-label-from-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set labels for an issue",
    "scope": "issues",
    "id": "setLabels",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes any previous labels and sets the new labels for an issue.",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#set-labels-for-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "The names of the labels to add to the issue. You can pass an empty array to remove all labels. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true},{\"id\":208045947,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDc=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\"name\":\"enhancement\",\"description\":\"New feature or request\",\"color\":\"a2eeef\",\"default\":false}]"
          }
        ]
      },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unlock an issue",
    "scope": "issues",
    "id": "unlock",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/lock",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with push access can unlock an issue's conversation.",
    "documentationUrl": "https://docs.github.com/v3/issues/#unlock-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an issue",
    "scope": "issues",
    "id": "update",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Issue owners and users with push access can edit an issue.",
    "documentationUrl": "https://docs.github.com/v3/issues/#update-an-issue",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the issue.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the issue.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignee",
        "description": "Login for the user that this issue should be assigned to. **This field is deprecated.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "State of the issue. Either `open` or `closed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone",
        "description": "The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "labels",
        "description": "Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._",
        "in": "BODY",
        "type": "undefined[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "assignees",
        "description": "Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDU6SXNzdWUx\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"repository_url\":\"https://api.github.com/repos/octocat/Hello-World\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347\",\"number\":1347,\"state\":\"open\",\"title\":\"Found a bug\",\"body\":\"I'm having a problem with this.\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"locked\":true,\"active_lock_reason\":\"too heated\",\"comments\":0,\"pull_request\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\"},\"closed_at\":null,\"created_at\":\"2011-04-22T13:33:48Z\",\"updated_at\":\"2011-04-22T13:33:48Z\",\"closed_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 301, "description": "Moved Permanently", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an issue comment",
    "scope": "issues",
    "id": "updateComment",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#update-an-issue-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEyOklzc3VlQ29tbWVudDE=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\"html_url\":\"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\"body\":\"Me too\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a label",
    "scope": "issues",
    "id": "updateLabel",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/labels/{name}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#update-a-label",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "new_name",
        "description": "The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "color",
        "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the label.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:\",\"name\":\"bug :bug:\",\"description\":\"Small bug fix required\",\"color\":\"b01f26\",\"default\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a milestone",
    "scope": "issues",
    "id": "updateMilestone",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/milestones/{milestone_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/issues#update-a-milestone",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the milestone.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state of the milestone. Either `open` or `closed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A description of the milestone.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "due_on",
        "description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a license",
    "scope": "licenses",
    "id": "get",
    "method": "GET",
    "url": "/licenses/{license}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/licenses/#get-a-license",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "license",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"http://choosealicense.com/licenses/mit/\",\"description\":\"A permissive license that is short and to the point. It lets people do anything with your code with proper attribution and without warranty.\",\"implementation\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"permissions\":[\"commercial-use\",\"modifications\",\"distribution\",\"sublicense\",\"private-use\"],\"conditions\":[\"include-copyright\"],\"limitations\":[\"no-liability\"],\"body\":\"\\n\\nThe MIT License (MIT)\\n\\nCopyright (c) [year] [fullname]\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"featured\":true}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get all commonly used licenses",
    "scope": "licenses",
    "id": "getAllCommonlyUsed",
    "method": "GET",
    "url": "/licenses",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/licenses/#get-all-commonly-used-licenses",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "featured",
        "description": "",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"lgpl-3.0\",\"name\":\"GNU Lesser General Public License v3.0\",\"spdx_id\":\"LGPL-3.0\",\"url\":\"https://api.github.com/licenses/lgpl-3.0\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"mpl-2.0\",\"name\":\"Mozilla Public License 2.0\",\"spdx_id\":\"MPL-2.0\",\"url\":\"https://api.github.com/licenses/mpl-2.0\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"agpl-3.0\",\"name\":\"GNU Affero General Public License v3.0\",\"spdx_id\":\"AGPL-3.0\",\"url\":\"https://api.github.com/licenses/agpl-3.0\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"unlicense\",\"name\":\"The Unlicense\",\"spdx_id\":\"Unlicense\",\"url\":\"https://api.github.com/licenses/unlicense\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"apache-2.0\",\"name\":\"Apache License 2.0\",\"spdx_id\":\"Apache-2.0\",\"url\":\"https://api.github.com/licenses/apache-2.0\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},{\"key\":\"gpl-3.0\",\"name\":\"GNU General Public License v3.0\",\"spdx_id\":\"GPL-3.0\",\"url\":\"https://api.github.com/licenses/gpl-3.0\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get the license for a repository",
    "scope": "licenses",
    "id": "getForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/license",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/rest/reference/repos/contents#get-repository-content), this method also supports [custom media types](https://docs.github.com/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.",
    "documentationUrl": "https://docs.github.com/v3/licenses/#get-the-license-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"401c59dcc4570b954dd6d345e76199e1f4e76266\",\"size\":1077,\"url\":\"https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/benbalter/gman/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266\",\"download_url\":\"https://raw.githubusercontent.com/benbalter/gman/master/LICENSE?lab=true\",\"type\":\"file\",\"content\":\"VGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTMgQmVu\\nIEJhbHRlcgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv\\nZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZgp0\\naGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmls\\nZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbgp0aGUgU29mdHdhcmUg\\nd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh\\ndGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg\\ncHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwg\\nY29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25z\\nIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywK\\nc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJv\\ndmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGlj\\nZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50\\naWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJ\\nUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL\\nSU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJ\\nTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBG\\nSVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklO\\nR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUgpDT1BZ\\nUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF\\nUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNUSU9OIE9G\\nIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBP\\nVVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBU\\nSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K\\n\",\"encoding\":\"base64\",\"_links\":{\"self\":\"https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266\",\"html\":\"https://github.com/benbalter/gman/blob/master/LICENSE\"},\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Render a Markdown document",
    "scope": "markdown",
    "id": "render",
    "method": "POST",
    "url": "/markdown",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/markdown/#render-a-markdown-document",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "text",
        "description": "The Markdown text to render in HTML.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "mode",
        "description": "The rendering mode.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["markdown", "gfm"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "context",
        "description": "The repository context to use when creating references in `gfm` mode.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Render a Markdown document in raw mode",
    "scope": "markdown",
    "id": "renderRaw",
    "method": "POST",
    "url": "/markdown/raw",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.",
    "documentationUrl": "https://docs.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode",
    "previews": [],
    "headers": [
      {
        "name": "content-type",
        "value": "text/plain; charset=utf-8",
        "required": true
      }
    ],
    "parameters": [
      {
        "name": "data",
        "description": "raw markdown text",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub meta information",
    "scope": "meta",
    "id": "get",
    "method": "GET",
    "url": "/meta",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint provides a list of GitHub's IP addresses. For more information, see \"[About GitHub's IP addresses](https://help.github.com/articles/about-github-s-ip-addresses/).\"",
    "documentationUrl": "https://docs.github.com/v3/meta/#get-github-meta-information",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"verifiable_password_authentication\":true,\"ssh_key_fingerprints\":{\"SHA256_RSA\":\"nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8\",\"SHA256_DSA\":\"br9IjFspm1vxR3iA35FWE+4VTyz1hYVLIE2t1/CeyWQ\"},\"hooks\":[\"192.30.252.0/22\"],\"web\":[\"192.30.252.0/22\",\"185.199.108.0/22\"],\"api\":[\"192.30.252.0/22\",\"185.199.108.0/22\"],\"git\":[\"192.30.252.0/22\"],\"pages\":[\"192.30.252.153/32\",\"192.30.252.154/32\"],\"importer\":[\"54.158.161.132\",\"54.226.70.38\"]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get Octocat",
    "scope": "meta",
    "id": "getOctocat",
    "method": "GET",
    "url": "/octocat",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get the octocat as ASCII art",
    "documentationUrl": "",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "s",
        "description": "The words to show in Octocat's speech bubble",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Get the Zen of GitHub",
    "scope": "meta",
    "id": "getZen",
    "method": "GET",
    "url": "/zen",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get a random sentence from the Zen of GitHub",
    "documentationUrl": "",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "GitHub API Root",
    "scope": "meta",
    "id": "root",
    "method": "GET",
    "url": "/",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get Hypermedia links to resources accessible in GitHub's REST API",
    "documentationUrl": "",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [{ "code": 200, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Cancel an import",
    "scope": "migrations",
    "id": "cancelImport",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/import",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Stop an import for a repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#cancel-an-import",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a user migration archive",
    "scope": "migrations",
    "id": "deleteArchiveForAuthenticatedUser",
    "method": "DELETE",
    "url": "/user/migrations/{migration_id}/archive",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the [List user migrations](https://docs.github.com/rest/reference/migrations#list-user-migrations) and [Get a user migration status](https://docs.github.com/rest/reference/migrations#get-a-user-migration-status) endpoints, will continue to be available even after an archive is deleted.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#delete-a-user-migration-archive",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an organization migration archive",
    "scope": "migrations",
    "id": "deleteArchiveForOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/migrations/{migration_id}/archive",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#delete-an-organization-migration-archive",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Download an organization migration archive",
    "scope": "migrations",
    "id": "downloadArchiveForOrg",
    "method": "GET",
    "url": "/orgs/{org}/migrations/{migration_id}/archive",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Fetches the URL to a migration archive.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#download-an-organization-migration-archive",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 302, "description": "response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Download a user migration archive",
    "scope": "migrations",
    "id": "getArchiveForAuthenticatedUser",
    "method": "GET",
    "url": "/user/migrations/{migration_id}/archive",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:\n\n*   attachments\n*   bases\n*   commit\\_comments\n*   issue\\_comments\n*   issue\\_events\n*   issues\n*   milestones\n*   organizations\n*   projects\n*   protected\\_branches\n*   pull\\_request\\_reviews\n*   pull\\_requests\n*   releases\n*   repositories\n*   review\\_comments\n*   schema\n*   users\n\nThe archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 302, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get commit authors",
    "scope": "migrations",
    "id": "getCommitAuthors",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/import/authors",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.\n\nThis endpoint and the [Map a commit author](https://docs.github.com/rest/reference/migrations#map-a-commit-author) endpoint allow you to provide correct Git author information.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#get-commit-authors",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "A user ID. Only return users with an ID greater than this ID.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":2268557,\"remote_id\":\"nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\"remote_name\":\"nobody\",\"email\":\"hubot@github.com\",\"name\":\"Hubot\",\"url\":\"https://api.github.com/repos/octocat/socm/import/authors/2268557\",\"import_url\":\"https://api.github.com/repos/octocat/socm/import\"},{\"id\":2268558,\"remote_id\":\"svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\"remote_name\":\"svner\",\"email\":\"svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\"name\":\"svner\",\"url\":\"https://api.github.com/repos/octocat/socm/import/authors/2268558\",\"import_url\":\"https://api.github.com/repos/octocat/socm/import\"},{\"id\":2268559,\"remote_id\":\"svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\"remote_name\":\"svner@example.com\",\"email\":\"svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\"name\":\"svner@example.com\",\"url\":\"https://api.github.com/repos/octocat/socm/import/authors/2268559\",\"import_url\":\"https://api.github.com/repos/octocat/socm/import\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an import status",
    "scope": "migrations",
    "id": "getImportStatus",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/import",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "View the progress of an import.\n\n**Import status**\n\nThis section includes details about the possible values of the `status` field of the Import Progress response.\n\nAn import that does not have errors will progress through these steps:\n\n*   `detecting` - the \"detection\" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.\n*   `importing` - the \"raw\" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).\n*   `mapping` - the \"rewrite\" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.\n*   `pushing` - the \"push\" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is \"Writing objects\".\n*   `complete` - the import is complete, and the repository is ready on GitHub.\n\nIf there are problems, you will see one of these in the `status` field:\n\n*   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n*   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://github.com/contact) or [GitHub Premium Support](https://premium.githubsupport.com) for more information.\n*   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n*   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://docs.github.com/rest/reference/migrations#cancel-an-import) and [retry](https://docs.github.com/rest/reference/migrations#start-an-import) with the correct URL.\n*   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n\n**The project_choices field**\n\nWhen multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.\n\n**Git LFS related fields**\n\nThis section includes details about Git LFS related fields that may be present in the Import Progress response.\n\n*   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.\n*   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.\n*   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.\n*   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a \"Get Large Files\" request.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#get-an-import-status",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"vcs\":\"subversion\",\"use_lfs\":\"opt_in\",\"vcs_url\":\"http://svn.mycompany.com/svn/myproject\",\"status\":\"complete\",\"status_text\":\"Done\",\"has_large_files\":true,\"large_files_size\":132331036,\"large_files_count\":1,\"authors_count\":4,\"url\":\"https://api.github.com/repos/octocat/socm/import\",\"html_url\":\"https://import.github.com/octocat/socm/import\",\"authors_url\":\"https://api.github.com/repos/octocat/socm/import/authors\",\"repository_url\":\"https://api.github.com/repos/octocat/socm\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get large files",
    "scope": "migrations",
    "id": "getLargeFiles",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/import/large_files",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List files larger than 100MB found during the import",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#get-large-files",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"ref_name\":\"refs/heads/master\",\"path\":\"foo/bar/1\",\"oid\":\"d3d9446802a44259755d38e6d163e820\",\"size\":10485760},{\"ref_name\":\"refs/heads/master\",\"path\":\"foo/bar/2\",\"oid\":\"6512bd43d9caa6e02c990b0a82652dca\",\"size\":11534336},{\"ref_name\":\"refs/heads/master\",\"path\":\"foo/bar/3\",\"oid\":\"c20ad4d76fe97759aa27a0c99bff6710\",\"size\":12582912}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a user migration status",
    "scope": "migrations",
    "id": "getStatusForAuthenticatedUser",
    "method": "GET",
    "url": "/user/migrations/{migration_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:\n\n*   `pending` - the migration hasn't started yet.\n*   `exporting` - the migration is in progress.\n*   `exported` - the migration finished successfully.\n*   `failed` - the migration failed.\n\nOnce the migration has been `exported` you can [download the migration archive](https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive).",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#get-a-user-migration-status",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "exclude",
        "description": "",
        "in": "QUERY",
        "type": "array",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":79,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"guid\":\"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\"state\":\"exported\",\"lock_repositories\":true,\"exclude_attachments\":false,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}],\"url\":\"https://api.github.com/orgs/octo-org/migrations/79\",\"created_at\":\"2015-07-06T15:33:38-07:00\",\"updated_at\":\"2015-07-06T15:33:38-07:00\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization migration status",
    "scope": "migrations",
    "id": "getStatusForOrg",
    "method": "GET",
    "url": "/orgs/{org}/migrations/{migration_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Fetches the status of a migration.\n\nThe `state` of a migration can be one of the following values:\n\n*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#get-an-organization-migration-status",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.",
        "examples": [
          {
            "data": "{\"id\":79,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"guid\":\"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\"state\":\"exported\",\"lock_repositories\":true,\"exclude_attachments\":false,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}],\"url\":\"https://api.github.com/orgs/octo-org/migrations/79\",\"created_at\":\"2015-07-06T15:33:38-07:00\",\"updated_at\":\"2015-07-06T15:33:38-07:00\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List user migrations",
    "scope": "migrations",
    "id": "listForAuthenticatedUser",
    "method": "GET",
    "url": "/user/migrations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all migrations a user has started.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#list-user-migrations",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":79,\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"guid\":\"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\"state\":\"pending\",\"lock_repositories\":true,\"exclude_attachments\":false,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}],\"url\":\"https://api.github.com/orgs/octo-org/migrations/79\",\"created_at\":\"2015-07-06T15:33:38-07:00\",\"updated_at\":\"2015-07-06T15:33:38-07:00\",\"node_id\":\"MDQ6VXNlcjE=\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organization migrations",
    "scope": "migrations",
    "id": "listForOrg",
    "method": "GET",
    "url": "/orgs/{org}/migrations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the most recent migrations.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#list-organization-migrations",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":79,\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"guid\":\"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\"state\":\"pending\",\"lock_repositories\":true,\"exclude_attachments\":false,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}],\"url\":\"https://api.github.com/orgs/octo-org/migrations/79\",\"created_at\":\"2015-07-06T15:33:38-07:00\",\"updated_at\":\"2015-07-06T15:33:38-07:00\",\"node_id\":\"MDQ6VXNlcjE=\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories in an organization migration",
    "scope": "migrations",
    "id": "listReposForOrg",
    "method": "GET",
    "url": "/orgs/{org}/migrations/{migration_id}/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all the repositories for this organization migration.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#list-repositories-in-an-organization-migration",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repositories for a user migration",
    "scope": "migrations",
    "id": "listReposForUser",
    "method": "GET",
    "url": "/user/migrations/{migration_id}/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all the repositories for this user migration.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#list-repositories-for-a-user-migration",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Map a commit author",
    "scope": "migrations",
    "id": "mapCommitAuthor",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/import/authors/{author_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#map-a-commit-author",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "email",
        "description": "The new Git author email.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The new Git author name.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "remote_id",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":2268557,\"remote_id\":\"nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\"remote_name\":\"nobody\",\"email\":\"hubot@github.com\",\"name\":\"Hubot\",\"url\":\"https://api.github.com/repos/octocat/socm/import/authors/2268557\",\"import_url\":\"https://api.github.com/repos/octocat/socm/import\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update Git LFS preference",
    "scope": "migrations",
    "id": "setLfsPreference",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/import/lfs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/).",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#update-git-lfs-preference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "use_lfs",
        "description": "Can be one of `opt_in` (large files will be stored using Git LFS) or `opt_out` (large files will be removed during the import).",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["opt_in", "opt_out"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"vcs\":\"subversion\",\"use_lfs\":\"opt_in\",\"vcs_url\":\"http://svn.mycompany.com/svn/myproject\",\"status\":\"complete\",\"status_text\":\"Done\",\"has_large_files\":true,\"large_files_size\":132331036,\"large_files_count\":1,\"authors_count\":4,\"url\":\"https://api.github.com/repos/octocat/socm/import\",\"html_url\":\"https://import.github.com/octocat/socm/import\",\"authors_url\":\"https://api.github.com/repos/octocat/socm/import/authors\",\"repository_url\":\"https://api.github.com/repos/octocat/socm\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Start a user migration",
    "scope": "migrations",
    "id": "startForAuthenticatedUser",
    "method": "POST",
    "url": "/user/migrations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Initiates the generation of a user migration archive.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#start-a-user-migration",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "lock_repositories",
        "description": "Lock the repositories being migrated at the start of the migration",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "exclude_attachments",
        "description": "Do not include attachments in the migration",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "exclude",
        "description": "Exclude attributes from the API response to improve performance",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repositories",
        "description": "",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":79,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"guid\":\"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\"state\":\"pending\",\"lock_repositories\":true,\"exclude_attachments\":false,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}],\"url\":\"https://api.github.com/orgs/octo-org/migrations/79\",\"created_at\":\"2015-07-06T15:33:38-07:00\",\"updated_at\":\"2015-07-06T15:33:38-07:00\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Start an organization migration",
    "scope": "migrations",
    "id": "startForOrg",
    "method": "POST",
    "url": "/orgs/{org}/migrations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Initiates the generation of a migration archive.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#start-an-organization-migration",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repositories",
        "description": "A list of arrays indicating which repositories should be migrated.",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "lock_repositories",
        "description": "Indicates whether repositories should be locked (to prevent manipulation) while migrating data.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "exclude_attachments",
        "description": "Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "exclude",
        "description": "",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":79,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"guid\":\"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\"state\":\"pending\",\"lock_repositories\":true,\"exclude_attachments\":false,\"repositories\":[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}],\"url\":\"https://api.github.com/orgs/octo-org/migrations/79\",\"created_at\":\"2015-07-06T15:33:38-07:00\",\"updated_at\":\"2015-07-06T15:33:38-07:00\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Start an import",
    "scope": "migrations",
    "id": "startImport",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/import",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Start a source import to a GitHub repository using GitHub Importer.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#start-an-import",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "vcs_url",
        "description": "The URL of the originating repository.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "vcs",
        "description": "The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["subversion", "git", "mercurial", "tfvc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "vcs_username",
        "description": "If authentication is required, the username to provide to `vcs_url`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "vcs_password",
        "description": "If authentication is required, the password to provide to `vcs_url`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tfvc_project",
        "description": "For a tfvc import, the name of the project that is being imported.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"vcs\":\"subversion\",\"use_lfs\":\"undecided\",\"vcs_url\":\"http://svn.mycompany.com/svn/myproject\",\"status\":\"importing\",\"status_text\":\"Importing...\",\"has_large_files\":false,\"large_files_size\":0,\"large_files_count\":0,\"authors_count\":0,\"commit_count\":1042,\"url\":\"https://api.github.com/repos/octocat/socm/import\",\"html_url\":\"https://import.github.com/octocat/socm/import\",\"authors_url\":\"https://api.github.com/repos/octocat/socm/import/authors\",\"repository_url\":\"https://api.github.com/repos/octocat/socm\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unlock a user repository",
    "scope": "migrations",
    "id": "unlockRepoForAuthenticatedUser",
    "method": "DELETE",
    "url": "/user/migrations/{migration_id}/repos/{repo_name}/lock",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Unlocks a repository. You can lock repositories when you [start a user migration](https://docs.github.com/rest/reference/migrations#start-a-user-migration). Once the migration is complete you can unlock each repository to begin using it again or [delete the repository](https://docs.github.com/rest/reference/repos#delete-a-repository) if you no longer need the source data. Returns a status of `404 Not Found` if the repository is not locked.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#unlock-a-user-repository",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo_name",
        "description": "repo_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unlock an organization repository",
    "scope": "migrations",
    "id": "unlockRepoForOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://docs.github.com/rest/reference/repos#delete-a-repository) when the migration is complete and you no longer need the source data.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#unlock-an-organization-repository",
    "previews": [{ "name": "wyandotte" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo_name",
        "description": "repo_name parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an import",
    "scope": "migrations",
    "id": "updateImport",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/import",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API\nrequest. If no parameters are provided, the import will be restarted.",
    "documentationUrl": "https://docs.github.com/rest/reference/migrations#update-an-import",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "vcs_username",
        "description": "The username to provide to the originating repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "vcs_password",
        "description": "The password to provide to the originating repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "vcs",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tfvc_project",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"vcs\":\"subversion\",\"use_lfs\":\"undecided\",\"vcs_url\":\"http://svn.mycompany.com/svn/myproject\",\"status\":\"detecting\",\"url\":\"https://api.github.com/repos/octocat/socm/import\",\"html_url\":\"https://import.github.com/octocat/socm/import\",\"authors_url\":\"https://api.github.com/repos/octocat/socm/import/authors\",\"repository_url\":\"https://api.github.com/repos/octocat/socm\"}"
          },
          {
            "data": "{\"vcs\":\"tfvc\",\"use_lfs\":\"undecided\",\"vcs_url\":\"http://tfs.mycompany.com/tfs/myproject\",\"tfvc_project\":\"project1\",\"status\":\"importing\",\"status_text\":\"Importing...\",\"has_large_files\":false,\"large_files_size\":0,\"large_files_count\":0,\"authors_count\":0,\"commit_count\":1042,\"url\":\"https://api.github.com/repos/octocat/socm/import\",\"html_url\":\"https://import.github.com/octocat/socm/import\",\"authors_url\":\"https://api.github.com/repos/octocat/socm/import/authors\",\"repository_url\":\"https://api.github.com/repos/octocat/socm\"}"
          },
          {
            "data": "{\"vcs\":\"subversion\",\"use_lfs\":\"undecided\",\"vcs_url\":\"http://svn.mycompany.com/svn/myproject\",\"status\":\"importing\",\"status_text\":\"Importing...\",\"has_large_files\":false,\"large_files_size\":0,\"large_files_count\":0,\"authors_count\":0,\"commit_count\":1042,\"url\":\"https://api.github.com/repos/octocat/socm/import\",\"html_url\":\"https://import.github.com/octocat/socm/import\",\"authors_url\":\"https://api.github.com/repos/octocat/socm/import/authors\",\"repository_url\":\"https://api.github.com/repos/octocat/socm\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a new authorization",
    "scope": "oauthAuthorizations",
    "id": "createAuthorization",
    "method": "POST",
    "url": "/authorizations",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates OAuth tokens using [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#create-a-new-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_id",
        "description": "The OAuth app client key for which to create the token.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_secret",
        "description": "The OAuth app client secret for which to create the token.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an authorization",
    "scope": "oauthAuthorizations",
    "id": "deleteAuthorization",
    "method": "DELETE",
    "url": "/authorizations/{authorization_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#delete-an-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a grant",
    "scope": "oauthAuthorizations",
    "id": "deleteGrant",
    "method": "DELETE",
    "url": "/applications/grants/{grant_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#delete-a-grant",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "grant_id",
        "description": "grant_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a single authorization",
    "scope": "oauthAuthorizations",
    "id": "getAuthorization",
    "method": "GET",
    "url": "/authorizations/{authorization_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#get-a-single-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a single grant",
    "scope": "oauthAuthorizations",
    "id": "getGrant",
    "method": "GET",
    "url": "/applications/grants/{grant_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#get-a-single-grant",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "grant_id",
        "description": "grant_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/applications/grants/1\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"created_at\":\"2011-09-06T17:26:27Z\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"scopes\":[\"public_repo\"]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get-or-create an authorization for a specific app",
    "scope": "oauthAuthorizations",
    "id": "getOrCreateAuthorizationForApp",
    "method": "PUT",
    "url": "/authorizations/clients/{client_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_secret",
        "description": "The OAuth app client secret for which to create the token.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if returning an existing token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get-or-create an authorization for a specific app and fingerprint",
    "scope": "oauthAuthorizations",
    "id": "getOrCreateAuthorizationForAppAndFingerprint",
    "method": "PUT",
    "url": "/authorizations/clients/{client_id}/{fingerprint}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nThis method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "client_id",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_secret",
        "description": "The OAuth app client secret for which to create the token.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if returning an existing token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "Response if returning a new token",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"abcdefgh12345678\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List your authorizations",
    "scope": "oauthAuthorizations",
    "id": "listAuthorizations",
    "method": "GET",
    "url": "/authorizations",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List your grants",
    "scope": "oauthAuthorizations",
    "id": "listGrants",
    "method": "GET",
    "url": "/applications/grants",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#list-your-grants",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"url\":\"https://api.github.com/applications/grants/1\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"created_at\":\"2011-09-06T17:26:27Z\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"scopes\":[\"public_repo\"]}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an existing authorization",
    "scope": "oauthAuthorizations",
    "id": "updateAuthorization",
    "method": "PATCH",
    "url": "/authorizations/{authorization_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-14",
    "description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.",
    "documentationUrl": "https://docs.github.com/rest/reference/oauth-authorizations#update-an-existing-authorization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "scopes",
        "description": "A list of scopes that this authorization is in.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "add_scopes",
        "description": "A list of scopes to add to this authorization.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "remove_scopes",
        "description": "A list of scopes to remove from this authorization.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "A note to remind you what the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note_url",
        "description": "A URL to remind you what app the OAuth token is for.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "fingerprint",
        "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/authorizations/1\",\"scopes\":[\"public_repo\"],\"token\":\"\",\"token_last_eight\":\"12345678\",\"hashed_token\":\"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\"app\":{\"url\":\"http://my-github-app.com\",\"name\":\"my github app\",\"client_id\":\"abcde12345fghij67890\"},\"note\":\"optional note\",\"note_url\":\"http://optional/note/url\",\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"fingerprint\":\"jklmnop12345678\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Block a user from an organization",
    "scope": "orgs",
    "id": "blockUser",
    "method": "PUT",
    "url": "/orgs/{org}/blocks/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#block-a-user-from-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check if a user is blocked by an organization",
    "scope": "orgs",
    "id": "checkBlockedUser",
    "method": "GET",
    "url": "/orgs/{org}/blocks/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#check-if-a-user-is-blocked-by-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "If the user is blocked:",
        "examples": null
      },
      {
        "code": 404,
        "description": "If the user is not blocked:",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Check organization membership for a user",
    "scope": "orgs",
    "id": "checkMembershipForUser",
    "method": "GET",
    "url": "/orgs/{org}/members/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Check if a user is, publicly or privately, a member of the organization.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#check-organization-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if requester is an organization member and user is a member",
        "examples": null
      },
      {
        "code": 302,
        "description": "Response if requester is not an organization member",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if requester is an organization member and user is not a member",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Check public organization membership for a user",
    "scope": "orgs",
    "id": "checkPublicMembershipForUser",
    "method": "GET",
    "url": "/orgs/{org}/public_members/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#check-public-organization-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if user is a public member",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if user is not a public member",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Convert an organization member to outside collaborator",
    "scope": "orgs",
    "id": "convertMemberToOutsideCollaborator",
    "method": "PUT",
    "url": "/orgs/{org}/outside_collaborators/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "User is getting converted asynchronously",
        "examples": null
      },
      { "code": 204, "description": "User was converted", "examples": null },
      {
        "code": 403,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Cannot convert the last owner to an outside collaborator\",\"documentation_url\":\"https://docs.github.com/rest/reference/orgs#convert-member-to-outside-collaborator\"}"
          },
          {
            "data": "{\"message\":\"<user> is not a member of the <organization> organization.\",\"documentation_url\":\"https://docs.github.com/rest/reference/orgs#convert-member-to-outside-collaborator\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create an organization invitation",
    "scope": "orgs",
    "id": "createInvitation",
    "method": "POST",
    "url": "/orgs/{org}/invitations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#create-an-organization-invitation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "invitee_id",
        "description": "**Required unless you provide `email`**. GitHub user ID for the person you are inviting.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "email",
        "description": "**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "Specify role for new member. Can be one of:  \n\\* `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  \n\\* `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  \n\\* `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["admin", "direct_member", "billing_manager"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_ids",
        "description": "Specify IDs for the teams you want to invite new members to.",
        "in": "BODY",
        "type": "integer[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"login\":\"monalisa\",\"email\":\"octocat@github.com\",\"role\":\"direct_member\",\"created_at\":\"2016-11-30T06:46:10-08:00\",\"inviter\":{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false},\"team_count\":2,\"invitation_team_url\":\"https://api.github.com/organizations/2/invitations/1/teams\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create an organization webhook",
    "scope": "orgs",
    "id": "createWebhook",
    "method": "POST",
    "url": "/orgs/{org}/hooks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Here's how you can create a hook that posts payloads in JSON format:",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#create-an-organization-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "Must be passed as \"web\".",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/orgs#create-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.username",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.password",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"push\",\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"type\":\"Organization\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an organization webhook",
    "scope": "orgs",
    "id": "deleteWebhook",
    "method": "DELETE",
    "url": "/orgs/{org}/hooks/{hook_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#delete-an-organization-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization",
    "scope": "orgs",
    "id": "get",
    "method": "GET",
    "url": "/orgs/{org}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub plan information' below.\"",
    "documentationUrl": "https://docs.github.com/v3/orgs/#get-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"twitter_username\":\"github\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"type\":\"Organization\",\"total_private_repos\":100,\"owned_private_repos\":100,\"private_gists\":81,\"disk_usage\":10000,\"collaborators\":8,\"billing_email\":\"mona@github.com\",\"plan\":{\"name\":\"Medium\",\"space\":400,\"private_repos\":20},\"default_repository_permission\":\"read\",\"members_can_create_repositories\":true,\"two_factor_requirement_enabled\":true,\"members_allowed_repository_creation_type\":\"all\",\"members_can_create_public_repositories\":false,\"members_can_create_private_repositories\":false,\"members_can_create_internal_repositories\":false,\"members_can_create_pages\":true}"
          },
          {
            "data": "{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"twitter_username\":\"github\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"type\":\"Organization\",\"plan\":{\"name\":\"team\",\"space\":976562499,\"private_repos\":999999,\"filled_seats\":4,\"seats\":5}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization membership for the authenticated user",
    "scope": "orgs",
    "id": "getMembershipForAuthenticatedUser",
    "method": "GET",
    "url": "/user/memberships/orgs/{org}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#get-an-organization-membership-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/invitocat/memberships/defunkt\",\"state\":\"pending\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/invitocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get organization membership for a user",
    "scope": "orgs",
    "id": "getMembershipForUser",
    "method": "GET",
    "url": "/orgs/{org}/memberships/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "In order to get a user's membership with an organization, the authenticated user must be an organization member.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"member\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/orgs/invitocat/memberships/defunkt\",\"state\":\"pending\",\"role\":\"member\",\"organization_url\":\"https://api.github.com/orgs/invitocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get an organization webhook",
    "scope": "orgs",
    "id": "getWebhook",
    "method": "GET",
    "url": "/orgs/{org}/hooks/{hook_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a webhook configured in an organization. To get only the webhook `config` properties, see \"[Get a webhook configuration for an organization](/rest/reference/orgs#get-a-webhook-configuration-for-an-organization).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#get-an-organization-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"push\",\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"type\":\"Organization\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a webhook configuration for an organization",
    "scope": "orgs",
    "id": "getWebhookConfigForOrg",
    "method": "GET",
    "url": "/orgs/{org}/hooks/{hook_id}/config",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the webhook configuration for an organization. To get more information about the webhook, including the `active` state and `events`, use \"[Get an organization webhook ](/rest/reference/orgs#get-an-organization-webhook).\"\n\nAccess tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:read` permission.",
    "documentationUrl": "https://docs.github.com/v3/orgs#get-a-webhook-configuration-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\",\"url\":\"https://example.com/webhook\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List organizations",
    "scope": "orgs",
    "id": "list",
    "method": "GET",
    "url": "/organizations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all organizations, in the order that they were created on GitHub.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.",
    "documentationUrl": "https://docs.github.com/v3/orgs/#list-organizations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "An organization ID. Only return organizations with an ID greater than this ID.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List app installations for an organization",
    "scope": "orgs",
    "id": "listAppInstallations",
    "method": "GET",
    "url": "/orgs/{org}/installations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with `admin:read` scope to use this endpoint.",
    "documentationUrl": "https://docs.github.com/v3/orgs/#list-app-installations-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"installations\":[{\"id\":25381,\"account\":{\"login\":\"octo-org\",\"id\":6811672,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=\",\"avatar_url\":\"https://avatars3.githubusercontent.com/u/6811672?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octo-org\",\"html_url\":\"https://github.com/octo-org\",\"followers_url\":\"https://api.github.com/users/octo-org/followers\",\"following_url\":\"https://api.github.com/users/octo-org/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octo-org/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octo-org/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octo-org/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octo-org/orgs\",\"repos_url\":\"https://api.github.com/users/octo-org/repos\",\"events_url\":\"https://api.github.com/users/octo-org/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octo-org/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"repository_selection\":\"selected\",\"access_tokens_url\":\"https://api.github.com/app/installations/25381/access_tokens\",\"repositories_url\":\"https://api.github.com/installation/repositories\",\"html_url\":\"https://github.com/organizations/octo-org/settings/installations/25381\",\"app_id\":2218,\"target_id\":6811672,\"target_type\":\"Organization\",\"permissions\":{\"deployments\":\"write\",\"metadata\":\"read\",\"pull_requests\":\"read\",\"statuses\":\"read\"},\"events\":[\"deployment\",\"deployment_status\"],\"created_at\":\"2017-05-16T08:47:09.000-07:00\",\"updated_at\":\"2017-06-06T11:23:23.000-07:00\",\"single_file_name\":\"config.yml\",\"has_multiple_single_files\":true,\"single_file_paths\":[\"config.yml\",\".github/issue_TEMPLATE.md\"],\"app_slug\":\"github-actions\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List users blocked by an organization",
    "scope": "orgs",
    "id": "listBlockedUsers",
    "method": "GET",
    "url": "/orgs/{org}/blocks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the users blocked by an organization.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-users-blocked-by-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organizations for the authenticated user",
    "scope": "orgs",
    "id": "listForAuthenticatedUser",
    "method": "GET",
    "url": "/user/orgs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List organizations for the authenticated user.\n\n**OAuth scope requirements**\n\nThis only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.",
    "documentationUrl": "https://docs.github.com/v3/orgs/#list-organizations-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organizations for a user",
    "scope": "orgs",
    "id": "listForUser",
    "method": "GET",
    "url": "/users/{username}/orgs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.",
    "documentationUrl": "https://docs.github.com/v3/orgs/#list-organizations-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List organization invitation teams",
    "scope": "orgs",
    "id": "listInvitationTeams",
    "method": "GET",
    "url": "/orgs/{org}/invitations/{invitation_id}/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-organization-invitation-teams",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organization members",
    "scope": "orgs",
    "id": "listMembers",
    "method": "GET",
    "url": "/orgs/{org}/members",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-organization-members",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filter members returned in the list. Can be one of:  \n\\* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  \n\\* `all` - All members the authenticated user can see.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["2fa_disabled", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "Filter members returned by their role. Can be one of:  \n\\* `all` - All members of the organization, regardless of role.  \n\\* `admin` - Organization owners.  \n\\* `member` - Non-owner organization members.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "admin", "member"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      {
        "code": 302,
        "description": "Response if requester is not an organization member",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organization memberships for the authenticated user",
    "scope": "orgs",
    "id": "listMembershipsForAuthenticatedUser",
    "method": "GET",
    "url": "/user/memberships/orgs",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-organization-memberships-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "state",
        "description": "Indicates the state of the memberships to return. Can be either `active` or `pending`. If not specified, the API returns both active and pending memberships.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["active", "pending"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}},{\"url\":\"https://api.github.com/orgs/invitocat/memberships/defunkt\",\"state\":\"pending\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/invitocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List outside collaborators for an organization",
    "scope": "orgs",
    "id": "listOutsideCollaborators",
    "method": "GET",
    "url": "/orgs/{org}/outside_collaborators",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all users who are outside collaborators of an organization.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-outside-collaborators-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "filter",
        "description": "Filter the list of outside collaborators. Can be one of:  \n\\* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  \n\\* `all`: All outside collaborators.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["2fa_disabled", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List pending organization invitations",
    "scope": "orgs",
    "id": "listPendingInvitations",
    "method": "GET",
    "url": "/orgs/{org}/invitations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-pending-organization-invitations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"login\":\"monalisa\",\"email\":\"octocat@github.com\",\"role\":\"direct_member\",\"created_at\":\"2016-11-30T06:46:10-08:00\",\"inviter\":{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false},\"team_count\":2,\"invitation_team_url\":\"https://api.github.com/organizations/2/invitations/1/teams\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List public organization members",
    "scope": "orgs",
    "id": "listPublicMembers",
    "method": "GET",
    "url": "/orgs/{org}/public_members",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Members of an organization can choose to have their membership publicized or not.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-public-organization-members",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List organization webhooks",
    "scope": "orgs",
    "id": "listWebhooks",
    "method": "GET",
    "url": "/orgs/{org}/hooks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#list-organization-webhooks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"push\",\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"type\":\"Organization\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Ping an organization webhook",
    "scope": "orgs",
    "id": "pingWebhook",
    "method": "POST",
    "url": "/orgs/{org}/hooks/{hook_id}/pings",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#ping-an-organization-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove an organization member",
    "scope": "orgs",
    "id": "removeMember",
    "method": "DELETE",
    "url": "/orgs/{org}/members/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#remove-an-organization-member",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove organization membership for a user",
    "scope": "orgs",
    "id": "removeMembershipForUser",
    "method": "DELETE",
    "url": "/orgs/{org}/memberships/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#remove-organization-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove outside collaborator from an organization",
    "scope": "orgs",
    "id": "removeOutsideCollaborator",
    "method": "DELETE",
    "url": "/orgs/{org}/outside_collaborators/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removing a user from this list will remove them from all the organization's repositories.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#remove-outside-collaborator-from-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      {
        "code": 422,
        "description": "Response if user is a member of the organization",
        "examples": [
          {
            "data": "{\"message\":\"You cannot specify an organization member to remove as an outside collaborator.\",\"documentation_url\":\"https://docs.github.com/rest/reference/orgs#remove-outside-collaborator\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove public organization membership for the authenticated user",
    "scope": "orgs",
    "id": "removePublicMembershipForAuthenticatedUser",
    "method": "DELETE",
    "url": "/orgs/{org}/public_members/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set organization membership for a user",
    "scope": "orgs",
    "id": "setMembershipForUser",
    "method": "PUT",
    "url": "/orgs/{org}/memberships/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#set-organization-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "The role to give the user in the organization. Can be one of:  \n\\* `admin` - The user will become an owner of the organization.  \n\\* `member` - The user will become a non-owner member of the organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["admin", "member"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/invitocat/memberships/defunkt\",\"state\":\"pending\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/invitocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set public organization membership for the authenticated user",
    "scope": "orgs",
    "id": "setPublicMembershipForAuthenticatedUser",
    "method": "PUT",
    "url": "/orgs/{org}/public_members/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unblock a user from an organization",
    "scope": "orgs",
    "id": "unblockUser",
    "method": "DELETE",
    "url": "/orgs/{org}/blocks/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#unblock-a-user-from-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an organization",
    "scope": "orgs",
    "id": "update",
    "method": "PATCH",
    "url": "/orgs/{org}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Parameter Deprecation Notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).\n\nEnables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.",
    "documentationUrl": "https://docs.github.com/v3/orgs/#update-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "billing_email",
        "description": "Billing email address. This address is not publicized.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "company",
        "description": "The company name.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "email",
        "description": "The publicly visible email address.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "twitter_username",
        "description": "The Twitter username of the company.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "location",
        "description": "The location.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The shorthand name of the company.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "The description of the company.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_organization_projects",
        "description": "Toggles whether an organization can use organization projects.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_repository_projects",
        "description": "Toggles whether repositories that belong to the organization can use repository projects.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "default_repository_permission",
        "description": "Default permission level members have for organization repositories:  \n\\* `read` - can pull, but not push to or administer this repository.  \n\\* `write` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push, and administer this repository.  \n\\* `none` - no permissions granted by default.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin", "none"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_can_create_repositories",
        "description": "Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n\\* `true` - all organization members can create repositories.  \n\\* `false` - only organization owners can create repositories.  \nDefault: `true`  \n**Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_can_create_internal_repositories",
        "description": "Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:  \n\\* `true` - all organization members can create internal repositories.  \n\\* `false` - only organization owners can create internal repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_can_create_private_repositories",
        "description": "Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:  \n\\* `true` - all organization members can create private repositories.  \n\\* `false` - only organization owners can create private repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_can_create_public_repositories",
        "description": "Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:  \n\\* `true` - all organization members can create public repositories.  \n\\* `false` - only organization owners can create public repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_allowed_repository_creation_type",
        "description": "Specifies which types of repositories non-admin organization members can create. Can be one of:  \n\\* `all` - all organization members can create public and private repositories.  \n\\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.  \n\\* `none` - only admin members can create repositories.  \n**Note:** This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["all", "private", "none"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "members_can_create_pages",
        "description": "Toggles whether organization members can create GitHub Pages sites. Can be one of:  \n\\* `true` - all organization members can create GitHub Pages sites.  \n\\* `false` - no organization members can create GitHub Pages sites. Existing published sites will not be impacted.  \nDefault: `true`. ",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "blog",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"twitter_username\":\"github\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"type\":\"Organization\",\"total_private_repos\":100,\"owned_private_repos\":100,\"private_gists\":81,\"disk_usage\":10000,\"collaborators\":8,\"billing_email\":\"mona@github.com\",\"plan\":{\"name\":\"Medium\",\"space\":400,\"private_repos\":20},\"default_repository_permission\":\"read\",\"members_can_create_repositories\":true,\"two_factor_requirement_enabled\":true,\"members_allowed_repository_creation_type\":\"all\",\"members_can_create_public_repositories\":false,\"members_can_create_private_repositories\":false,\"members_can_create_internal_repositories\":false,\"members_can_create_pages\":true,\"updated_at\":\"2014-03-03T18:58:10Z\"}"
          }
        ]
      },
      { "code": 409, "description": "Conflict", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an organization membership for the authenticated user",
    "scope": "orgs",
    "id": "updateMembershipForAuthenticatedUser",
    "method": "PATCH",
    "url": "/user/memberships/orgs/{org}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#update-an-organization-membership-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state that the membership should be in. Only `\"active\"` will be accepted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["active"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/orgs/octocat/memberships/defunkt\",\"state\":\"active\",\"role\":\"admin\",\"organization_url\":\"https://api.github.com/orgs/octocat\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an organization webhook",
    "scope": "orgs",
    "id": "updateWebhook",
    "method": "PATCH",
    "url": "/orgs/{org}/hooks/{hook_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates a webhook configured in an organization. When you update a webhook, the `secret` will be overwritten. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for an organization](/rest/reference/orgs#update-a-webhook-configuration-for-an-organization).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/orgs#update-an-organization-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/orgs#update-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"url\":\"https://api.github.com/orgs/octocat/hooks/1\",\"ping_url\":\"https://api.github.com/orgs/octocat/hooks/1/pings\",\"name\":\"web\",\"events\":[\"pull_request\"],\"active\":true,\"config\":{\"url\":\"http://example.com\",\"content_type\":\"json\"},\"updated_at\":\"2011-09-06T20:39:23Z\",\"created_at\":\"2011-09-06T17:26:27Z\",\"type\":\"Organization\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a webhook configuration for an organization",
    "scope": "orgs",
    "id": "updateWebhookConfigForOrg",
    "method": "PATCH",
    "url": "/orgs/{org}/hooks/{hook_id}/config",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates the webhook configuration for an organization. To update more information about the webhook, including the `active` state and `events`, use \"[Update an organization webhook ](/rest/reference/orgs#update-an-organization-webhook).\"\n\nAccess tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:write` permission.",
    "documentationUrl": "https://docs.github.com/v3/orgs#update-a-webhook-configuration-for-an-organization",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\",\"url\":\"https://example.com/webhook\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add project collaborator",
    "scope": "projects",
    "id": "addCollaborator",
    "method": "PUT",
    "url": "/projects/{project_id}/collaborators/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#add-project-collaborator",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant the collaborator.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a project card",
    "scope": "projects",
    "id": "createCard",
    "method": "POST",
    "url": "/projects/columns/{column_id}/cards",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#create-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "The project card's note",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content_id",
        "description": "The unique identifier of the content associated with the card",
        "in": "BODY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content_type",
        "description": "The piece of content associated with the card",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a project column",
    "scope": "projects",
    "id": "createColumn",
    "method": "POST",
    "url": "/projects/{project_id}/columns",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#create-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "Name of the project column",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a user project",
    "scope": "projects",
    "id": "createForAuthenticatedUser",
    "method": "POST",
    "url": "/user/projects",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/projects/#create-a-user-project",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "name",
        "description": "Name of the project",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "Body of the project",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/users/octocat\",\"url\":\"https://api.github.com/projects/1002603\",\"html_url\":\"https://github.com/users/octocat/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002603/columns\",\"id\":1002603,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDM=\",\"name\":\"My Projects\",\"body\":\"A board to manage my personal projects.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create an organization project",
    "scope": "projects",
    "id": "createForOrg",
    "method": "POST",
    "url": "/orgs/{org}/projects",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://docs.github.com/v3/projects/#create-an-organization-project",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the project.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The description of the project.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\"}"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a repository project",
    "scope": "projects",
    "id": "createForRepo",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/projects",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://docs.github.com/v3/projects/#create-a-repository-project",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the project.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The description of the project.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/repos/api-playground/projects-test\",\"url\":\"https://api.github.com/projects/1002604\",\"html_url\":\"https://github.com/api-playground/projects-test/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002604/columns\",\"id\":1002604,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDQ=\",\"name\":\"Projects Documentation\",\"body\":\"Developer documentation project for the developer site.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a project",
    "scope": "projects",
    "id": "delete",
    "method": "DELETE",
    "url": "/projects/{project_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled.",
    "documentationUrl": "https://docs.github.com/v3/projects/#delete-a-project",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Delete Success", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a project card",
    "scope": "projects",
    "id": "deleteCard",
    "method": "DELETE",
    "url": "/projects/columns/cards/{card_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#delete-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a project column",
    "scope": "projects",
    "id": "deleteColumn",
    "method": "DELETE",
    "url": "/projects/columns/{column_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#delete-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a project",
    "scope": "projects",
    "id": "get",
    "method": "GET",
    "url": "/projects/{project_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://docs.github.com/v3/projects/#get-a-project",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/repos/api-playground/projects-test\",\"url\":\"https://api.github.com/projects/1002604\",\"html_url\":\"https://github.com/api-playground/projects-test/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002604/columns\",\"id\":1002604,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDQ=\",\"name\":\"Projects Documentation\",\"body\":\"Developer documentation project for the developer site.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a project card",
    "scope": "projects",
    "id": "getCard",
    "method": "GET",
    "url": "/projects/columns/cards/{card_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#get-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a project column",
    "scope": "projects",
    "id": "getColumn",
    "method": "GET",
    "url": "/projects/columns/{column_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#get-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get project permission for a user",
    "scope": "projects",
    "id": "getPermissionForUser",
    "method": "GET",
    "url": "/projects/{project_id}/collaborators/{username}/permission",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#get-project-permission-for-a-user",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"permission\":\"admin\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List project cards",
    "scope": "projects",
    "id": "listCards",
    "method": "GET",
    "url": "/projects/columns/{column_id}/cards",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#list-project-cards",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "archived_state",
        "description": "Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "archived", "not_archived"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List project collaborators",
    "scope": "projects",
    "id": "listCollaborators",
    "method": "GET",
    "url": "/projects/{project_id}/collaborators",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#list-project-collaborators",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "affiliation",
        "description": "Filters the collaborators by their affiliation. Can be one of:  \n\\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n\\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["outside", "direct", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List project columns",
    "scope": "projects",
    "id": "listColumns",
    "method": "GET",
    "url": "/projects/{project_id}/columns",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#list-project-columns",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organization projects",
    "scope": "projects",
    "id": "listForOrg",
    "method": "GET",
    "url": "/orgs/{org}/projects",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://docs.github.com/v3/projects/#list-organization-projects",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\"}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repository projects",
    "scope": "projects",
    "id": "listForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/projects",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://docs.github.com/v3/projects/#list-repository-projects",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"owner_url\":\"https://api.github.com/repos/api-playground/projects-test\",\"url\":\"https://api.github.com/projects/1002604\",\"html_url\":\"https://github.com/api-playground/projects-test/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002604/columns\",\"id\":1002604,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDQ=\",\"name\":\"Projects Documentation\",\"body\":\"Developer documentation project for the developer site.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}]"
          }
        ]
      },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List user projects",
    "scope": "projects",
    "id": "listForUser",
    "method": "GET",
    "url": "/users/{username}/projects",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/projects/#list-user-projects",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"owner_url\":\"https://api.github.com/users/octocat\",\"url\":\"https://api.github.com/projects/1002603\",\"html_url\":\"https://github.com/users/octocat/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002603/columns\",\"id\":1002603,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDM=\",\"name\":\"My Projects\",\"body\":\"A board to manage my personal projects.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}]"
          }
        ]
      },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Move a project card",
    "scope": "projects",
    "id": "moveCard",
    "method": "POST",
    "url": "/projects/columns/cards/{card_id}/moves",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#move-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "position",
        "description": "The position of the card in a column",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": "^(?:top|bottom|after:\\d+)$",
        "alias": null,
        "deprecated": null
      },
      {
        "name": "column_id",
        "description": "The unique identifier of the column the card should be moved to",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 201, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Move a project column",
    "scope": "projects",
    "id": "moveColumn",
    "method": "POST",
    "url": "/projects/columns/{column_id}/moves",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#move-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "position",
        "description": "The position of the column in a project",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": "^(?:first|last|after:\\d+)$",
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 201, "description": "response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove user as a collaborator",
    "scope": "projects",
    "id": "removeCollaborator",
    "method": "DELETE",
    "url": "/projects/{project_id}/collaborators/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#remove-project-collaborator",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a project",
    "scope": "projects",
    "id": "update",
    "method": "PATCH",
    "url": "/projects/{project_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
    "documentationUrl": "https://docs.github.com/v3/projects/#update-a-project",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "Name of the project",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "Body of the project",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "State of the project; either 'open' or 'closed'",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "organization_permission",
        "description": "The baseline permission that all organization members have on this project",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin", "none"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Whether or not this project can be seen by everyone.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/repos/api-playground/projects-test\",\"url\":\"https://api.github.com/projects/1002604\",\"html_url\":\"https://github.com/api-playground/projects-test/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002604/columns\",\"id\":1002604,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDQ=\",\"name\":\"Projects Documentation\",\"body\":\"Developer documentation project for the developer site.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "Response if the authenticated user does not have access to the project",
        "examples": null
      },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an existing project card",
    "scope": "projects",
    "id": "updateCard",
    "method": "PATCH",
    "url": "/projects/columns/cards/{card_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#update-a-project-card",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "note",
        "description": "The project card's note",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "archived",
        "description": "Whether or not the card is archived",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/cards/1478\",\"id\":1478,\"node_id\":\"MDExOlByb2plY3RDYXJkMTQ3OA==\",\"note\":\"Add payload for delete Project column\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2016-09-05T14:21:06Z\",\"updated_at\":\"2016-09-05T14:20:22Z\",\"archived\":false,\"column_url\":\"https://api.github.com/projects/columns/367\",\"content_url\":\"https://api.github.com/repos/api-playground/projects-test/issues/3\",\"project_url\":\"https://api.github.com/projects/120\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update an existing project column",
    "scope": "projects",
    "id": "updateColumn",
    "method": "PATCH",
    "url": "/projects/columns/{column_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/projects#update-a-project-column",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "Name of the project column",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/projects/columns/367\",\"project_url\":\"https://api.github.com/projects/120\",\"cards_url\":\"https://api.github.com/projects/columns/367/cards\",\"id\":367,\"node_id\":\"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\"name\":\"To Do\",\"created_at\":\"2016-09-05T14:18:44Z\",\"updated_at\":\"2016-09-05T14:22:28Z\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check if a pull request has been merged",
    "scope": "pulls",
    "id": "checkIfMerged",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/pulls/#check-if-a-pull-request-has-been-merged",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if pull request has been merged",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if pull request has not been merged",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a pull request",
    "scope": "pulls",
    "id": "create",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pulls",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nYou can create a new pull request.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#create-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the new pull request.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head",
        "description": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base",
        "description": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the pull request.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "maintainer_can_modify",
        "description": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "draft",
        "description": "Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue",
        "description": "",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"id\":1,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0MQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\"review_comments_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\"review_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"number\":1347,\"state\":\"open\",\"locked\":true,\"title\":\"Amazing new feature\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please pull these awesome changes in!\",\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"active_lock_reason\":\"too heated\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:01:12Z\",\"closed_at\":\"2011-01-26T19:01:12Z\",\"merged_at\":\"2011-01-26T19:01:12Z\",\"merge_commit_sha\":\"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true}],\"requested_reviewers\":[{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"requested_teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"}],\"head\":{\"label\":\"octocat:new-topic\",\"ref\":\"new-topic\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"forks\":123,\"open_issues\":123,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"watchers\":123}},\"base\":{\"label\":\"octocat:master\",\"ref\":\"master\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"forks\":123,\"open_issues\":123,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"watchers\":123}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1347\"},\"issue\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"},\"comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"}},\"author_association\":\"OWNER\",\"draft\":false,\"merged\":false,\"mergeable\":true,\"rebaseable\":true,\"mergeable_state\":\"clean\",\"merged_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"comments\":10,\"review_comments\":0,\"maintainer_can_modify\":true,\"commits\":3,\"additions\":100,\"deletions\":3,\"changed_files\":5}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a reply for a review comment",
    "scope": "pulls",
    "id": "createReplyForReviewComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#create-a-reply-for-a-review-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The text of the review comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\"pull_request_review_id\":42,\"id\":10,\"node_id\":\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\"diff_hunk\":\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\"path\":\"file1.txt\",\"position\":1,\"original_position\":4,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"original_commit_id\":\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\"in_reply_to_id\":426899381,\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Great stuff!\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\"author_association\":\"NONE\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"}},\"start_line\":1,\"original_start_line\":1,\"start_side\":\"RIGHT\",\"line\":2,\"original_line\":2,\"side\":\"RIGHT\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a review for a pull request",
    "scope": "pulls",
    "id": "createReview",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nPull request reviews created in the `PENDING` state do not include the `submitted_at` property in the response.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://docs.github.com/rest/reference/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#create-a-review-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_id",
        "description": "The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event",
        "description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://docs.github.com/rest/reference/pulls#submit-a-review-for-a-pull-request) when you are ready.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments",
        "description": "Use the following table to specify the location, destination, and contents of the draft review comment.",
        "in": "BODY",
        "type": "object[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments[].path",
        "description": "The relative path to the file that necessitates a review comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments[].position",
        "description": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments[].body",
        "description": "Text of the review comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments[].line",
        "description": "",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments[].side",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments[].start_line",
        "description": "",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comments[].start_side",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":80,\"node_id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"This is close to perfect! Please address the suggested inline change.\",\"state\":\"CHANGES_REQUESTED\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\"_links\":{\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"}},\"submitted_at\":\"2019-11-17T17:43:43Z\",\"commit_id\":\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a review comment for a pull request",
    "scope": "pulls",
    "id": "createReviewComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nCreates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an issue comment](https://docs.github.com/rest/reference/issues#create-an-issue-comment).\" We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.\n\nYou can still create a review comment using the `position` parameter. When you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required. For more information, see [Multi-line comment summary](https://docs.github.com/rest/reference/pulls#multi-line-comment-summary-3).\n\n**Note:** The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://docs.github.com/rest/reference/pulls#parameters-2) table.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#create-a-review-comment-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The text of the review comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_id",
        "description": "The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the `position`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "The relative path to the file that necessitates a comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "position",
        "description": "**Required without `comfort-fade` preview**. The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note above.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "side",
        "description": "**Required with `comfort-fade` preview**. In a split diff view, the side of the diff that the pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use `LEFT` for deletions that appear in red. Use `RIGHT` for additions that appear in green or unchanged lines that appear in white and are shown for context. For a multi-line comment, side represents whether the last line of the comment range is a deletion or addition. For more information, see \"[Diff view options](https://help.github.com/en/articles/about-comparing-branches-in-pull-requests#diff-view-options)\" in the GitHub Help documentation.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["LEFT", "RIGHT"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "line",
        "description": "**Required with `comfort-fade` preview**. The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "start_line",
        "description": "**Required when using multi-line comments**. To create multi-line comments, you must use the `comfort-fade` preview header. The `start_line` is the first line in the pull request diff that your multi-line comment applies to. To learn more about multi-line comments, see \"[Commenting on a pull request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)\" in the GitHub Help documentation.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "start_side",
        "description": "**Required when using multi-line comments**. To create multi-line comments, you must use the `comfort-fade` preview header. The `start_side` is the starting side of the diff that the comment applies to. Can be `LEFT` or `RIGHT`. To learn more about multi-line comments, see \"[Commenting on a pull request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)\" in the GitHub Help documentation. See `side` in this table for additional context.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["LEFT", "RIGHT", "side"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "in_reply_to",
        "description": "",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\"pull_request_review_id\":42,\"id\":10,\"node_id\":\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\"diff_hunk\":\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\"path\":\"file1.txt\",\"position\":1,\"original_position\":4,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"original_commit_id\":\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\"in_reply_to_id\":8,\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Great stuff!\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\"author_association\":\"NONE\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"}},\"start_line\":1,\"original_start_line\":1,\"start_side\":\"RIGHT\",\"line\":2,\"original_line\":2,\"side\":\"RIGHT\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a pending review for a pull request",
    "scope": "pulls",
    "id": "deletePendingReview",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#delete-a-pending-review-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":80,\"node_id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"This is close to perfect! Please address the suggested inline change.\",\"state\":\"CHANGES_REQUESTED\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\"_links\":{\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"}},\"submitted_at\":\"2019-11-17T17:43:43Z\",\"commit_id\":\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a review comment for a pull request",
    "scope": "pulls",
    "id": "deleteReviewComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a review comment.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#delete-a-review-comment-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Dismiss a review for a pull request",
    "scope": "pulls",
    "id": "dismissReview",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** To dismiss a pull request review on a [protected branch](https://docs.github.com/rest/reference/repos#branches), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#dismiss-a-review-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The message for the pull request review dismissal",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":80,\"node_id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Here is the body for the review.\",\"state\":\"DISMISSED\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\"_links\":{\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"}},\"submitted_at\":\"2019-11-17T17:43:43Z\",\"commit_id\":\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a pull request",
    "scope": "pulls",
    "id": "get",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/rest/reference/pulls#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#get-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"id\":1,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0MQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\"review_comments_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\"review_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"number\":1347,\"state\":\"open\",\"locked\":true,\"title\":\"Amazing new feature\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please pull these awesome changes in!\",\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"active_lock_reason\":\"too heated\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:01:12Z\",\"closed_at\":\"2011-01-26T19:01:12Z\",\"merged_at\":\"2011-01-26T19:01:12Z\",\"merge_commit_sha\":\"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true}],\"requested_reviewers\":[{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"requested_teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"}],\"head\":{\"label\":\"octocat:new-topic\",\"ref\":\"new-topic\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"forks\":123,\"open_issues\":123,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"watchers\":123}},\"base\":{\"label\":\"octocat:master\",\"ref\":\"master\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"forks\":123,\"open_issues\":123,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"watchers\":123}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1347\"},\"issue\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"},\"comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"}},\"author_association\":\"OWNER\",\"draft\":false,\"merged\":false,\"mergeable\":true,\"rebaseable\":true,\"mergeable_state\":\"clean\",\"merged_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"comments\":10,\"review_comments\":0,\"maintainer_can_modify\":true,\"commits\":3,\"additions\":100,\"deletions\":3,\"changed_files\":5}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 500, "description": "Internal Error", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a review for a pull request",
    "scope": "pulls",
    "id": "getReview",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#get-a-review-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":80,\"node_id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Here is the body for the review.\",\"state\":\"APPROVED\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\"_links\":{\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"}},\"submitted_at\":\"2019-11-17T17:43:43Z\",\"commit_id\":\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a review comment for a pull request",
    "scope": "pulls",
    "id": "getReviewComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nProvides details for a review comment.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://docs.github.com/rest/reference/pulls#parameters-2) table.\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/rest/reference/reactions) reactions.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#get-a-review-comment-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\"pull_request_review_id\":42,\"id\":10,\"node_id\":\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\"diff_hunk\":\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\"path\":\"file1.txt\",\"position\":1,\"original_position\":4,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"original_commit_id\":\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\"in_reply_to_id\":8,\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Great stuff!\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\"author_association\":\"NONE\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"}},\"start_line\":1,\"original_start_line\":1,\"start_side\":\"RIGHT\",\"line\":2,\"original_line\":2,\"side\":\"RIGHT\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List pull requests",
    "scope": "pulls",
    "id": "list",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#list-pull-requests",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Either `open`, `closed`, or `all` to filter by state.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head",
        "description": "Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-name`. For example: `github:new-script-format` or `octocat:test-branch`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base",
        "description": "Filter pulls by base branch name. Example: `gh-pages`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "What to sort results by. Can be either `created`, `updated`, `popularity` (comment count) or `long-running` (age, filtering by pulls updated in the last month).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "popularity", "long-running"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "The direction of the sort. Can be either `asc` or `desc`. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"id\":1,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0MQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\"review_comments_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\"review_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"number\":1347,\"state\":\"open\",\"locked\":true,\"title\":\"Amazing new feature\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please pull these awesome changes in!\",\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"active_lock_reason\":\"too heated\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:01:12Z\",\"closed_at\":\"2011-01-26T19:01:12Z\",\"merged_at\":\"2011-01-26T19:01:12Z\",\"merge_commit_sha\":\"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true}],\"requested_reviewers\":[{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"requested_teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"}],\"head\":{\"label\":\"octocat:new-topic\",\"ref\":\"new-topic\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}},\"base\":{\"label\":\"octocat:master\",\"ref\":\"master\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1347\"},\"issue\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"},\"comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"}},\"author_association\":\"OWNER\",\"draft\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List comments for a pull request review",
    "scope": "pulls",
    "id": "listCommentsForReview",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List comments for a specific pull request review.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#list-comments-for-a-pull-request-review",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\"pull_request_review_id\":42,\"id\":10,\"node_id\":\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\"diff_hunk\":\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\"path\":\"file1.txt\",\"position\":1,\"original_position\":4,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"original_commit_id\":\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\"in_reply_to_id\":8,\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Great stuff!\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\"author_association\":\"NONE\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"}}}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List commits on a pull request",
    "scope": "pulls",
    "id": "listCommits",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/commits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/rest/reference/repos#list-commits) endpoint.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#list-commits-on-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List pull requests files",
    "scope": "pulls",
    "id": "listFiles",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/files",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#list-pull-requests-files",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"sha\":\"bbcd538c8e72b8c175046e27cc8f907076331401\",\"filename\":\"file1.txt\",\"status\":\"added\",\"additions\":103,\"deletions\":21,\"changes\":124,\"blob_url\":\"https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\"raw_url\":\"https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"patch\":\"@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test\"}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 500, "description": "Internal Error", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List requested reviewers for a pull request",
    "scope": "pulls",
    "id": "listRequestedReviewers",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#list-requested-reviewers-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List review comments on a pull request",
    "scope": "pulls",
    "id": "listReviewComments",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nLists all review comments for a pull request. By default, review comments are in ascending order by ID.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://docs.github.com/rest/reference/pulls#parameters-2) table.\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/rest/reference/reactions) reactions.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#list-review-comments-on-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Can be either `asc` or `desc`. Ignored without `sort` parameter.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\"pull_request_review_id\":42,\"id\":10,\"node_id\":\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\"diff_hunk\":\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\"path\":\"file1.txt\",\"position\":1,\"original_position\":4,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"original_commit_id\":\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\"in_reply_to_id\":8,\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Great stuff!\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\"author_association\":\"NONE\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"}},\"start_line\":1,\"original_start_line\":1,\"start_side\":\"RIGHT\",\"line\":2,\"original_line\":2,\"side\":\"RIGHT\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List review comments in a repository",
    "scope": "pulls",
    "id": "listReviewCommentsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nLists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://docs.github.com/rest/reference/pulls#parameters-2) table.\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/rest/reference/reactions) reactions.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#list-review-comments-in-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Can be either `asc` or `desc`. Ignored without `sort` parameter.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\"pull_request_review_id\":42,\"id\":10,\"node_id\":\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\"diff_hunk\":\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\"path\":\"file1.txt\",\"position\":1,\"original_position\":4,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"original_commit_id\":\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\"in_reply_to_id\":8,\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Great stuff!\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\"author_association\":\"NONE\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"}},\"start_line\":1,\"original_start_line\":1,\"start_side\":\"RIGHT\",\"line\":2,\"original_line\":2,\"side\":\"RIGHT\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List reviews for a pull request",
    "scope": "pulls",
    "id": "listReviews",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The list of reviews returns in chronological order.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#list-reviews-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "The list of reviews returns in chronological order.",
        "examples": [
          {
            "data": "[{\"id\":80,\"node_id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Here is the body for the review.\",\"state\":\"APPROVED\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\"_links\":{\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"}},\"submitted_at\":\"2019-11-17T17:43:43Z\",\"commit_id\":\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\"author_association\":\"collaborator\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Merge a pull request",
    "scope": "pulls",
    "id": "merge",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/reference/guides#dealing-with-abuse-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#merge-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_title",
        "description": "Title for the automatic commit message.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_message",
        "description": "Extra detail to append to automatic commit message.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "SHA that pull request head must match to allow merge.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "merge_method",
        "description": "Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["merge", "squash", "rebase"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if merge was successful",
        "examples": [
          {
            "data": "{\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"merged\":true,\"message\":\"Pull Request successfully merged\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 405,
        "description": "Response if merge cannot be performed",
        "examples": [
          { "data": "{\"message\":\"Pull Request is not mergeable\"}" }
        ]
      },
      {
        "code": 409,
        "description": "Response if sha was provided and pull request head did not match",
        "examples": [
          {
            "data": "{\"message\":\"Head branch was modified. Review and try the merge again.\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove requested reviewers from a pull request",
    "scope": "pulls",
    "id": "removeRequestedReviewers",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#remove-requested-reviewers-from-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reviewers",
        "description": "An array of user `login`s that will be removed.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_reviewers",
        "description": "An array of team `slug`s that will be removed.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Request reviewers for a pull request",
    "scope": "pulls",
    "id": "requestReviewers",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/reference/guides#dealing-with-abuse-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#request-reviewers-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reviewers",
        "description": "An array of user `login`s that will be requested.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_reviewers",
        "description": "An array of team `slug`s that will be requested.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"id\":1,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0MQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\"review_comments_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\"review_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"number\":1347,\"state\":\"open\",\"locked\":true,\"title\":\"Amazing new feature\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please pull these awesome changes in!\",\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"active_lock_reason\":\"too heated\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:01:12Z\",\"closed_at\":\"2011-01-26T19:01:12Z\",\"merged_at\":\"2011-01-26T19:01:12Z\",\"merge_commit_sha\":\"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true}],\"requested_reviewers\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true},{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"requested_teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"}],\"head\":{\"label\":\"octocat:new-topic\",\"ref\":\"new-topic\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}},\"base\":{\"label\":\"octocat:master\",\"ref\":\"master\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1347\"},\"issue\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"},\"comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"}},\"author_association\":\"OWNER\",\"draft\":false}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 422,
        "description": "Response if user is not a collaborator",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Submit a review for a pull request",
    "scope": "pulls",
    "id": "submitReview",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#submit-a-review-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The body text of the pull request review",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event",
        "description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":80,\"node_id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Here is the body for the review.\",\"state\":\"APPROVED\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\"_links\":{\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"}},\"submitted_at\":\"2019-11-17T17:43:43Z\",\"commit_id\":\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a pull request",
    "scope": "pulls",
    "id": "update",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#update-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The title of the pull request.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the pull request.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "State of this Pull Request. Either `open` or `closed`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["open", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base",
        "description": "The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "maintainer_can_modify",
        "description": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"id\":1,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0MQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\"review_comments_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\"review_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"number\":1347,\"state\":\"open\",\"locked\":true,\"title\":\"Amazing new feature\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please pull these awesome changes in!\",\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"active_lock_reason\":\"too heated\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:01:12Z\",\"closed_at\":\"2011-01-26T19:01:12Z\",\"merged_at\":\"2011-01-26T19:01:12Z\",\"merge_commit_sha\":\"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true}],\"requested_reviewers\":[{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"requested_teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"}],\"head\":{\"label\":\"octocat:new-topic\",\"ref\":\"new-topic\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"forks\":123,\"open_issues\":123,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"watchers\":123}},\"base\":{\"label\":\"octocat:master\",\"ref\":\"master\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"allow_merge_commit\":true,\"forks\":123,\"open_issues\":123,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"watchers\":123}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1347\"},\"issue\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"},\"comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"}},\"author_association\":\"OWNER\",\"draft\":false,\"merged\":false,\"mergeable\":true,\"rebaseable\":true,\"mergeable_state\":\"clean\",\"merged_by\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"comments\":10,\"review_comments\":0,\"maintainer_can_modify\":true,\"commits\":3,\"additions\":100,\"deletions\":3,\"changed_files\":5}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a pull request branch",
    "scope": "pulls",
    "id": "updateBranch",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.",
    "documentationUrl": "https://docs.github.com/v3/pulls/#update-a-pull-request-branch",
    "previews": [{ "name": "lydian" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "expected_head_sha",
        "description": "The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a `422 Unprocessable Entity` status. You can use the \"[List commits](https://docs.github.com/rest/reference/repos#list-commits)\" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Updating pull request branch.\",\"url\":\"https://github.com/repos/octocat/Hello-World/pulls/53\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a review for a pull request",
    "scope": "pulls",
    "id": "updateReview",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Update the review summary comment with new text.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#update-a-review-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "pull_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The body text of the pull request review.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":80,\"node_id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"This is close to perfect! Please address the suggested inline change. And add more about this.\",\"state\":\"CHANGES_REQUESTED\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\"_links\":{\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/12\"}},\"submitted_at\":\"2019-11-17T17:43:43Z\",\"commit_id\":\"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\"author_association\":\"collaborator\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a review comment for a pull request",
    "scope": "pulls",
    "id": "updateReviewComment",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nEnables you to edit a review comment.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://docs.github.com/rest/reference/pulls#parameters-2) table.",
    "documentationUrl": "https://docs.github.com/rest/reference/pulls#update-a-review-comment-for-a-pull-request",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The text of the reply to the review comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\"pull_request_review_id\":42,\"id\":10,\"node_id\":\"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\"diff_hunk\":\"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\"path\":\"file1.txt\",\"position\":1,\"original_position\":4,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"original_commit_id\":\"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\"in_reply_to_id\":8,\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Great stuff!\",\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\"pull_request_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\"author_association\":\"NONE\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1\"}},\"start_line\":1,\"original_start_line\":1,\"start_side\":\"RIGHT\",\"line\":2,\"original_line\":2,\"side\":\"RIGHT\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get rate limit status for the authenticated user",
    "scope": "rateLimit",
    "id": "get",
    "method": "GET",
    "url": "/rate_limit",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.",
    "documentationUrl": "https://docs.github.com/v3/rate_limit/#get-rate-limit-status-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"resources\":{\"core\":{\"limit\":5000,\"remaining\":4999,\"reset\":1372700873},\"search\":{\"limit\":30,\"remaining\":18,\"reset\":1372697452},\"graphql\":{\"limit\":5000,\"remaining\":4993,\"reset\":1372700389},\"integration_manifest\":{\"limit\":5000,\"remaining\":4999,\"reset\":1551806725},\"code_scanning_upload\":{\"limit\":500,\"remaining\":499,\"reset\":1551806725}},\"rate\":{\"limit\":5000,\"remaining\":4999,\"reset\":1372700873}}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for a commit comment",
    "scope": "reactions",
    "id": "createForCommitComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments). A response with a `Status: 200 OK` means that you already added the reaction type to this commit comment.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-a-commit-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the commit comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Reaction exists",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "Reaction created",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for an issue",
    "scope": "reactions",
    "id": "createForIssue",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a reaction to an [issue](https://docs.github.com/rest/reference/issues/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-an-issue",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for an issue comment",
    "scope": "reactions",
    "id": "createForIssueComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments). A response with a `Status: 200 OK` means that you already added the reaction type to this issue comment.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-an-issue-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Reaction exists",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "Reaction created",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for a pull request review comment",
    "scope": "reactions",
    "id": "createForPullRequestReviewComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#comments). A response with a `Status: 200 OK` means that you already added the reaction type to this pull request review comment.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the pull request review comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Reaction exists",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      },
      {
        "code": 201,
        "description": "Reaction created",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for a team discussion comment",
    "scope": "reactions",
    "id": "createForTeamDiscussionCommentInOrg",
    "method": "POST",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a reaction to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for a team discussion comment (Legacy)",
    "scope": "reactions",
    "id": "createForTeamDiscussionCommentLegacy",
    "method": "POST",
    "url": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
    "isDeprecated": true,
    "deprecationDate": "2020-02-26",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion comment`](https://docs.github.comt/rest/reference/reactions#create-reaction-for-a-team-discussion-comment) endpoint.\n\nCreate a reaction to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment-legacy",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for a team discussion",
    "scope": "reactions",
    "id": "createForTeamDiscussionInOrg",
    "method": "POST",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a reaction to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create reaction for a team discussion (Legacy)",
    "scope": "reactions",
    "id": "createForTeamDiscussionLegacy",
    "method": "POST",
    "url": "/teams/{team_id}/discussions/{discussion_number}/reactions",
    "isDeprecated": true,
    "deprecationDate": "2020-02-26",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion`](https://docs.github.com/rest/reference/reactions#create-reaction-for-a-team-discussion) endpoint.\n\nCreate a reaction to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#create-reaction-for-a-team-discussion-legacy",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a commit comment reaction",
    "scope": "reactions",
    "id": "deleteForCommitComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#delete-a-commit-comment-reaction",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reaction_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an issue reaction",
    "scope": "reactions",
    "id": "deleteForIssue",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.\n\nDelete a reaction to an [issue](https://docs.github.com/rest/reference/issues/).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#delete-an-issue-reaction",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reaction_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an issue comment reaction",
    "scope": "reactions",
    "id": "deleteForIssueComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#delete-an-issue-comment-reaction",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reaction_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a pull request comment reaction",
    "scope": "reactions",
    "id": "deleteForPullRequestComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`\n\nDelete a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#delete-a-pull-request-comment-reaction",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reaction_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete team discussion reaction",
    "scope": "reactions",
    "id": "deleteForTeamDiscussion",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#delete-team-discussion-reaction",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reaction_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete team discussion comment reaction",
    "scope": "reactions",
    "id": "deleteForTeamDiscussionComment",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#delete-team-discussion-comment-reaction",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "reaction_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a reaction (Legacy)",
    "scope": "reactions",
    "id": "deleteLegacy",
    "method": "DELETE",
    "url": "/reactions/{reaction_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-02-26",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Reactions API. We recommend migrating your existing code to use the new delete reactions endpoints. For more information, see this [blog post](https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/).\n\nOAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://docs.github.com/rest/reference/teams#discussions) or [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#delete-a-reaction-legacy",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "reaction_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for a commit comment",
    "scope": "reactions",
    "id": "listForCommitComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the reactions to a [commit comment](https://docs.github.com/rest/reference/repos#comments).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-a-commit-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a commit comment.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for an issue",
    "scope": "reactions",
    "id": "listForIssue",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the reactions to an [issue](https://docs.github.com/rest/reference/issues).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-an-issue",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to an issue.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 410, "description": "Gone", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for an issue comment",
    "scope": "reactions",
    "id": "listForIssueComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the reactions to an [issue comment](https://docs.github.com/rest/reference/issues#comments).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-an-issue-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to an issue comment.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for a pull request review comment",
    "scope": "reactions",
    "id": "listForPullRequestReviewComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the reactions to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a pull request review comment.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for a team discussion comment",
    "scope": "reactions",
    "id": "listForTeamDiscussionCommentInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion comment.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for a team discussion comment (Legacy)",
    "scope": "reactions",
    "id": "listForTeamDiscussionCommentLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
    "isDeprecated": true,
    "deprecationDate": "2020-02-26",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/rest/reference/reactions#list-reactions-for-a-team-discussion-comment) endpoint.\n\nList the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment-legacy",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion comment.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for a team discussion",
    "scope": "reactions",
    "id": "listForTeamDiscussionInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the reactions to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List reactions for a team discussion (Legacy)",
    "scope": "reactions",
    "id": "listForTeamDiscussionLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/discussions/{discussion_number}/reactions",
    "isDeprecated": true,
    "deprecationDate": "2020-02-26",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/rest/reference/reactions#list-reactions-for-a-team-discussion) endpoint.\n\nList the reactions to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/v3/reactions/#list-reactions-for-a-team-discussion-legacy",
    "previews": [{ "name": "squirrel-girl" }],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "rocket",
          "eyes"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDg6UmVhY3Rpb24x\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"content\":\"heart\",\"created_at\":\"2016-05-20T20:09:31Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Accept a repository invitation",
    "scope": "repos",
    "id": "acceptInvitation",
    "method": "PATCH",
    "url": "/user/repository_invitations/{invitation_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#accept-a-repository-invitation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 409, "description": "Conflict", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add app access restrictions",
    "scope": "repos",
    "id": "addAppAccessRestrictions",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#add-app-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "apps",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add a repository collaborator",
    "scope": "repos",
    "id": "addCollaborator",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/collaborators/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\nFor more information the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/rest/reference/repos#invitations).\n\n**Rate limits**\n\nTo prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#add-a-repository-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n\\* `pull` - can pull, but not push to or administer this repository.  \n\\* `push` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push and administer this repository.  \n\\* `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.  \n\\* `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin", "maintain", "triage"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "Response when a new invitation is created",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"invitee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"inviter\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"permissions\":\"write\",\"created_at\":\"2016-06-13T14:52:50-05:00\",\"url\":\"https://api.github.com/user/repository_invitations/1296269\",\"html_url\":\"https://github.com/octocat/Hello-World/invitations\"}"
          }
        ]
      },
      {
        "code": 204,
        "description": "Response when person is already a collaborator",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add status check contexts",
    "scope": "repos",
    "id": "addStatusCheckContexts",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#add-status-check-contexts",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[\"continuous-integration/travis-ci\",\"continuous-integration/jenkins\"]"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add team access restrictions",
    "scope": "repos",
    "id": "addTeamAccessRestrictions",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. You can also give push access to child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#add-team-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "teams",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add user access restrictions",
    "scope": "repos",
    "id": "addUserAccessRestrictions",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#add-user-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "users",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check if a user is a repository collaborator",
    "scope": "repos",
    "id": "checkCollaborator",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/collaborators/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if user is a collaborator",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if user is not a collaborator",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Check if vulnerability alerts are enabled for a repository",
    "scope": "repos",
    "id": "checkVulnerabilityAlerts",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/vulnerability-alerts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".",
    "documentationUrl": "https://docs.github.com/v3/repos/#check-if-vulnerability-alerts-are-enabled-for-a-repository",
    "previews": [{ "name": "dorian" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if repository is enabled with vulnerability alerts",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if repository is not enabled with vulnerability alerts",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Compare two commits",
    "scope": "repos",
    "id": "compareCommits",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/compare/{base}...{head}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#compare-two-commits",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/compare/master...topic\",\"html_url\":\"https://github.com/octocat/Hello-World/compare/master...topic\",\"permalink_url\":\"https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17\",\"diff_url\":\"https://github.com/octocat/Hello-World/compare/master...topic.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/compare/master...topic.patch\",\"base_commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]},\"merge_base_commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]},\"status\":\"behind\",\"ahead_by\":1,\"behind_by\":2,\"total_commits\":1,\"commits\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]}],\"files\":[{\"sha\":\"bbcd538c8e72b8c175046e27cc8f907076331401\",\"filename\":\"file1.txt\",\"status\":\"added\",\"additions\":103,\"deletions\":21,\"changes\":124,\"blob_url\":\"https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\"raw_url\":\"https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"patch\":\"@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test\"}]}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 500, "description": "Internal Error", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a commit comment",
    "scope": "repos",
    "id": "createCommitComment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the comment.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "Relative path of the file to comment on.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "position",
        "description": "Line index in the diff to comment on.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "line",
        "description": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author_association\":\"collaborator\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create commit signature protection",
    "scope": "repos",
    "id": "createCommitSignatureProtection",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-commit-signature-protection",
    "previews": [{ "name": "zzzax" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\",\"enabled\":true}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a commit status",
    "scope": "repos",
    "id": "createCommitStatus",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/statuses/{sha}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-commit-status",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["error", "failure", "pending", "success"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "target_url",
        "description": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the status.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "context",
        "description": "A string label to differentiate this status from the status of other systems.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"id\":1,\"node_id\":\"MDY6U3RhdHVzMQ==\",\"state\":\"success\",\"description\":\"Build has completed successfully\",\"target_url\":\"https://ci.example.com/1000/output\",\"context\":\"continuous-integration/jenkins\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a deploy key",
    "scope": "repos",
    "id": "createDeployKey",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "You can create a read-only deploy key.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-deploy-key",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "A name for the key.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "key",
        "description": "The contents of the key.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "read_only",
        "description": "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n  \nDeploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/).\"",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"key\":\"ssh-rsa AAA...\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/keys/1\",\"title\":\"octocat@octomac\",\"verified\":true,\"created_at\":\"2014-12-10T15:53:42Z\",\"read_only\":true}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a deployment",
    "scope": "repos",
    "id": "createDeployment",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/deployments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deployments offer a few configurable parameters with certain defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them\nbefore we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have\nmultiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter\nmakes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If\nthe ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\nthe API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\nreturn a failure response.\n\nBy default, [commit statuses](https://docs.github.com/rest/reference/repos#statuses) for every submitted context must be in a `success`\nstate. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to\nspecify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\nnot require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text\nfield that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might\nbe `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an\napplication with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref.\n\n#### Merged branch response\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating\na deployment. This auto-merge happens when:\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master` in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful\nresponse.\n\n#### Merge conflict response\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't\nbe merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\n#### Failed commit status checks\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`\nstatus for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-deployment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The ref to deploy. This can be a branch, tag, or SHA.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "task",
        "description": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_merge",
        "description": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_contexts",
        "description": "The [status](https://docs.github.com/rest/reference/repos#statuses) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "payload",
        "description": "JSON payload with extra information about the deployment.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment",
        "description": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "Short description of the deployment.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "transient_environment",
        "description": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "production_environment",
        "description": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "created_at",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}"
          }
        ]
      },
      {
        "code": 202,
        "description": "Merged branch response",
        "examples": [
          {
            "data": "{\"message\":\"Auto-merged master into topic-branch on deployment.\"}"
          }
        ]
      },
      {
        "code": 409,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Conflict merging master into topic-branch\"}"
          },
          {
            "data": "{\"message\":\"Conflict: Commit status checks failed for topic-branch.\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a deployment status",
    "scope": "repos",
    "id": "createDeploymentStatus",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-deployment-status",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://docs.github.com/rest/overview/api-previews#deployment-statuses) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": [
          "error",
          "failure",
          "inactive",
          "in_progress",
          "queued",
          "pending",
          "success"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "target_url",
        "description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "log_url",
        "description": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the status. The maximum description length is 140 characters.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment",
        "description": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/rest/overview/api-previews#deployment-statuses) custom media type.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["production", "staging", "qa"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment_url",
        "description": "Sets the URL for accessing your environment. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_inactive",
        "description": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  \n**Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/rest/overview/api-previews#deployment-statuses) custom media type.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/rest/overview/api-previews#enhanced-deployments) custom media type.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\"id\":1,\"node_id\":\"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\"state\":\"success\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"description\":\"Deployment finished successfully.\",\"environment\":\"production\",\"target_url\":\"https://example.com/deployment/42/output\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"deployment_url\":\"https://api.github.com/repos/octocat/example/deployments/42\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"environment_url\":\"https://test-branch.lab.acme.com\",\"log_url\":\"https://example.com/deployment/42/output\"}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a repository dispatch event",
    "scope": "repos",
    "id": "createDispatchEvent",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/dispatches",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see \"[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch).\"\n\nThe `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.\n\nTo give you write access to the repository, you must use a personal access token with the `repo` scope. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line)\" in the GitHub Help documentation.\n\nThis input example shows how you can use the `client_payload` as a test to debug your workflow.",
    "documentationUrl": "https://docs.github.com/v3/repos/#create-a-repository-dispatch-event",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "event_type",
        "description": "A custom webhook event name.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_payload",
        "description": "JSON payload with extra information about the webhook event that your action or worklow may use.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "client_payload.*",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a repository for the authenticated user",
    "scope": "repos",
    "id": "createForAuthenticatedUser",
    "method": "POST",
    "url": "/user/repos",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a new repository for the authenticated user.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
    "documentationUrl": "https://docs.github.com/v3/repos/#create-a-repository-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "name",
        "description": "The name of the repository.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "homepage",
        "description": "A URL with more information about the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Whether the repository is private or public.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_issues",
        "description": "Whether issues are enabled.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_projects",
        "description": "Whether projects are enabled.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_wiki",
        "description": "Whether the wiki is enabled.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_id",
        "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_init",
        "description": "Whether the repository is initialized with a minimal README.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "gitignore_template",
        "description": "The desired language or platform to apply to the .gitignore.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "license_template",
        "description": "The license keyword of the open source license for this repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_squash_merge",
        "description": "Whether to allow squash merges for pull requests.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_merge_commit",
        "description": "Whether to allow merge commits for pull requests.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_rebase_merge",
        "description": "Whether to allow rebase merges for pull requests.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "delete_branch_on_merge",
        "description": "Whether to delete head branches when pull requests are merged",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_downloads",
        "description": "Whether downloads are enabled.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "is_template",
        "description": "Whether this repository acts as a template that can be used to generate new repositories.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks\":9,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"watchers\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues\":0,\"open_issues_count\":0,\"is_template\":true,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 400, "description": "Bad Request", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a fork",
    "scope": "repos",
    "id": "createFork",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/forks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://github.com/contact) or [GitHub Premium Support](https://premium.githubsupport.com).",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-fork",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "organization",
        "description": "Optional parameter to specify the organization name if forking into an organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks\":9,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"watchers\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues\":0,\"open_issues_count\":0,\"is_template\":true,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0}"
          }
        ]
      },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create an organization repository",
    "scope": "repos",
    "id": "createInOrg",
    "method": "POST",
    "url": "/orgs/{org}/repos",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
    "documentationUrl": "https://docs.github.com/v3/repos/#create-an-organization-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the repository.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "homepage",
        "description": "A URL with more information about the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Either `true` to create a private repository or `false` to create a public one.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "visibility",
        "description": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. For more information, see \"[Creating an internal repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)\" in the GitHub Help documentation.  \nThe `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["public", "private", "visibility", "internal"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_issues",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_projects",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_wiki",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "is_template",
        "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_id",
        "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "auto_init",
        "description": "Pass `true` to create an initial commit with empty README.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "gitignore_template",
        "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "license_template",
        "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_squash_merge",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_merge_commit",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_rebase_merge",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "delete_branch_on_merge",
        "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks\":9,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"watchers\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues\":0,\"open_issues_count\":0,\"is_template\":true,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create or update file contents",
    "scope": "repos",
    "id": "createOrUpdateFileContents",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a new file or replaces an existing file in a repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-or-update-file-contents",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content",
        "description": "The new file content, using Base64 encoding.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "The branch name. Default: the repository’s default branch (usually `master`)",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "The person that committed the file. Default: the authenticated user.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.date",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.date",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"a56507ed892d05a37c6d6128c260937ea4d287bd\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"node_id\":\"MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\",\"sha\":\"9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6\",\"sha\":\"da5a433788da5c255edad7979b328b67d79f53f6\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      },
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":{\"name\":\"hello.txt\",\"path\":\"notes/hello.txt\",\"sha\":\"95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"size\":9,\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\"git_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"download_url\":\"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\"git\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\"html\":\"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"}},\"commit\":{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 409, "description": "Conflict", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a GitHub Pages site",
    "scope": "repos",
    "id": "createPagesSite",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pages",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Configures a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-github-pages-site",
    "previews": [{ "name": "switcheroo" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "source",
        "description": "The source branch and directory used to publish your Pages site.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "source.branch",
        "description": "The repository branch used to publish your site's source files.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "source.path",
        "description": "The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["/", "/docs"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/github/developer.github.com/pages\",\"status\":\"built\",\"cname\":\"developer.github.com\",\"custom_404\":false,\"html_url\":\"https://developer.github.com\",\"source\":{\"branch\":\"master\",\"path\":\"/\"}}"
          }
        ]
      },
      { "code": 409, "description": "Conflict", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a release",
    "scope": "repos",
    "id": "createRelease",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/releases",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-release",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tag_name",
        "description": "The name of the tag.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "target_commitish",
        "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the release.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "Text describing the contents of the tag.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "draft",
        "description": "`true` to create a draft (unpublished) release, `false` to create a published one.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "prerelease",
        "description": "`true` to identify the release as a prerelease. `false` to identify the release as a full release.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1\",\"html_url\":\"https://github.com/octocat/Hello-World/releases/v1.0.0\",\"assets_url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\"upload_url\":\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\"tarball_url\":\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\"zipball_url\":\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\"id\":1,\"node_id\":\"MDc6UmVsZWFzZTE=\",\"tag_name\":\"v1.0.0\",\"target_commitish\":\"master\",\"name\":\"v1.0.0\",\"body\":\"Description of the release\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-02-27T19:35:32Z\",\"published_at\":\"2013-02-27T19:35:32Z\",\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assets\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a repository using a template",
    "scope": "repos",
    "id": "createUsingTemplate",
    "method": "POST",
    "url": "/repos/{template_owner}/{template_repo}/generate",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
    "documentationUrl": "https://docs.github.com/v3/repos/#create-a-repository-using-a-template",
    "previews": [{ "name": "baptiste" }],
    "headers": [],
    "parameters": [
      {
        "name": "template_owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "template_repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owner",
        "description": "The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the new repository.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the new repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "include_all_branches",
        "description": "Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Either `true` to create a new private repository or `false` to create a new public one.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"forks\":9,\"stargazers_count\":80,\"watchers_count\":80,\"watchers\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"open_issues\":0,\"is_template\":false,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a repository webhook",
    "scope": "repos",
    "id": "createWebhook",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/hooks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can\nshare the same `config` as long as those webhooks do not have any `events` that overlap.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#create-a-repository-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/repos#create-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.token",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.digest",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Decline a repository invitation",
    "scope": "repos",
    "id": "declineInvitation",
    "method": "DELETE",
    "url": "/user/repository_invitations/{invitation_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#decline-a-repository-invitation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 409, "description": "Conflict", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a repository",
    "scope": "repos",
    "id": "delete",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned\nrepositories, you will get a `403 Forbidden` response.",
    "documentationUrl": "https://docs.github.com/v3/repos/#delete-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      {
        "code": 403,
        "description": "If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:",
        "examples": [
          {
            "data": "{\"message\":\"Organization members cannot delete repositories.\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#delete-a-repository\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete access restrictions",
    "scope": "repos",
    "id": "deleteAccessRestrictions",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "No Content", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete admin branch protection",
    "scope": "repos",
    "id": "deleteAdminBranchProtection",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-admin-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "No Content", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete branch protection",
    "scope": "repos",
    "id": "deleteBranchProtection",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a commit comment",
    "scope": "repos",
    "id": "deleteCommitComment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete commit signature protection",
    "scope": "repos",
    "id": "deleteCommitSignatureProtection",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-commit-signature-protection",
    "previews": [{ "name": "zzzax" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "No Content", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a deploy key",
    "scope": "repos",
    "id": "deleteDeployKey",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/keys/{key_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-deploy-key",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a deployment",
    "scope": "repos",
    "id": "deleteDeployment",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "To ensure there can always be an active deployment, you can only delete an _inactive_ deployment. Anyone with `repo` or `repo_deployment` scopes can delete an inactive deployment.\n\nTo set a deployment as inactive, you must:\n\n*   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.\n*   Mark the active deployment as inactive by adding any non-successful deployment status.\n\nFor more information, see \"[Create a deployment](https://docs.github.com/rest/reference/repos/deployments/#create-a-deployment)\" and \"[Create a deployment status](https://docs.github.com/rest/reference/repos#create-a-deployment-status).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-deployment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a file",
    "scope": "repos",
    "id": "deleteFile",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-file",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "message",
        "description": "The commit message.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The blob SHA of the file being replaced.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "The branch name. Default: the repository’s default branch (usually `master`)",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer",
        "description": "object containing information about the committer.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "committer.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "object containing information about the author.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.name",
        "description": "The name of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author.email",
        "description": "The email of the author (or committer) of the commit",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"content\":null,\"commit\":{\"sha\":\"7638417db6d59f3c431d3e1f261cc637155684cd\",\"node_id\":\"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\"author\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"committer\":{\"date\":\"2014-11-07T22:01:45Z\",\"name\":\"Monalisa Octocat\",\"email\":\"octocat@github.com\"},\"message\":\"my commit message\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\"sha\":\"691272480426f78a0138979dd3ce63b77f706feb\"},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"html_url\":\"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\"sha\":\"1acc419d4d6a9ce985db7be48c6349a0475975b5\"}],\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 409, "description": "Conflict", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a repository invitation",
    "scope": "repos",
    "id": "deleteInvitation",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/invitations/{invitation_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-repository-invitation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a GitHub Pages site",
    "scope": "repos",
    "id": "deletePagesSite",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/pages",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-github-pages-site",
    "previews": [{ "name": "switcheroo" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete pull request review protection",
    "scope": "repos",
    "id": "deletePullRequestReviewProtection",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-pull-request-review-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "No Content", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a release",
    "scope": "repos",
    "id": "deleteRelease",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/releases/{release_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with push access to the repository can delete a release.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-release",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a release asset",
    "scope": "repos",
    "id": "deleteReleaseAsset",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-release-asset",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "asset_id",
        "description": "asset_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a repository webhook",
    "scope": "repos",
    "id": "deleteWebhook",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#delete-a-repository-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Disable automated security fixes",
    "scope": "repos",
    "id": "disableAutomatedSecurityFixes",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/automated-security-fixes",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\".",
    "documentationUrl": "https://docs.github.com/v3/repos/#disable-automated-security-fixes",
    "previews": [{ "name": "london" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Disable vulnerability alerts",
    "scope": "repos",
    "id": "disableVulnerabilityAlerts",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/vulnerability-alerts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".",
    "documentationUrl": "https://docs.github.com/v3/repos/#disable-vulnerability-alerts",
    "previews": [{ "name": "dorian" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Download a repository archive (tar)",
    "scope": "repos",
    "id": "downloadArchive",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/tarball/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#download-a-repository-archive",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 302, "description": "response", "examples": null }],
    "renamed": {
      "before": { "scope": "repos", "id": "downloadArchive" },
      "after": { "scope": "repos", "id": "downloadTarballArchive" },
      "date": "2020-09-17",
      "note": null
    }
  },
  {
    "name": "Download a repository archive (zip)",
    "scope": "repos",
    "id": "downloadArchive",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/zipball/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#download-a-repository-archive",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 302, "description": "response", "examples": null }],
    "renamed": {
      "before": { "scope": "repos", "id": "downloadArchive" },
      "after": { "scope": "repos", "id": "downloadZipballArchive" },
      "date": "2020-09-17",
      "note": null
    }
  },
  {
    "name": "Download a repository archive (tar)",
    "scope": "repos",
    "id": "downloadTarballArchive",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/tarball/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#download-a-repository-archive",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 302, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Download a repository archive (zip)",
    "scope": "repos",
    "id": "downloadZipballArchive",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/zipball/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#download-a-repository-archive",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [{ "code": 302, "description": "response", "examples": null }],
    "renamed": null
  },
  {
    "name": "Enable automated security fixes",
    "scope": "repos",
    "id": "enableAutomatedSecurityFixes",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/automated-security-fixes",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\".",
    "documentationUrl": "https://docs.github.com/v3/repos/#enable-automated-security-fixes",
    "previews": [{ "name": "london" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Enable vulnerability alerts",
    "scope": "repos",
    "id": "enableVulnerabilityAlerts",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/vulnerability-alerts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".",
    "documentationUrl": "https://docs.github.com/v3/repos/#enable-vulnerability-alerts",
    "previews": [{ "name": "dorian" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a repository",
    "scope": "repos",
    "id": "get",
    "method": "GET",
    "url": "/repos/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "When you pass the `scarlet-witch-preview` media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.\n\nThe `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.",
    "documentationUrl": "https://docs.github.com/v3/repos/#get-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"forks\":9,\"stargazers_count\":80,\"watchers_count\":80,\"watchers\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"open_issues\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"pull\":true,\"push\":false,\"admin\":false},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"organization\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"parent\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1},\"source\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}}"
          },
          {
            "data": "{\"id\":88760408,\"node_id\":\"MDEwOlJlcG9zaXRvcnk4ODc2MDQwOA==\",\"name\":\"cosee\",\"full_name\":\"LindseyB/cosee\",\"disabled\":false,\"archived\":false,\"owner\":{\"login\":\"LindseyB\",\"id\":33750,\"node_id\":\"MDQ6VXNlcjMzNzUw\",\"avatar_url\":\"https://avatars2.githubusercontent.com/u/33750?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/LindseyB\",\"html_url\":\"https://github.com/LindseyB\",\"followers_url\":\"https://api.github.com/users/LindseyB/followers\",\"following_url\":\"https://api.github.com/users/LindseyB/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/LindseyB/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/LindseyB/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/LindseyB/subscriptions\",\"organizations_url\":\"https://api.github.com/users/LindseyB/orgs\",\"repos_url\":\"https://api.github.com/users/LindseyB/repos\",\"events_url\":\"https://api.github.com/users/LindseyB/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/LindseyB/received_events\",\"type\":\"User\",\"site_admin\":true},\"private\":false,\"html_url\":\"https://github.com/LindseyB/cosee\",\"description\":null,\"fork\":false,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"url\":\"https://api.github.com/repos/LindseyB/cosee\",\"forks_url\":\"https://api.github.com/repos/LindseyB/cosee/forks\",\"keys_url\":\"https://api.github.com/repos/LindseyB/cosee/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/LindseyB/cosee/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/LindseyB/cosee/teams\",\"hooks_url\":\"https://api.github.com/repos/LindseyB/cosee/hooks\",\"issue_events_url\":\"https://api.github.com/repos/LindseyB/cosee/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/LindseyB/cosee/events\",\"assignees_url\":\"https://api.github.com/repos/LindseyB/cosee/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/LindseyB/cosee/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/LindseyB/cosee/tags\",\"blobs_url\":\"https://api.github.com/repos/LindseyB/cosee/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/LindseyB/cosee/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/LindseyB/cosee/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/LindseyB/cosee/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/LindseyB/cosee/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/LindseyB/cosee/languages\",\"stargazers_url\":\"https://api.github.com/repos/LindseyB/cosee/stargazers\",\"contributors_url\":\"https://api.github.com/repos/LindseyB/cosee/contributors\",\"subscribers_url\":\"https://api.github.com/repos/LindseyB/cosee/subscribers\",\"subscription_url\":\"https://api.github.com/repos/LindseyB/cosee/subscription\",\"commits_url\":\"https://api.github.com/repos/LindseyB/cosee/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/LindseyB/cosee/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/LindseyB/cosee/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/LindseyB/cosee/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/LindseyB/cosee/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/LindseyB/cosee/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/LindseyB/cosee/merges\",\"archive_url\":\"https://api.github.com/repos/LindseyB/cosee/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/LindseyB/cosee/downloads\",\"issues_url\":\"https://api.github.com/repos/LindseyB/cosee/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/LindseyB/cosee/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/LindseyB/cosee/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/LindseyB/cosee/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/LindseyB/cosee/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/LindseyB/cosee/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/LindseyB/cosee/deployments\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"git_url\":\"git://github.com/LindseyB/cosee.git\",\"ssh_url\":\"git@github.com=>LindseyB/cosee.git\",\"clone_url\":\"https://github.com/LindseyB/cosee.git\",\"svn_url\":\"https://github.com/LindseyB/cosee\",\"homepage\":null,\"size\":1,\"stargazers_count\":0,\"watchers_count\":0,\"language\":null,\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":true,\"has_pages\":false,\"forks_count\":0,\"mirror_url\":null,\"open_issues_count\":0,\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"master\",\"network_count\":0,\"subscribers_count\":0}"
          }
        ]
      },
      { "code": 301, "description": "Moved Permanently", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get access restrictions",
    "scope": "repos",
    "id": "getAccessRestrictions",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists who has access to this protected branch.\n\n**Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\"apps_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}],\"apps\":[{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}]}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get admin branch protection",
    "scope": "repos",
    "id": "getAdminBranchProtection",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-admin-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\"enabled\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get all status check contexts",
    "scope": "repos",
    "id": "getAllStatusCheckContexts",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-all-status-check-contexts",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "[\"continuous-integration/travis-ci\"]" }]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get all repository topics",
    "scope": "repos",
    "id": "getAllTopics",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/topics",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/repos/#get-all-repository-topics",
    "previews": [{ "name": "mercy" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          { "data": "{\"names\":[\"octocat\",\"atom\",\"electron\",\"api\"]}" }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get apps with access to the protected branch",
    "scope": "repos",
    "id": "getAppsWithAccessToProtectedBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-apps-with-access-to-the-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a branch",
    "scope": "repos",
    "id": "getBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"name\":\"master\",\"commit\":{\"sha\":\"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"node_id\":\"MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==\",\"commit\":{\"author\":{\"name\":\"The Octocat\",\"date\":\"2012-03-06T15:06:50-08:00\",\"email\":\"octocat@nowhere.com\"},\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"message\":\"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\"tree\":{\"sha\":\"b4eecafa9be2f2006ce1b709d6857b07069b4608\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608\"},\"committer\":{\"name\":\"The Octocat\",\"date\":\"2012-03-06T15:06:50-08:00\",\"email\":\"octocat@nowhere.com\"},\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null},\"comment_count\":0},\"author\":{\"gravatar_id\":\"\",\"avatar_url\":\"https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"url\":\"https://api.github.com/users/octocat\",\"id\":583231,\"login\":\"octocat\",\"node_id\":\"MDQ6VXNlcjE=\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"parents\":[{\"sha\":\"553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\"},{\"sha\":\"762941318ee16e59dabbacb1b4049eec22f0d303\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303\"}],\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\"committer\":{\"gravatar_id\":\"\",\"avatar_url\":\"https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"url\":\"https://api.github.com/users/octocat\",\"id\":583231,\"login\":\"octocat\",\"node_id\":\"MDQ6VXNlcjE=\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\"},\"_links\":{\"html\":\"https://github.com/octocat/Hello-World/tree/master\",\"self\":\"https://api.github.com/repos/octocat/Hello-World/branches/master\"},\"protected\":true,\"protection\":{\"enabled\":true,\"required_status_checks\":{\"enforcement_level\":\"non_admins\",\"contexts\":[\"ci-test\",\"linter\"]}},\"protection_url\":\"https://api.github.com/repos/octocat/hello-world/branches/master/protection\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get branch protection",
    "scope": "repos",
    "id": "getBranchProtection",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection\",\"enabled\":true,\"required_status_checks\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\",\"enforcement_level\":\"non_admins\"},\"enforce_admins\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\"enabled\":true},\"required_pull_request_reviews\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\"dismissal_restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":2},\"restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\"apps_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}],\"apps\":[{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\"},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}]},\"required_linear_history\":{\"enabled\":true},\"allow_force_pushes\":{\"enabled\":true},\"allow_deletions\":{\"enabled\":true}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get repository clones",
    "scope": "repos",
    "id": "getClones",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/traffic/clones",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-repository-clones",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per",
        "description": "Must be one of: `day`, `week`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["day", "week"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"count\":173,\"uniques\":128,\"clones\":[{\"timestamp\":\"2016-10-10T00:00:00Z\",\"count\":2,\"uniques\":1},{\"timestamp\":\"2016-10-11T00:00:00Z\",\"count\":17,\"uniques\":16},{\"timestamp\":\"2016-10-12T00:00:00Z\",\"count\":21,\"uniques\":15},{\"timestamp\":\"2016-10-13T00:00:00Z\",\"count\":8,\"uniques\":7},{\"timestamp\":\"2016-10-14T00:00:00Z\",\"count\":5,\"uniques\":5},{\"timestamp\":\"2016-10-15T00:00:00Z\",\"count\":2,\"uniques\":2},{\"timestamp\":\"2016-10-16T00:00:00Z\",\"count\":8,\"uniques\":7},{\"timestamp\":\"2016-10-17T00:00:00Z\",\"count\":26,\"uniques\":15},{\"timestamp\":\"2016-10-18T00:00:00Z\",\"count\":19,\"uniques\":17},{\"timestamp\":\"2016-10-19T00:00:00Z\",\"count\":19,\"uniques\":14},{\"timestamp\":\"2016-10-20T00:00:00Z\",\"count\":19,\"uniques\":15},{\"timestamp\":\"2016-10-21T00:00:00Z\",\"count\":9,\"uniques\":7},{\"timestamp\":\"2016-10-22T00:00:00Z\",\"count\":5,\"uniques\":5},{\"timestamp\":\"2016-10-23T00:00:00Z\",\"count\":6,\"uniques\":5},{\"timestamp\":\"2016-10-24T00:00:00Z\",\"count\":7,\"uniques\":5}]}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get the weekly commit activity",
    "scope": "repos",
    "id": "getCodeFrequencyStats",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/stats/code_frequency",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-the-weekly-commit-activity",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.",
        "examples": [{ "data": "[[1302998400,1124,-435]]" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get repository permissions for a user",
    "scope": "repos",
    "id": "getCollaboratorPermissionLevel",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/collaborators/{username}/permission",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-repository-permissions-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if user has admin permissions",
        "examples": [
          {
            "data": "{\"permission\":\"admin\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get the combined status for a specific reference",
    "scope": "repos",
    "id": "getCombinedStatusForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/status",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-the-combined-status-for-a-specific-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"state\":\"success\",\"statuses\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"id\":1,\"node_id\":\"MDY6U3RhdHVzMQ==\",\"state\":\"success\",\"description\":\"Build has completed successfully\",\"target_url\":\"https://ci.example.com/1000/output\",\"context\":\"continuous-integration/jenkins\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\"},{\"url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"id\":2,\"node_id\":\"MDY6U3RhdHVzMg==\",\"state\":\"success\",\"description\":\"Testing has completed successfully\",\"target_url\":\"https://ci.example.com/2000/output\",\"context\":\"security/brakeman\",\"created_at\":\"2012-08-20T01:19:13Z\",\"updated_at\":\"2012-08-20T01:19:13Z\"}],\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"total_count\":2,\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"commit_url\":\"https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a commit",
    "scope": "repos",
    "id": "getCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-commit",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}],\"stats\":{\"additions\":104,\"deletions\":4,\"total\":108},\"files\":[{\"filename\":\"file1.txt\",\"additions\":10,\"deletions\":2,\"changes\":12,\"status\":\"modified\",\"raw_url\":\"https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\"blob_url\":\"https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\"patch\":\"@@ -29,7 +29,7 @@\\n.....\"}]}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 500, "description": "Internal Error", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get the last year of commit activity",
    "scope": "repos",
    "id": "getCommitActivityStats",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/stats/commit_activity",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-the-last-year-of-commit-activity",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"days\":[0,3,26,20,39,1,0],\"total\":89,\"week\":1336280400}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a commit comment",
    "scope": "repos",
    "id": "getCommitComment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author_association\":\"collaborator\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get commit signature protection",
    "scope": "repos",
    "id": "getCommitSignatureProtection",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-commit-signature-protection",
    "previews": [{ "name": "zzzax" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\",\"enabled\":true}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get community profile metrics",
    "scope": "repos",
    "id": "getCommunityProfileMetrics",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/community/profile",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint will return all community profile metrics, including an\noverall health score, repository description, the presence of documentation, detected\ncode of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE,\nREADME, and CONTRIBUTING files.\n\n`content_reports_enabled` is only returned for organization-owned repositories.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-community-profile-metrics",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"health_percentage\":100,\"description\":\"My first repository on GitHub!\",\"documentation\":null,\"files\":{\"code_of_conduct\":{\"name\":\"Contributor Covenant\",\"key\":\"contributor_covenant\",\"url\":\"https://api.github.com/codes_of_conduct/contributor_covenant\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md\"},\"contributing\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING\"},\"issue_template\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE\"},\"pull_request_template\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE\"},\"license\":{\"name\":\"MIT License\",\"key\":\"mit\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/LICENSE\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"},\"readme\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/contents/README.md\",\"html_url\":\"https://github.com/octocat/Hello-World/blob/master/README.md\"}},\"updated_at\":\"2017-02-28T19:09:29Z\",\"content_reports_enabled\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get repository content",
    "scope": "repos",
    "id": "getContent",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/contents/{path}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of all files in the repository.\n\nFiles and symlinks support [a custom media type](https://docs.github.com/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-repository-content",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "path+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"file\",\"encoding\":\"base64\",\"size\":5362,\"name\":\"README.md\",\"path\":\"README.md\",\"content\":\"encoded content ...\",\"sha\":\"3d21ec53a331a6f037a91c368710b99387d012c1\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\"html_url\":\"https://github.com/octokit/octokit.rb/blob/master/README.md\",\"download_url\":\"https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md\",\"_links\":{\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\"html\":\"https://github.com/octokit/octokit.rb/blob/master/README.md\"}}"
          },
          {
            "data": "[{\"type\":\"file\",\"size\":625,\"name\":\"octokit.rb\",\"path\":\"lib/octokit.rb\",\"sha\":\"fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\",\"html_url\":\"https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb\",\"download_url\":\"https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb\",\"_links\":{\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb\",\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\",\"html\":\"https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb\"}},{\"type\":\"dir\",\"size\":0,\"name\":\"octokit\",\"path\":\"lib/octokit\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"html_url\":\"https://github.com/octokit/octokit.rb/tree/master/lib/octokit\",\"download_url\":null,\"_links\":{\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit\",\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"html\":\"https://github.com/octokit/octokit.rb/tree/master/lib/octokit\"}}]"
          },
          {
            "data": "{\"type\":\"symlink\",\"target\":\"/path/to/symlink/target\",\"size\":23,\"name\":\"some-symlink\",\"path\":\"bin/some-symlink\",\"sha\":\"452a98979c88e093d682cab404a3ec82babebb48\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48\",\"html_url\":\"https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink\",\"download_url\":\"https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink\",\"_links\":{\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48\",\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink\",\"html\":\"https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink\"}}"
          },
          {
            "data": "{\"type\":\"submodule\",\"submodule_git_url\":\"git://github.com/jquery/qunit.git\",\"size\":0,\"name\":\"qunit\",\"path\":\"test/qunit\",\"sha\":\"6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"url\":\"https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master\",\"git_url\":\"https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"html_url\":\"https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"download_url\":null,\"_links\":{\"git\":\"https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9\",\"self\":\"https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master\",\"html\":\"https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9\"}}"
          }
        ]
      },
      { "code": 302, "description": "Found", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get all contributor commit activity",
    "scope": "repos",
    "id": "getContributorsStats",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/stats/contributors",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "\nReturns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-all-contributor-commit-activity",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits",
        "examples": [
          {
            "data": "[{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"total\":135,\"weeks\":[{\"w\":\"1367712000\",\"a\":6898,\"d\":77,\"c\":10}]}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a deploy key",
    "scope": "repos",
    "id": "getDeployKey",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/keys/{key_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-deploy-key",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"key\":\"ssh-rsa AAA...\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/keys/1\",\"title\":\"octocat@octomac\",\"verified\":true,\"created_at\":\"2014-12-10T15:53:42Z\",\"read_only\":true}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a deployment",
    "scope": "repos",
    "id": "getDeployment",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-deployment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a deployment status",
    "scope": "repos",
    "id": "getDeploymentStatus",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with pull access can view a deployment status for a deployment:",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-deployment-status",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "status_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\"id\":1,\"node_id\":\"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\"state\":\"success\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"description\":\"Deployment finished successfully.\",\"environment\":\"production\",\"target_url\":\"https://example.com/deployment/42/output\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"deployment_url\":\"https://api.github.com/repos/octocat/example/deployments/42\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"environment_url\":\"https://test-branch.lab.acme.com\",\"log_url\":\"https://example.com/deployment/42/output\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get latest Pages build",
    "scope": "repos",
    "id": "getLatestPagesBuild",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pages/builds/latest",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-latest-pages-build",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\",\"status\":\"built\",\"error\":{\"message\":null},\"pusher\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"commit\":\"351391cdcb88ffae71ec3028c91f375a8036a26b\",\"duration\":2104,\"created_at\":\"2014-02-10T19:00:49Z\",\"updated_at\":\"2014-02-10T19:00:51Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get the latest release",
    "scope": "repos",
    "id": "getLatestRelease",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/releases/latest",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-the-latest-release",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1\",\"html_url\":\"https://github.com/octocat/Hello-World/releases/v1.0.0\",\"assets_url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\"upload_url\":\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\"tarball_url\":\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\"zipball_url\":\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\"id\":1,\"node_id\":\"MDc6UmVsZWFzZTE=\",\"tag_name\":\"v1.0.0\",\"target_commitish\":\"master\",\"name\":\"v1.0.0\",\"body\":\"Description of the release\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-02-27T19:35:32Z\",\"published_at\":\"2013-02-27T19:35:32Z\",\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assets\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a GitHub Pages site",
    "scope": "repos",
    "id": "getPages",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pages",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-github-pages-site",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/github/developer.github.com/pages\",\"status\":\"built\",\"cname\":\"developer.github.com\",\"custom_404\":false,\"html_url\":\"https://developer.github.com\",\"source\":{\"branch\":\"master\",\"path\":\"/\"}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get GitHub Pages build",
    "scope": "repos",
    "id": "getPagesBuild",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pages/builds/{build_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-github-pages-build",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "build_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\",\"status\":\"built\",\"error\":{\"message\":null},\"pusher\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"commit\":\"351391cdcb88ffae71ec3028c91f375a8036a26b\",\"duration\":2104,\"created_at\":\"2014-02-10T19:00:49Z\",\"updated_at\":\"2014-02-10T19:00:51Z\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get the weekly commit count",
    "scope": "repos",
    "id": "getParticipationStats",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/stats/participation",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-the-weekly-commit-count",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "The array order is oldest week (index 0) to most recent week.",
        "examples": [
          {
            "data": "{\"all\":[11,21,15,2,8,1,8,23,17,21,11,10,33,91,38,34,22,23,32,3,43,87,71,18,13,5,13,16,66,27,12,45,110,117,13,8,18,9,19,26,39,12,20,31,46,91,45,10,24,9,29,7],\"owner\":[3,2,3,0,2,0,5,14,7,9,1,5,0,48,19,2,0,1,10,2,23,40,35,8,8,2,10,6,30,0,2,9,53,104,3,3,10,4,7,11,21,4,4,22,26,63,11,2,14,1,10,3]}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get pull request review protection",
    "scope": "repos",
    "id": "getPullRequestReviewProtection",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-pull-request-review-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\"dismissal_restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":2}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get the hourly commit count for each day",
    "scope": "repos",
    "id": "getPunchCardStats",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/stats/punch_card",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-the-hourly-commit-count-for-each-day",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.",
        "examples": [{ "data": "[[0,0,5],[0,1,43],[0,2,21]]" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a repository README",
    "scope": "repos",
    "id": "getReadme",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/readme",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-repository-readme",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"file\",\"encoding\":\"base64\",\"size\":5362,\"name\":\"README.md\",\"path\":\"README.md\",\"content\":\"encoded content ...\",\"sha\":\"3d21ec53a331a6f037a91c368710b99387d012c1\",\"url\":\"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\"git_url\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\"html_url\":\"https://github.com/octokit/octokit.rb/blob/master/README.md\",\"download_url\":\"https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md\",\"_links\":{\"git\":\"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\"self\":\"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\"html\":\"https://github.com/octokit/octokit.rb/blob/master/README.md\"}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a release",
    "scope": "repos",
    "id": "getRelease",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/releases/{release_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-release",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1\",\"html_url\":\"https://github.com/octocat/Hello-World/releases/v1.0.0\",\"assets_url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\"upload_url\":\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\"tarball_url\":\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\"zipball_url\":\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\"id\":1,\"node_id\":\"MDc6UmVsZWFzZTE=\",\"tag_name\":\"v1.0.0\",\"target_commitish\":\"master\",\"name\":\"v1.0.0\",\"body\":\"Description of the release\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-02-27T19:35:32Z\",\"published_at\":\"2013-02-27T19:35:32Z\",\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assets\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a release asset",
    "scope": "repos",
    "id": "getReleaseAsset",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-release-asset",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "asset_id",
        "description": "asset_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      },
      { "code": 302, "description": "Found", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a release by tag name",
    "scope": "repos",
    "id": "getReleaseByTag",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/releases/tags/{tag}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get a published release with the specified tag.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-release-by-tag-name",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tag",
        "description": "tag+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1\",\"html_url\":\"https://github.com/octocat/Hello-World/releases/v1.0.0\",\"assets_url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\"upload_url\":\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\"tarball_url\":\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\"zipball_url\":\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\"id\":1,\"node_id\":\"MDc6UmVsZWFzZTE=\",\"tag_name\":\"v1.0.0\",\"target_commitish\":\"master\",\"name\":\"v1.0.0\",\"body\":\"Description of the release\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-02-27T19:35:32Z\",\"published_at\":\"2013-02-27T19:35:32Z\",\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assets\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get status checks protection",
    "scope": "repos",
    "id": "getStatusChecksProtection",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-status-checks-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"strict\":true,\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get teams with access to the protected branch",
    "scope": "repos",
    "id": "getTeamsWithAccessToProtectedBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. The list includes child teams.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-teams-with-access-to-the-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get top referral paths",
    "scope": "repos",
    "id": "getTopPaths",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/traffic/popular/paths",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get the top 10 popular contents over the last 14 days.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-top-referral-paths",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"path\":\"/github/hubot\",\"title\":\"github/hubot: A customizable life embetterment robot.\",\"count\":3542,\"uniques\":2225},{\"path\":\"/github/hubot/blob/master/docs/scripting.md\",\"title\":\"hubot/scripting.md at master · github/hubot · GitHub\",\"count\":1707,\"uniques\":804},{\"path\":\"/github/hubot/tree/master/docs\",\"title\":\"hubot/docs at master · github/hubot · GitHub\",\"count\":685,\"uniques\":435},{\"path\":\"/github/hubot/tree/master/src\",\"title\":\"hubot/src at master · github/hubot · GitHub\",\"count\":577,\"uniques\":347},{\"path\":\"/github/hubot/blob/master/docs/index.md\",\"title\":\"hubot/index.md at master · github/hubot · GitHub\",\"count\":379,\"uniques\":259},{\"path\":\"/github/hubot/blob/master/docs/adapters.md\",\"title\":\"hubot/adapters.md at master · github/hubot · GitHub\",\"count\":354,\"uniques\":201},{\"path\":\"/github/hubot/tree/master/examples\",\"title\":\"hubot/examples at master · github/hubot · GitHub\",\"count\":340,\"uniques\":260},{\"path\":\"/github/hubot/blob/master/docs/deploying/heroku.md\",\"title\":\"hubot/heroku.md at master · github/hubot · GitHub\",\"count\":324,\"uniques\":217},{\"path\":\"/github/hubot/blob/master/src/robot.coffee\",\"title\":\"hubot/robot.coffee at master · github/hubot · GitHub\",\"count\":293,\"uniques\":191},{\"path\":\"/github/hubot/blob/master/LICENSE.md\",\"title\":\"hubot/LICENSE.md at master · github/hubot · GitHub\",\"count\":281,\"uniques\":222}]"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get top referral sources",
    "scope": "repos",
    "id": "getTopReferrers",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/traffic/popular/referrers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get the top 10 referrers over the last 14 days.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-top-referral-sources",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"referrer\":\"Google\",\"count\":4,\"uniques\":3},{\"referrer\":\"stackoverflow.com\",\"count\":2,\"uniques\":2},{\"referrer\":\"eggsonbread.com\",\"count\":1,\"uniques\":1},{\"referrer\":\"yandex.ru\",\"count\":1,\"uniques\":1}]"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get users with access to the protected branch",
    "scope": "repos",
    "id": "getUsersWithAccessToProtectedBranch",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the people who have push access to this branch.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-users-with-access-to-the-protected-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get page views",
    "scope": "repos",
    "id": "getViews",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/traffic/views",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-page-views",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per",
        "description": "Must be one of: `day`, `week`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["day", "week"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"count\":14850,\"uniques\":3782,\"views\":[{\"timestamp\":\"2016-10-10T00:00:00Z\",\"count\":440,\"uniques\":143},{\"timestamp\":\"2016-10-11T00:00:00Z\",\"count\":1308,\"uniques\":414},{\"timestamp\":\"2016-10-12T00:00:00Z\",\"count\":1486,\"uniques\":452},{\"timestamp\":\"2016-10-13T00:00:00Z\",\"count\":1170,\"uniques\":401},{\"timestamp\":\"2016-10-14T00:00:00Z\",\"count\":868,\"uniques\":266},{\"timestamp\":\"2016-10-15T00:00:00Z\",\"count\":495,\"uniques\":157},{\"timestamp\":\"2016-10-16T00:00:00Z\",\"count\":524,\"uniques\":175},{\"timestamp\":\"2016-10-17T00:00:00Z\",\"count\":1263,\"uniques\":412},{\"timestamp\":\"2016-10-18T00:00:00Z\",\"count\":1402,\"uniques\":417},{\"timestamp\":\"2016-10-19T00:00:00Z\",\"count\":1394,\"uniques\":424},{\"timestamp\":\"2016-10-20T00:00:00Z\",\"count\":1492,\"uniques\":448},{\"timestamp\":\"2016-10-21T00:00:00Z\",\"count\":1153,\"uniques\":332},{\"timestamp\":\"2016-10-22T00:00:00Z\",\"count\":566,\"uniques\":168},{\"timestamp\":\"2016-10-23T00:00:00Z\",\"count\":675,\"uniques\":184},{\"timestamp\":\"2016-10-24T00:00:00Z\",\"count\":614,\"uniques\":237}]}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a repository webhook",
    "scope": "repos",
    "id": "getWebhook",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configuration for a repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#get-a-repository-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a webhook configuration for a repository",
    "scope": "repos",
    "id": "getWebhookConfigForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}/config",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use \"[Get a repository webhook](/rest/reference/orgs#get-a-repository-webhook).\"\n\nAccess tokens must have the `read:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:read` permission.",
    "documentationUrl": "https://docs.github.com/v3/repos#get-a-webhook-configuration-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\",\"url\":\"https://example.com/webhook\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List branches",
    "scope": "repos",
    "id": "listBranches",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/branches",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-branches",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "protected",
        "description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.",
        "in": "QUERY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"name\":\"master\",\"commit\":{\"sha\":\"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"},\"protected\":true}]"
          },
          {
            "data": "[{\"name\":\"master\",\"commit\":{\"sha\":\"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"},\"protected\":true,\"protection\":{\"enabled\":true,\"required_status_checks\":{\"enforcement_level\":\"non_admins\",\"contexts\":[\"ci-test\",\"linter\"]}},\"protection_url\":\"https://api.github.com/repos/octocat/hello-world/branches/master/protection\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List branches for HEAD commit",
    "scope": "repos",
    "id": "listBranchesForHeadCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-branches-for-head-commit",
    "previews": [{ "name": "groot" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"name\":\"branch_5\",\"commit\":{\"sha\":\"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"},\"protected\":false}]"
          }
        ]
      },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repository collaborators",
    "scope": "repos",
    "id": "listCollaborators",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/collaborators",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-repository-collaborators",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "affiliation",
        "description": "Filter collaborators returned by their affiliation. Can be one of:  \n\\* `outside`: All outside collaborators of an organization-owned repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["outside", "direct", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"permissions\":{\"pull\":true,\"push\":true,\"admin\":false}}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List commit comments",
    "scope": "repos",
    "id": "listCommentsForCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Use the `:commit_sha` to specify the commit that will have its comments listed.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-commit-comments",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"author_association\":\"collaborator\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List commit comments for a repository",
    "scope": "repos",
    "id": "listCommitCommentsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/rest/overview/media-types/).\n\nComments are ordered by ascending ID.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-commit-comments-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Great stuff\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\",\"author_association\":\"collaborator\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List commit statuses for a reference",
    "scope": "repos",
    "id": "listCommitStatusesForRef",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{ref}/statuses",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-commit-statuses-for-a-reference",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "ref+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"id\":1,\"node_id\":\"MDY6U3RhdHVzMQ==\",\"state\":\"success\",\"description\":\"Build has completed successfully\",\"target_url\":\"https://ci.example.com/1000/output\",\"context\":\"continuous-integration/jenkins\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]"
          }
        ]
      },
      { "code": 301, "description": "Moved Permanently", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List commits",
    "scope": "repos",
    "id": "listCommits",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-commits",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "SHA or branch to start listing commits from. Default: the repository’s default branch (usually `master`).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "path",
        "description": "Only commits containing this file path will be returned.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "author",
        "description": "GitHub login or email address by which to filter by commit author.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "until",
        "description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"support@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}]}]"
          }
        ]
      },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 409, "description": "Conflict", "examples": null },
      { "code": 500, "description": "Internal Error", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repository contributors",
    "scope": "repos",
    "id": "listContributors",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/contributors",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-repository-contributors",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "anon",
        "description": "Set to `1` or `true` to include anonymous contributors in results.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if repository contains content",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"contributions\":32}]"
          }
        ]
      },
      {
        "code": 204,
        "description": "Response if repository is empty",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List deploy keys",
    "scope": "repos",
    "id": "listDeployKeys",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-deploy-keys",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"key\":\"ssh-rsa AAA...\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/keys/1\",\"title\":\"octocat@octomac\",\"verified\":true,\"created_at\":\"2014-12-10T15:53:42Z\",\"read_only\":true}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List deployment statuses",
    "scope": "repos",
    "id": "listDeploymentStatuses",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with pull access can view deployment statuses for a deployment:",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-deployment-statuses",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\"id\":1,\"node_id\":\"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\"state\":\"success\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"description\":\"Deployment finished successfully.\",\"environment\":\"production\",\"target_url\":\"https://example.com/deployment/42/output\",\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"deployment_url\":\"https://api.github.com/repos/octocat/example/deployments/42\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"environment_url\":\"https://test-branch.lab.acme.com\",\"log_url\":\"https://example.com/deployment/42/output\"}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List deployments",
    "scope": "repos",
    "id": "listDeployments",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/deployments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Simple filtering of deployments is available via query parameters:",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-deployments",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sha",
        "description": "The SHA recorded at creation time.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "ref",
        "description": "The name of the ref. This can be a branch, tag, or SHA.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "task",
        "description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "environment",
        "description": "The name of the environment that was deployed to (e.g., `staging` or `production`).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/example/deployments/1\",\"id\":1,\"node_id\":\"MDEwOkRlcGxveW1lbnQx\",\"sha\":\"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\"ref\":\"topic-branch\",\"task\":\"deploy\",\"payload\":{},\"original_environment\":\"staging\",\"environment\":\"production\",\"description\":\"Deploy request from hubot\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2012-07-20T01:19:13Z\",\"updated_at\":\"2012-07-20T01:19:13Z\",\"statuses_url\":\"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\"repository_url\":\"https://api.github.com/repos/octocat/example\",\"transient_environment\":false,\"production_environment\":true}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories for the authenticated user",
    "scope": "repos",
    "id": "listForAuthenticatedUser",
    "method": "GET",
    "url": "/user/repos",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-repositories-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "visibility",
        "description": "Can be one of `all`, `public`, or `private`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "public", "private"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "affiliation",
        "description": "Comma-separated list of values. Can include:  \n\\* `owner`: Repositories that are owned by the authenticated user.  \n\\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "type",
        "description": "Can be one of `all`, `owner`, `public`, `private`, `member`. Default: `all`  \n  \nWill cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "owner", "public", "private", "member"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "pushed", "full_name"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 418,
        "description": "Response definition missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List organization repositories",
    "scope": "repos",
    "id": "listForOrg",
    "method": "GET",
    "url": "/orgs/{org}/repos",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists repositories for the specified organization.",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-organization-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "type",
        "description": "Specifies the types of repositories you want returned. Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`, `internal`. Default: `all`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `type` can also be `internal`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "all",
          "public",
          "private",
          "forks",
          "sources",
          "member",
          "internal"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "pushed", "full_name"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Can be one of `asc` or `desc`. Default: when using `full_name`: `asc`, otherwise `desc`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repositories for a user",
    "scope": "repos",
    "id": "listForUser",
    "method": "GET",
    "url": "/users/{username}/repos",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists public repositories for the specified user.",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-repositories-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "type",
        "description": "Can be one of `all`, `owner`, `member`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["all", "owner", "member"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated", "pushed", "full_name"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List forks",
    "scope": "repos",
    "id": "listForks",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/forks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-forks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "The sort order. Can be either `newest`, `oldest`, or `stargazers`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["newest", "oldest", "stargazers"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":true,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 400, "description": "Bad Request", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repository invitations",
    "scope": "repos",
    "id": "listInvitations",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/invitations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-repository-invitations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"invitee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"inviter\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"permissions\":\"write\",\"created_at\":\"2016-06-13T14:52:50-05:00\",\"url\":\"https://api.github.com/user/repository_invitations/1296269\",\"html_url\":\"https://github.com/octocat/Hello-World/invitations\",\"node_id\":\"MDQ6VXNlcjE=\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repository invitations for the authenticated user",
    "scope": "repos",
    "id": "listInvitationsForAuthenticatedUser",
    "method": "GET",
    "url": "/user/repository_invitations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-repository-invitations-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"invitee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"inviter\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"permissions\":\"write\",\"created_at\":\"2016-06-13T14:52:50-05:00\",\"url\":\"https://api.github.com/user/repository_invitations/1296269\",\"html_url\":\"https://github.com/octocat/Hello-World/invitations\",\"node_id\":\"MDQ6VXNlcjE=\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repository languages",
    "scope": "repos",
    "id": "listLanguages",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/languages",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-repository-languages",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "{\"C\":78769,\"Python\":7769}" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "List GitHub Pages builds",
    "scope": "repos",
    "id": "listPagesBuilds",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/pages/builds",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-github-pages-builds",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\",\"status\":\"built\",\"error\":{\"message\":null},\"pusher\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"commit\":\"351391cdcb88ffae71ec3028c91f375a8036a26b\",\"duration\":2104,\"created_at\":\"2014-02-10T19:00:49Z\",\"updated_at\":\"2014-02-10T19:00:51Z\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List public repositories",
    "scope": "repos",
    "id": "listPublic",
    "method": "GET",
    "url": "/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all public repositories in the order that they were created.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-public-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "A repository ID. Only return repositories with an ID greater than this ID.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List pull requests associated with a commit",
    "scope": "repos",
    "id": "listPullRequestsAssociatedWithCommit",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/commits/{commit_sha}/pulls",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests) endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-pull-requests-associated-with-a-commit",
    "previews": [{ "name": "groot" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_sha",
        "description": "commit_sha+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\"id\":1,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0MQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://github.com/octocat/Hello-World/pull/1347.patch\",\"issue_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\"review_comments_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\"review_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"number\":1347,\"state\":\"open\",\"locked\":true,\"title\":\"Amazing new feature\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please pull these awesome changes in!\",\"labels\":[{\"id\":208045946,\"node_id\":\"MDU6TGFiZWwyMDgwNDU5NDY=\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\"name\":\"bug\",\"description\":\"Something isn't working\",\"color\":\"f29513\",\"default\":true}],\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"active_lock_reason\":\"too heated\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:01:12Z\",\"closed_at\":\"2011-01-26T19:01:12Z\",\"merged_at\":\"2011-01-26T19:01:12Z\",\"merge_commit_sha\":\"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\"assignee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},{\"login\":\"hubot\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/hubot_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hubot\",\"html_url\":\"https://github.com/hubot\",\"followers_url\":\"https://api.github.com/users/hubot/followers\",\"following_url\":\"https://api.github.com/users/hubot/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hubot/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hubot/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hubot/orgs\",\"repos_url\":\"https://api.github.com/users/hubot/repos\",\"events_url\":\"https://api.github.com/users/hubot/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hubot/received_events\",\"type\":\"User\",\"site_admin\":true}],\"requested_reviewers\":[{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false}],\"requested_teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"}],\"head\":{\"label\":\"octocat:new-topic\",\"ref\":\"new-topic\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}},\"base\":{\"label\":\"octocat:master\",\"ref\":\"master\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"repo\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"html\":{\"href\":\"https://github.com/octocat/Hello-World/pull/1347\"},\"issue\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347\"},\"comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"}},\"author_association\":\"OWNER\",\"draft\":false}]"
          }
        ]
      },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List release assets",
    "scope": "repos",
    "id": "listReleaseAssets",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/releases/{release_id}/assets",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-release-assets",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List releases",
    "scope": "repos",
    "id": "listReleases",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/releases",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-releases",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1\",\"html_url\":\"https://github.com/octocat/Hello-World/releases/v1.0.0\",\"assets_url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\"upload_url\":\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\"tarball_url\":\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\"zipball_url\":\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\"id\":1,\"node_id\":\"MDc6UmVsZWFzZTE=\",\"tag_name\":\"v1.0.0\",\"target_commitish\":\"master\",\"name\":\"v1.0.0\",\"body\":\"Description of the release\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-02-27T19:35:32Z\",\"published_at\":\"2013-02-27T19:35:32Z\",\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assets\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List repository tags",
    "scope": "repos",
    "id": "listTags",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/tags",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-repository-tags",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"name\":\"v0.1\",\"commit\":{\"sha\":\"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"},\"zipball_url\":\"https://github.com/octocat/Hello-World/zipball/v0.1\",\"tarball_url\":\"https://github.com/octocat/Hello-World/tarball/v0.1\",\"node_id\":\"MDQ6VXNlcjE=\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repository teams",
    "scope": "repos",
    "id": "listTeams",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/repos/#list-repository-teams",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List repository webhooks",
    "scope": "repos",
    "id": "listWebhooks",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/hooks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#list-repository-webhooks",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Merge a branch",
    "scope": "repos",
    "id": "merge",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/merges",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#merge-a-branch",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "base",
        "description": "The name of the base branch that the head will be merged into.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "head",
        "description": "The head to merge. This can be a branch name or a commit SHA1.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "commit_message",
        "description": "Commit message to use for the merge commit. If omitted, a default message will be used.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "Successful Response (The resulting merge commit)",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"node_id\":\"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"committer\":{\"name\":\"Monalisa Octocat\",\"email\":\"mona@github.com\",\"date\":\"2011-04-14T16:00:49Z\"},\"message\":\"Fix all the bugs\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"},\"comment_count\":0,\"verification\":{\"verified\":false,\"reason\":\"unsigned\",\"signature\":null,\"payload\":null}},\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"sha\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\"}],\"stats\":{\"additions\":104,\"deletions\":4,\"total\":108},\"files\":[{\"filename\":\"file1.txt\",\"additions\":10,\"deletions\":2,\"changes\":12,\"status\":\"modified\",\"raw_url\":\"https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\"blob_url\":\"https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\"patch\":\"@@ -29,7 +29,7 @@\\n.....\"}]}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "response",
        "examples": [
          { "data": "{\"message\":\"Base does not exist\"}" },
          { "data": "{\"message\":\"Head does not exist\"}" }
        ]
      },
      {
        "code": 409,
        "description": "Merge conflict response",
        "examples": [{ "data": "{\"message\":\"Merge Conflict\"}" }]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Ping a repository webhook",
    "scope": "repos",
    "id": "pingWebhook",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}/pings",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#ping-a-repository-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove app access restrictions",
    "scope": "repos",
    "id": "removeAppAccessRestrictions",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#remove-app-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "apps",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove a repository collaborator",
    "scope": "repos",
    "id": "removeCollaborator",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/collaborators/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#remove-a-repository-collaborator",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove status check contexts",
    "scope": "repos",
    "id": "removeStatusCheckContexts",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#remove-status-check-contexts",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "[\"continuous-integration/travis-ci\"]" }]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove status check protection",
    "scope": "repos",
    "id": "removeStatusCheckProtection",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#remove-status-check-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "No Content", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove team access restrictions",
    "scope": "repos",
    "id": "removeTeamAccessRestrictions",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. You can also remove push access for child teams.\n\n| Type    | Description                                                                                                                                         |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#remove-team-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "teams",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove user access restrictions",
    "scope": "repos",
    "id": "removeUserAccessRestrictions",
    "method": "DELETE",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a user to push to this branch.\n\n| Type    | Description                                                                                                                                   |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#remove-user-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "users",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Replace all repository topics",
    "scope": "repos",
    "id": "replaceAllTopics",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/topics",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/v3/repos/#replace-all-repository-topics",
    "previews": [{ "name": "mercy" }],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "names",
        "description": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          { "data": "{\"names\":[\"octocat\",\"atom\",\"electron\",\"api\"]}" }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Request a GitHub Pages build",
    "scope": "repos",
    "id": "requestPagesBuild",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/pages/builds",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#request-a-github-pages-build",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/github/developer.github.com/pages/builds/latest\",\"status\":\"queued\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Set admin branch protection",
    "scope": "repos",
    "id": "setAdminBranchProtection",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#set-admin-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\"enabled\":true}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Set app access restrictions",
    "scope": "repos",
    "id": "setAppAccessRestrictions",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#set-app-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "apps",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"slug\":\"octoapp\",\"node_id\":\"MDExOkludGVncmF0aW9uMQ==\",\"owner\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":true},\"name\":\"Octocat App\",\"description\":\"\",\"external_url\":\"https://example.com\",\"html_url\":\"https://github.com/apps/octoapp\",\"created_at\":\"2017-07-08T16:18:44-04:00\",\"updated_at\":\"2017-07-08T16:18:44-04:00\",\"permissions\":{\"metadata\":\"read\",\"contents\":\"read\",\"issues\":\"write\",\"single_file\":\"write\"},\"events\":[\"push\",\"pull_request\"]}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set status check contexts",
    "scope": "repos",
    "id": "setStatusCheckContexts",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#set-status-check-contexts",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "[\"continuous-integration/travis-ci\"]" }]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set team access restrictions",
    "scope": "repos",
    "id": "setTeamAccessRestrictions",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#set-team-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "teams",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set user access restrictions",
    "scope": "repos",
    "id": "setUserAccessRestrictions",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#set-user-access-restrictions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "users",
        "description": "",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Test the push repository webhook",
    "scope": "repos",
    "id": "testPushWebhook",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}/tests",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#test-the-push-repository-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Transfer a repository",
    "scope": "repos",
    "id": "transfer",
    "method": "POST",
    "url": "/repos/{owner}/{repo}/transfer",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).",
    "documentationUrl": "https://docs.github.com/v3/repos/#transfer-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "new_owner",
        "description": "**Required:** The username or organization name the repository will be transferred to.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_ids",
        "description": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.",
        "in": "BODY",
        "type": "integer[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 202,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks\":9,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"watchers\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues\":0,\"open_issues_count\":0,\"is_template\":true,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a repository",
    "scope": "repos",
    "id": "update",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/rest/reference/repos#replace-all-repository-topics) endpoint.",
    "documentationUrl": "https://docs.github.com/v3/repos/#update-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "A short description of the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "homepage",
        "description": "A URL with more information about the repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Either `true` to make the repository private or `false` to make it public. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "visibility",
        "description": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. The `visibility` parameter overrides the `private` parameter when you use both along with the `nebula-preview` preview header.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["public", "private", "visibility", "internal"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_issues",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_projects",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "has_wiki",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "is_template",
        "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "default_branch",
        "description": "Updates the default branch for this repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_squash_merge",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_merge_commit",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_rebase_merge",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "delete_branch_on_merge",
        "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "archived",
        "description": "`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://github.com/licenses/mit\"},\"language\":null,\"forks_count\":9,\"forks\":9,\"stargazers_count\":80,\"watchers_count\":80,\"watchers\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"open_issues\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"pull\":true,\"push\":false,\"admin\":false},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"organization\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"parent\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1},\"source\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update branch protection",
    "scope": "repos",
    "id": "updateBranchProtection",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users, apps, and teams in total is limited to 100 items.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-branch-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_status_checks",
        "description": "Require status checks to pass before merging. Set to `null` to disable.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_status_checks.strict",
        "description": "Require branches to be up to date before merging.",
        "in": "BODY",
        "type": "boolean",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_status_checks.contexts",
        "description": "The list of status checks to require in order to merge into this branch",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "enforce_admins",
        "description": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.",
        "in": "BODY",
        "type": "boolean",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews",
        "description": "Require at least one approving review on a pull request, before merging. Set to `null` to disable.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions",
        "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions.users",
        "description": "The list of user `login`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions.teams",
        "description": "The list of team `slug`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.dismiss_stale_reviews",
        "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.require_code_owner_reviews",
        "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_pull_request_reviews.required_approving_review_count",
        "description": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "restrictions",
        "description": "Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.",
        "in": "BODY",
        "type": "object",
        "required": true,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "restrictions.users",
        "description": "The list of user `login`s with push access",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "restrictions.teams",
        "description": "The list of team `slug`s with push access",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "restrictions.apps",
        "description": "The list of app `slug`s with push access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_linear_history",
        "description": "Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see \"[Requiring a linear commit history](https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history)\" in the GitHub Help documentation.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_force_pushes",
        "description": "Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.\"",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "allow_deletions",
        "description": "Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 200, "description": "response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a commit comment",
    "scope": "repos",
    "id": "updateCommitComment",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/comments/{comment_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-a-commit-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The contents of the comment",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"html_url\":\"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/comments/1\",\"id\":1,\"node_id\":\"MDEzOkNvbW1pdENvbW1lbnQx\",\"body\":\"Nice change\",\"path\":\"file1.txt\",\"position\":4,\"line\":14,\"commit_id\":\"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\"author_association\":\"collaborator\",\"user\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-14T16:00:49Z\",\"updated_at\":\"2011-04-14T16:00:49Z\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update information about a GitHub Pages site",
    "scope": "repos",
    "id": "updateInformationAboutPagesSite",
    "method": "PUT",
    "url": "/repos/{owner}/{repo}/pages",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates information for a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-information-about-a-github-pages-site",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "cname",
        "description": "Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://help.github.com/articles/using-a-custom-domain-with-github-pages/).\"",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "source",
        "description": "",
        "in": "BODY",
        "type": null,
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 400, "description": "Bad Request", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a repository invitation",
    "scope": "repos",
    "id": "updateInvitation",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/invitations/{invitation_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-a-repository-invitation",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permissions",
        "description": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "maintain", "triage", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"repository\":{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"hooks_url\":\"http://api.github.com/repos/octocat/Hello-World/hooks\"},\"invitee\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"inviter\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"permissions\":\"write\",\"created_at\":\"2016-06-13T14:52:50-05:00\",\"url\":\"https://api.github.com/user/repository_invitations/1296269\",\"html_url\":\"https://github.com/octocat/Hello-World/invitations\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update pull request review protection",
    "scope": "repos",
    "id": "updatePullRequestReviewProtection",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-pull-request-review-protection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismissal_restrictions",
        "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismissal_restrictions.users",
        "description": "The list of user `login`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismissal_restrictions.teams",
        "description": "The list of team `slug`s with dismissal access",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "dismiss_stale_reviews",
        "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "require_code_owner_reviews",
        "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) have reviewed.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "required_approving_review_count",
        "description": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\"dismissal_restrictions\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\"users_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\"users\":[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}],\"teams\":[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]},\"dismiss_stale_reviews\":true,\"require_code_owner_reviews\":true,\"required_approving_review_count\":2}"
          }
        ]
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a release",
    "scope": "repos",
    "id": "updateRelease",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/releases/{release_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with push access to the repository can edit a release.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-a-release",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "tag_name",
        "description": "The name of the tag.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "target_commitish",
        "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the release.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "Text describing the contents of the tag.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "draft",
        "description": "`true` makes the release a draft, and `false` publishes the release.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "prerelease",
        "description": "`true` to identify the release as a prerelease, `false` to identify the release as a full release.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1\",\"html_url\":\"https://github.com/octocat/Hello-World/releases/v1.0.0\",\"assets_url\":\"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\"upload_url\":\"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\"tarball_url\":\"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\"zipball_url\":\"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\"id\":1,\"node_id\":\"MDc6UmVsZWFzZTE=\",\"tag_name\":\"v1.0.0\",\"target_commitish\":\"master\",\"name\":\"v1.0.0\",\"body\":\"Description of the release\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-02-27T19:35:32Z\",\"published_at\":\"2013-02-27T19:35:32Z\",\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"assets\":[{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a release asset",
    "scope": "repos",
    "id": "updateReleaseAsset",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Users with push access to the repository can edit a release asset.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-a-release-asset",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "asset_id",
        "description": "asset_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The file name of the asset.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "label",
        "description": "An alternate short description of the asset. Used in place of the filename.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update status check protection",
    "scope": "repos",
    "id": "updateStatusCheckPotection",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-status-check-potection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "strict",
        "description": "Require branches to be up to date before merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "The list of status checks to require in order to merge into this branch",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"strict\":true,\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": {
      "before": { "scope": "repos", "id": "updateStatusCheckPotection" },
      "after": { "scope": "repos", "id": "updateStatusCheckProtection" },
      "date": "2020-09-17",
      "note": null
    }
  },
  {
    "name": "Update status check protection",
    "scope": "repos",
    "id": "updateStatusCheckProtection",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-status-check-potection",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "branch",
        "description": "branch+ parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "strict",
        "description": "Require branches to be up to date before merging.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "contexts",
        "description": "The list of status checks to require in order to merge into this branch",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\"strict\":true,\"contexts\":[\"continuous-integration/travis-ci\"],\"contexts_url\":\"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a repository webhook",
    "scope": "repos",
    "id": "updateWebhook",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for a repository](/rest/reference/repos#update-a-webhook-configuration-for-a-repository).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#update-a-repository-webhook",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/repos#create-hook-config-params).",
        "in": "BODY",
        "type": "object",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.address",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "config.room",
        "description": "",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "events",
        "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "add_events",
        "description": "Determines a list of events to be added to the list of events that the Hook triggers for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "remove_events",
        "description": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "active",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"type\":\"Repository\",\"id\":12345678,\"name\":\"web\",\"active\":true,\"events\":[\"push\",\"pull_request\"],\"config\":{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"url\":\"https://example.com/webhook\"},\"updated_at\":\"2019-06-03T00:57:16Z\",\"created_at\":\"2019-06-03T00:57:16Z\",\"url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\"test_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\"ping_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\"last_response\":{\"code\":null,\"status\":\"unused\",\"message\":null}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a webhook configuration for a repository",
    "scope": "repos",
    "id": "updateWebhookConfigForRepo",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/hooks/{hook_id}/config",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates the webhook configuration for a repository. To update more information about the webhook, including the `active` state and `events`, use \"[Update a repository webhook](/rest/reference/orgs#update-a-repository-webhook).\"\n\nAccess tokens must have the `write:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:write` permission.",
    "documentationUrl": "https://docs.github.com/v3/repos#update-a-webhook-configuration-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hook_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "url",
        "description": "The URL to which the payloads will be delivered.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "content_type",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "secret",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "insecure_ssl",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"content_type\":\"json\",\"insecure_ssl\":\"0\",\"secret\":\"********\",\"url\":\"https://example.com/webhook\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Upload a release asset",
    "scope": "repos",
    "id": "uploadReleaseAsset",
    "method": "POST",
    "url": "{origin}/repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint makes use of [a Hypermedia relation](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in\nthe response of the [Create a release endpoint](https://docs.github.com/rest/reference/repos#create-a-release) to upload a release asset.\n\nYou need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nMost libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: \n\n`application/zip`\n\nGitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\nyou'll still need to pass your authentication to be able to upload an asset.\n\nWhen an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.\n\n**Notes:**\n*   GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"[List assets for a release](https://docs.github.com/rest/reference/repos#list-assets-for-a-release)\"\nendpoint lists the renamed filenames. For more information and help, contact [GitHub Support](https://github.com/contact).\n*   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.",
    "documentationUrl": "https://docs.github.com/rest/reference/repos#upload-a-release-asset",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "label",
        "description": "",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "data",
        "description": "The raw file data",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": true,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "origin",
        "description": "The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the \"Create a release\" endpoint",
        "in": "PATH",
        "type": "string",
        "required": null,
        "enum": null,
        "allowNull": null,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "Response for successful upload",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\"browser_download_url\":\"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\"id\":1,\"node_id\":\"MDEyOlJlbGVhc2VBc3NldDE=\",\"name\":\"example.zip\",\"label\":\"short description\",\"state\":\"uploaded\",\"content_type\":\"application/zip\",\"size\":1024,\"download_count\":42,\"created_at\":\"2013-02-27T19:35:32Z\",\"updated_at\":\"2013-02-27T19:35:32Z\",\"uploader\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Search code",
    "scope": "search",
    "id": "code",
    "method": "GET",
    "url": "/search/code",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.",
    "documentationUrl": "https://docs.github.com/v3/search/#search-code",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query). See \"[Searching code](https://help.github.com/articles/searching-code/)\" for a detailed list of qualifiers.",
        "in": "QUERY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["indexed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["desc", "asc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":7,\"incomplete_results\":false,\"items\":[{\"name\":\"classes.js\",\"path\":\"src/attributes/classes.js\",\"sha\":\"d7212f9dee2dcc18f084d7df8f417b80846ded5a\",\"url\":\"https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4\",\"git_url\":\"https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a\",\"html_url\":\"https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js\",\"repository\":{\"id\":167174,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxNjcxNzQ=\",\"name\":\"jquery\",\"full_name\":\"jquery/jquery\",\"owner\":{\"login\":\"jquery\",\"id\":70142,\"node_id\":\"MDQ6VXNlcjcwMTQy\",\"avatar_url\":\"https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jquery\",\"html_url\":\"https://github.com/jquery\",\"followers_url\":\"https://api.github.com/users/jquery/followers\",\"following_url\":\"https://api.github.com/users/jquery/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jquery/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jquery/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jquery/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jquery/orgs\",\"repos_url\":\"https://api.github.com/users/jquery/repos\",\"events_url\":\"https://api.github.com/users/jquery/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jquery/received_events\",\"type\":\"Organization\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/jquery/jquery\",\"description\":\"jQuery JavaScript Library\",\"fork\":false,\"url\":\"https://api.github.com/repos/jquery/jquery\",\"forks_url\":\"https://api.github.com/repos/jquery/jquery/forks\",\"keys_url\":\"https://api.github.com/repos/jquery/jquery/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/jquery/jquery/teams\",\"hooks_url\":\"https://api.github.com/repos/jquery/jquery/hooks\",\"issue_events_url\":\"https://api.github.com/repos/jquery/jquery/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/jquery/jquery/events\",\"assignees_url\":\"https://api.github.com/repos/jquery/jquery/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/jquery/jquery/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/jquery/jquery/tags\",\"blobs_url\":\"https://api.github.com/repos/jquery/jquery/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/jquery/jquery/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/jquery/jquery/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/jquery/jquery/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/jquery/jquery/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/jquery/jquery/languages\",\"stargazers_url\":\"https://api.github.com/repos/jquery/jquery/stargazers\",\"contributors_url\":\"https://api.github.com/repos/jquery/jquery/contributors\",\"subscribers_url\":\"https://api.github.com/repos/jquery/jquery/subscribers\",\"subscription_url\":\"https://api.github.com/repos/jquery/jquery/subscription\",\"commits_url\":\"https://api.github.com/repos/jquery/jquery/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/jquery/jquery/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/jquery/jquery/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/jquery/jquery/issues/comments/{number}\",\"contents_url\":\"https://api.github.com/repos/jquery/jquery/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/jquery/jquery/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/jquery/jquery/merges\",\"archive_url\":\"https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/jquery/jquery/downloads\",\"issues_url\":\"https://api.github.com/repos/jquery/jquery/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/jquery/jquery/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/jquery/jquery/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/jquery/jquery/labels{/name}\",\"deployments_url\":\"http://api.github.com/repos/octocat/Hello-World/deployments\",\"releases_url\":\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"},\"score\":1}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Search commits",
    "scope": "search",
    "id": "commits",
    "method": "GET",
    "url": "/search/commits",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`",
    "documentationUrl": "https://docs.github.com/v3/search/#search-commits",
    "previews": [{ "name": "cloak" }],
    "headers": [],
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query). See \"[Searching commits](https://help.github.com/articles/searching-commits/)\" for a detailed list of qualifiers.",
        "in": "QUERY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["author-date", "committer-date"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["desc", "asc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":1,\"incomplete_results\":false,\"items\":[{\"url\":\"https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\"sha\":\"bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\"html_url\":\"https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\"comments_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments\",\"commit\":{\"url\":\"https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\"author\":{\"date\":\"2014-02-04T14:38:36-08:00\",\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"},\"committer\":{\"date\":\"2014-02-12T15:18:55-08:00\",\"name\":\"The Octocat\",\"email\":\"octocat@nowhere.com\"},\"message\":\"Create styles.css and updated README\",\"tree\":{\"url\":\"https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68\",\"sha\":\"a639e96f9038797fba6e0469f94a4b0cc459fa68\"},\"comment_count\":8},\"author\":{\"login\":\"octocat\",\"id\":583231,\"node_id\":\"MDQ6VXNlcjU4MzIzMQ==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/583231?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{},\"parents\":[{\"url\":\"https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4\",\"html_url\":\"https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4\",\"sha\":\"a30c19e3f13765a3b48829788bc1cb8b4e95cee4\"}],\"repository\":{\"id\":1300192,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMzAwMTky\",\"name\":\"Spoon-Knife\",\"full_name\":\"octocat/Spoon-Knife\",\"owner\":{\"login\":\"octocat\",\"id\":583231,\"node_id\":\"MDQ6VXNlcjU4MzIzMQ==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/583231?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Spoon-Knife\",\"description\":\"This repo is for demonstration purposes only.\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Spoon-Knife\",\"forks_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/forks\",\"keys_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/teams\",\"hooks_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/hooks\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/events\",\"assignees_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/tags\",\"blobs_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/languages\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/stargazers\",\"contributors_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/contributors\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/subscription\",\"commits_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/merges\",\"archive_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/downloads\",\"issues_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/octocat/Spoon-Knife/deployments\"},\"score\":1,\"node_id\":\"MDQ6VXNlcjU4MzIzMQ==\"}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Search issues and pull requests",
    "scope": "search",
    "id": "issuesAndPullRequests",
    "method": "GET",
    "url": "/search/issues",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\"",
    "documentationUrl": "https://docs.github.com/v3/search/#search-issues-and-pull-requests",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query). See \"[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)\" for a detailed list of qualifiers.",
        "in": "QUERY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`, Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": [
          "comments",
          "reactions",
          "reactions-+1",
          "reactions--1",
          "reactions-smile",
          "reactions-thinking_face",
          "reactions-heart",
          "reactions-tada",
          "interactions",
          "created",
          "updated"
        ],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["desc", "asc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":280,\"incomplete_results\":false,\"items\":[{\"url\":\"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132\",\"repository_url\":\"https://api.github.com/repos/batterseapower/pinyin-toolkit\",\"labels_url\":\"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments\",\"events_url\":\"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events\",\"html_url\":\"https://github.com/batterseapower/pinyin-toolkit/issues/132\",\"id\":35802,\"node_id\":\"MDU6SXNzdWUzNTgwMg==\",\"number\":132,\"title\":\"Line Number Indexes Beyond 20 Not Displayed\",\"user\":{\"login\":\"Nick3C\",\"id\":90254,\"node_id\":\"MDQ6VXNlcjkwMjU0\",\"avatar_url\":\"https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Nick3C\",\"html_url\":\"https://github.com/Nick3C\",\"followers_url\":\"https://api.github.com/users/Nick3C/followers\",\"following_url\":\"https://api.github.com/users/Nick3C/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Nick3C/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Nick3C/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Nick3C/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Nick3C/orgs\",\"repos_url\":\"https://api.github.com/users/Nick3C/repos\",\"events_url\":\"https://api.github.com/users/Nick3C/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Nick3C/received_events\",\"type\":\"User\",\"site_admin\":true},\"labels\":[{\"id\":4,\"node_id\":\"MDU6TGFiZWw0\",\"url\":\"https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug\",\"name\":\"bug\",\"color\":\"ff0000\"}],\"state\":\"open\",\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\"html_url\":\"https://github.com/octocat/Hello-World/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\"id\":1002604,\"node_id\":\"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\"number\":1,\"state\":\"open\",\"title\":\"v1.0\",\"description\":\"Tracking milestone for version 1.0\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":4,\"closed_issues\":8,\"created_at\":\"2011-04-10T20:09:31Z\",\"updated_at\":\"2014-03-03T18:58:10Z\",\"closed_at\":\"2013-02-12T13:22:01Z\",\"due_on\":\"2012-10-09T23:39:01Z\"},\"comments\":15,\"created_at\":\"2009-07-12T20:10:41Z\",\"updated_at\":\"2009-07-19T09:23:43Z\",\"closed_at\":null,\"pull_request\":{\"url\":\"https://api/github.com/repos/octocat/Hello-World/pull/1347\",\"html_url\":\"https://github.com/octocat/Hello-World/pull/1347\",\"diff_url\":\"https://github.com/octocat/Hello-World/pull/1347.diff\",\"patch_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"},\"body\":\"...\",\"score\":1,\"locked\":true,\"author_association\":\"collaborator\"}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Search labels",
    "scope": "search",
    "id": "labels",
    "method": "GET",
    "url": "/search/labels",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results.",
    "documentationUrl": "https://docs.github.com/v3/search/#search-labels",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "repository_id",
        "description": "The id of the repository.",
        "in": "QUERY",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "q",
        "description": "The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).",
        "in": "QUERY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by when the label was `created` or `updated`. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["created", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["desc", "asc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":2,\"incomplete_results\":false,\"items\":[{\"id\":418327088,\"node_id\":\"MDU6TGFiZWw0MTgzMjcwODg=\",\"url\":\"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\"name\":\"enhancement\",\"color\":\"84b6eb\",\"default\":true,\"description\":\"New feature or request.\",\"score\":1},{\"id\":418327086,\"node_id\":\"MDU6TGFiZWw0MTgzMjcwODY=\",\"url\":\"https://api.github.com/repos/octocat/linguist/labels/bug\",\"name\":\"bug\",\"color\":\"ee0701\",\"default\":true,\"description\":\"Something isn't working.\",\"score\":1}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Search repositories",
    "scope": "search",
    "id": "repos",
    "method": "GET",
    "url": "/search/repositories",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`",
    "documentationUrl": "https://docs.github.com/v3/search/#search-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query). See \"[Searching for repositories](https://help.github.com/articles/searching-for-repositories/)\" for a detailed list of qualifiers.",
        "in": "QUERY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["stars", "forks", "help-wanted-issues", "updated"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["desc", "asc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":40,\"incomplete_results\":false,\"items\":[{\"id\":3081286,\"node_id\":\"MDEwOlJlcG9zaXRvcnkzMDgxMjg2\",\"name\":\"Tetris\",\"full_name\":\"dtrupenn/Tetris\",\"owner\":{\"login\":\"dtrupenn\",\"id\":872147,\"node_id\":\"MDQ6VXNlcjg3MjE0Nw==\",\"avatar_url\":\"https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/dtrupenn\",\"received_events_url\":\"https://api.github.com/users/dtrupenn/received_events\",\"type\":\"User\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"site_admin\":true},\"private\":false,\"html_url\":\"https://github.com/dtrupenn/Tetris\",\"description\":\"A C implementation of Tetris using Pennsim through LC4\",\"fork\":false,\"url\":\"https://api.github.com/repos/dtrupenn/Tetris\",\"created_at\":\"2012-01-01T00:31:50Z\",\"updated_at\":\"2013-01-05T17:58:47Z\",\"pushed_at\":\"2012-01-01T00:37:02Z\",\"homepage\":\"https://github.com\",\"size\":524,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"Assembly\",\"forks_count\":0,\"open_issues_count\":0,\"master_branch\":\"master\",\"default_branch\":\"master\",\"score\":1,\"archive_url\":\"https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/dtrupenn/Tetris/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/dtrupenn/Tetris/contributors\",\"deployments_url\":\"https://api.github.com/repos/dtrupenn/Tetris/deployments\",\"downloads_url\":\"https://api.github.com/repos/dtrupenn/Tetris/downloads\",\"events_url\":\"https://api.github.com/repos/dtrupenn/Tetris/events\",\"forks_url\":\"https://api.github.com/repos/dtrupenn/Tetris/forks\",\"git_commits_url\":\"https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}\",\"git_url\":\"git:github.com/dtrupenn/Tetris.git\",\"issue_comment_url\":\"https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/dtrupenn/Tetris/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/dtrupenn/Tetris/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/dtrupenn/Tetris/languages\",\"merges_url\":\"https://api.github.com/repos/dtrupenn/Tetris/merges\",\"milestones_url\":\"https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/dtrupenn/Tetris/releases{/id}\",\"ssh_url\":\"git@github.com:dtrupenn/Tetris.git\",\"stargazers_url\":\"https://api.github.com/repos/dtrupenn/Tetris/stargazers\",\"statuses_url\":\"https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/dtrupenn/Tetris/subscribers\",\"subscription_url\":\"https://api.github.com/repos/dtrupenn/Tetris/subscription\",\"tags_url\":\"https://api.github.com/repos/dtrupenn/Tetris/tags\",\"teams_url\":\"https://api.github.com/repos/dtrupenn/Tetris/teams\",\"trees_url\":\"https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}\",\"clone_url\":\"https://github.com/dtrupenn/Tetris.git\",\"mirror_url\":\"git:git.example.com/dtrupenn/Tetris\",\"hooks_url\":\"https://api.github.com/repos/dtrupenn/Tetris/hooks\",\"svn_url\":\"https://svn.github.com/dtrupenn/Tetris\",\"forks\":1,\"open_issues\":1,\"watchers\":1,\"has_issues\":true,\"has_projects\":true,\"has_pages\":true,\"has_wiki\":true,\"has_downloads\":true,\"archived\":true,\"disabled\":true,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"}}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Search topics",
    "scope": "search",
    "id": "topics",
    "method": "GET",
    "url": "/search/topics",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.",
    "documentationUrl": "https://docs.github.com/v3/search/#search-topics",
    "previews": [{ "name": "mercy" }],
    "headers": [],
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query).",
        "in": "QUERY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":6,\"incomplete_results\":false,\"items\":[{\"name\":\"ruby\",\"display_name\":\"Ruby\",\"short_description\":\"Ruby is a scripting language designed for simplified object-oriented programming.\",\"description\":\"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\"created_by\":\"Yukihiro Matsumoto\",\"released\":\"December 21, 1995\",\"created_at\":\"2016-11-28T22:03:59Z\",\"updated_at\":\"2017-10-30T18:16:32Z\",\"featured\":true,\"curated\":true,\"score\":1},{\"name\":\"rails\",\"display_name\":\"Rails\",\"short_description\":\"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\"description\":\"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\"created_by\":\"David Heinemeier Hansson\",\"released\":\"December 13 2005\",\"created_at\":\"2016-12-09T17:03:50Z\",\"updated_at\":\"2017-10-30T16:20:19Z\",\"featured\":true,\"curated\":true,\"score\":1},{\"name\":\"python\",\"display_name\":\"Python\",\"short_description\":\"Python is a dynamically typed programming language.\",\"description\":\"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\"created_by\":\"Guido van Rossum\",\"released\":\"February 20, 1991\",\"created_at\":\"2016-12-07T00:07:02Z\",\"updated_at\":\"2017-10-27T22:45:43Z\",\"featured\":true,\"curated\":true,\"score\":1},{\"name\":\"jekyll\",\"display_name\":\"Jekyll\",\"short_description\":\"Jekyll is a simple, blog-aware static site generator.\",\"description\":\"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\"created_by\":\"Tom Preston-Werner\",\"released\":\"2008\",\"created_at\":\"2016-12-16T21:53:08Z\",\"updated_at\":\"2017-10-27T19:00:24Z\",\"featured\":true,\"curated\":true,\"score\":1},{\"name\":\"sass\",\"display_name\":\"Sass\",\"short_description\":\"Sass is a stable extension to classic CSS.\",\"description\":\"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\"created_by\":\"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\"released\":\"November 28, 2006\",\"created_at\":\"2016-12-16T21:53:45Z\",\"updated_at\":\"2018-01-16T16:30:40Z\",\"featured\":true,\"curated\":true,\"score\":1},{\"name\":\"homebrew\",\"display_name\":\"Homebrew\",\"short_description\":\"Homebrew is a package manager for macOS.\",\"description\":\"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\"created_by\":\"Max Howell\",\"released\":\"2009\",\"created_at\":\"2016-12-17T20:30:44Z\",\"updated_at\":\"2018-02-06T16:14:56Z\",\"featured\":true,\"curated\":true,\"score\":1}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Search users",
    "scope": "search",
    "id": "users",
    "method": "GET",
    "url": "/search/users",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.",
    "documentationUrl": "https://docs.github.com/v3/search/#search-users",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "q",
        "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/reference/search#constructing-a-search-query). See \"[Searching users](https://help.github.com/articles/searching-users/)\" for a detailed list of qualifiers.",
        "in": "QUERY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "sort",
        "description": "Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub. Default: [best match](https://docs.github.com/rest/reference/search#ranking-search-results)",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["followers", "repositories", "joined"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["desc", "asc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"total_count\":12,\"incomplete_results\":false,\"items\":[{\"login\":\"mojombo\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/mojombo\",\"html_url\":\"https://github.com/mojombo\",\"followers_url\":\"https://api.github.com/users/mojombo/followers\",\"subscriptions_url\":\"https://api.github.com/users/mojombo/subscriptions\",\"organizations_url\":\"https://api.github.com/users/mojombo/orgs\",\"repos_url\":\"https://api.github.com/users/mojombo/repos\",\"received_events_url\":\"https://api.github.com/users/mojombo/received_events\",\"type\":\"User\",\"score\":1,\"following_url\":\"https://api.github.com/users/mojombo/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/mojombo/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/mojombo/starred{/owner}{/repo}\",\"events_url\":\"https://api.github.com/users/mojombo/events{/privacy}\",\"site_admin\":true}]}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a secret scanning alert",
    "scope": "secretScanning",
    "id": "getAlert",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/secret-scanning#get-a-secret-scanning-alert",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "alert_number",
        "description": "The security alert number, found at the end of the security alert's URL.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"number\":42,\"created_at\":\"2020-11-06T18:18:30Z\",\"url\":\"https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42\",\"html_url\":\"https://github.com/owner/private-repo/security/secret-scanning/42\",\"state\":\"open\",\"resolution\":null,\"resolved_at\":null,\"resolved_by\":null,\"secret_type\":\"mailchimp_api_key\",\"secret\":\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2\"}"
          }
        ]
      },
      {
        "code": 404,
        "description": "Repository is public, or secret scanning is disabled for the repository, or the resource is not found",
        "examples": null
      },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List secret scanning alerts for a repository",
    "scope": "secretScanning",
    "id": "listAlertsForRepo",
    "method": "GET",
    "url": "/repos/{owner}/{repo}/secret-scanning/alerts",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/secret-scanning#list-secret-scanning-alerts-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["open", "resolved"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response",
        "examples": [
          {
            "data": "[{\"number\":2,\"created_at\":\"2020-11-06T18:48:51Z\",\"url\":\"https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2\",\"html_url\":\"https://github.com/owner/private-repo/security/secret-scanning/2\",\"state\":\"resolved\",\"resolution\":\"false_positive\",\"resolved_at\":\"2020-11-07T02:47:13Z\",\"resolved_by\":{\"login\":\"monalisa\",\"id\":2,\"node_id\":\"MDQ6VXNlcjI=\",\"avatar_url\":\"https://alambic.github.com/avatars/u/2?\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/monalisa\",\"html_url\":\"https://github.com/monalisa\",\"followers_url\":\"https://api.github.com/users/monalisa/followers\",\"following_url\":\"https://api.github.com/users/monalisa/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/monalisa/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/monalisa/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/monalisa/subscriptions\",\"organizations_url\":\"https://api.github.com/users/monalisa/orgs\",\"repos_url\":\"https://api.github.com/users/monalisa/repos\",\"events_url\":\"https://api.github.com/users/monalisa/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/monalisa/received_events\",\"type\":\"User\",\"site_admin\":true},\"secret_type\":\"adafruit_io_key\",\"secret\":\"aio_XXXXXXXXXXXXXXXXXXXXXXXXXXXX\"},{\"number\":1,\"created_at\":\"2020-11-06T18:18:30Z\",\"url\":\"https://api.github.com/repos/owner/repo/secret-scanning/alerts/1\",\"html_url\":\"https://github.com/owner/repo/security/secret-scanning/1\",\"state\":\"open\",\"resolution\":null,\"resolved_at\":null,\"resolved_by\":null,\"secret_type\":\"mailchimp_api_key\",\"secret\":\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2\"}]"
          }
        ]
      },
      {
        "code": 404,
        "description": "Repository is public or secret scanning is disabled for the repository",
        "examples": null
      },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a secret scanning alert",
    "scope": "secretScanning",
    "id": "updateAlert",
    "method": "PATCH",
    "url": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` write permission to use this endpoint.",
    "documentationUrl": "https://docs.github.com/rest/reference/secret-scanning#update-a-secret-scanning-alert",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "alert_number",
        "description": "The security alert number, found at the end of the security alert's URL.",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "state",
        "description": "Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["open", "resolved"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "resolution",
        "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert. Can be one of `false_positive`, `wont_fix`, `revoked`, or `used_in_tests`.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Default response",
        "examples": [
          {
            "data": "{\"number\":42,\"created_at\":\"2020-11-06T18:18:30Z\",\"url\":\"https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42\",\"html_url\":\"https://github.com/owner/private-repo/security/secret-scanning/42\",\"state\":\"resolved\",\"resolution\":\"used_in_tests\",\"resolved_at\":\"2020-11-16T22:42:07Z\",\"resolved_by\":{\"login\":\"monalisa\",\"id\":2,\"node_id\":\"MDQ6VXNlcjI=\",\"avatar_url\":\"https://alambic.github.com/avatars/u/2?\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/monalisa\",\"html_url\":\"https://github.com/monalisa\",\"followers_url\":\"https://api.github.com/users/monalisa/followers\",\"following_url\":\"https://api.github.com/users/monalisa/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/monalisa/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/monalisa/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/monalisa/subscriptions\",\"organizations_url\":\"https://api.github.com/users/monalisa/orgs\",\"repos_url\":\"https://api.github.com/users/monalisa/repos\",\"events_url\":\"https://api.github.com/users/monalisa/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/monalisa/received_events\",\"type\":\"User\",\"site_admin\":true},\"secret_type\":\"mailchimp_api_key\",\"secret\":\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2\"}"
          }
        ]
      },
      {
        "code": 404,
        "description": "Repository is public, or secret scanning is disabled for the repository, or the resource is not found",
        "examples": null
      },
      {
        "code": 422,
        "description": "State does not match the resolution",
        "examples": null
      },
      { "code": 503, "description": "Service Unavailable", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add team member (Legacy)",
    "scope": "teams",
    "id": "addMemberLegacy",
    "method": "PUT",
    "url": "/teams/{team_id}/members/{username}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "The \"Add team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Add or update team membership for a user](https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#add-team-member-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "Response if team synchronization is set up",
        "examples": null
      },
      {
        "code": 422,
        "description": "response",
        "examples": [
          {
            "data": "{\"message\":\"Cannot add an organization as a member.\",\"errors\":[{\"code\":\"org\",\"field\":\"user\",\"resource\":\"TeamMember\"}]}"
          },
          {
            "data": "{\"message\":\"User isn't a member of this organization. Please invite them first.\",\"errors\":[{\"code\":\"unaffiliated\",\"field\":\"user\",\"resource\":\"TeamMember\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add or update team membership for a user",
    "scope": "teams",
    "id": "addOrUpdateMembershipForUserInOrg",
    "method": "PUT",
    "url": "/orgs/{org}/teams/{team_slug}/memberships/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nAn organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the \"pending\" state until the person accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "The role that this user should have in the team. Can be one of:  \n\\* `member` - a normal member of the team.  \n\\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["member", "maintainer"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"active\"}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"pending\"}"
          }
        ]
      },
      {
        "code": 403,
        "description": "Response if team synchronization is set up",
        "examples": null
      },
      {
        "code": 422,
        "description": "Response if you attempt to add an organization to a team",
        "examples": [
          {
            "data": "{\"message\":\"Cannot add an organization as a member.\",\"errors\":[{\"code\":\"org\",\"field\":\"user\",\"resource\":\"TeamMember\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add or update team membership for a user (Legacy)",
    "scope": "teams",
    "id": "addOrUpdateMembershipForUserLegacy",
    "method": "PUT",
    "url": "/teams/{team_id}/memberships/{username}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team membership for a user](https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nIf the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "The role that this user should have in the team. Can be one of:  \n\\* `member` - a normal member of the team.  \n\\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["member", "maintainer"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"active\"}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"pending\"}"
          }
        ]
      },
      {
        "code": 403,
        "description": "Response if team synchronization is set up",
        "examples": null
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 422,
        "description": "Response if you attempt to add an organization to a team",
        "examples": [
          {
            "data": "{\"message\":\"Cannot add an organization as a member.\",\"errors\":[{\"code\":\"org\",\"field\":\"user\",\"resource\":\"TeamMember\"}]}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add or update team project permissions",
    "scope": "teams",
    "id": "addOrUpdateProjectPermissionsInOrg",
    "method": "PUT",
    "url": "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#add-or-update-team-project-permissions",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant to the team for this project. Can be one of:  \n\\* `read` - team members can read, but not write to or administer this project.  \n\\* `write` - team members can read and write, but not administer this project.  \n\\* `admin` - team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      {
        "code": 403,
        "description": "Response if the project is not owned by the organization",
        "examples": [
          {
            "data": "{\"message\":\"Must have admin rights to Repository.\",\"documentation_url\":\"https://docs.github.com/rest/reference/teams#add-or-update-team-project-permissions\"}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Add or update team project permissions (Legacy)",
    "scope": "teams",
    "id": "addOrUpdateProjectPermissionsLegacy",
    "method": "PUT",
    "url": "/teams/{team_id}/projects/{project_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team project permissions](https://docs.github.com/rest/reference/teams#add-or-update-team-project-permissions) endpoint.\n\nAdds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.",
    "documentationUrl": "https://docs.github.com/v3/teams/#add-or-update-team-project-permissions-legacy",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant to the team for this project. Can be one of:  \n\\* `read` - team members can read, but not write to or administer this project.  \n\\* `write` - team members can read and write, but not administer this project.  \n\\* `admin` - team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["read", "write", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      {
        "code": 403,
        "description": "Response if the project is not owned by the organization",
        "examples": [
          {
            "data": "{\"message\":\"Must have admin rights to Repository.\",\"documentation_url\":\"https://docs.github.com/rest/reference/teams#add-or-update-team-project-permissions\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add or update team repository permissions",
    "scope": "teams",
    "id": "addOrUpdateRepoPermissionsInOrg",
    "method": "PUT",
    "url": "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n\nFor more information about the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".",
    "documentationUrl": "https://docs.github.com/v3/teams/#add-or-update-team-repository-permissions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant the team on this repository. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer this repository.  \n\\* `push` - team members can pull and push, but not administer this repository.  \n\\* `admin` - team members can pull, push and administer this repository.  \n\\* `maintain` - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.  \n\\* `triage` - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin", "maintain", "triage"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add or update team repository permissions (Legacy)",
    "scope": "teams",
    "id": "addOrUpdateRepoPermissionsLegacy",
    "method": "PUT",
    "url": "/teams/{team_id}/repos/{owner}/{repo}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team repository permissions](https://docs.github.comt/rest/reference/teams#add-or-update-team-project-permissions) endpoint.\n\nTo add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"",
    "documentationUrl": "https://docs.github.com/v3/teams/#add-or-update-team-repository-permissions-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "The permission to grant the team on this repository. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer this repository.  \n\\* `push` - team members can pull and push, but not administer this repository.  \n\\* `admin` - team members can pull, push and administer this repository.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check team permissions for a project",
    "scope": "teams",
    "id": "checkPermissionsForProjectInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#check-team-permissions-for-a-project",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\",\"organization_permission\":\"write\",\"private\":false,\"permissions\":{\"read\":true,\"write\":true,\"admin\":false}}"
          }
        ]
      },
      {
        "code": 404,
        "description": "Response if project is not managed by this team",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Check team permissions for a project (Legacy)",
    "scope": "teams",
    "id": "checkPermissionsForProjectLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/projects/{project_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/rest/reference/teams#check-team-permissions-for-a-project) endpoint.\n\nChecks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.",
    "documentationUrl": "https://docs.github.com/v3/teams/#check-team-permissions-for-a-project-legacy",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\",\"organization_permission\":\"write\",\"private\":false,\"permissions\":{\"read\":true,\"write\":true,\"admin\":false}}"
          }
        ]
      },
      {
        "code": 404,
        "description": "Response if project is not managed by this team",
        "examples": null
      },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check team permissions for a repository",
    "scope": "teams",
    "id": "checkPermissionsForRepoInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#check-team-permissions-for-a-repository",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Alternative response with repository permissions",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}"
          }
        ]
      },
      {
        "code": 204,
        "description": "Response if team has permission for the repository",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if team does not have permission for the repository",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Check team permissions for a repository (Legacy)",
    "scope": "teams",
    "id": "checkPermissionsForRepoLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/repos/{owner}/{repo}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
    "documentationUrl": "https://docs.github.com/v3/teams/#check-team-permissions-for-a-repository-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Alternative response with extra repository information",
        "examples": [
          {
            "data": "{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"allow_rebase_merge\":true,\"template_repository\":null,\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"allow_squash_merge\":true,\"delete_branch_on_merge\":true,\"allow_merge_commit\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"url\":\"https://api.github.com/licenses/mit\",\"spdx_id\":\"MIT\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\",\"html_url\":\"https://api.github.com/licenses/mit\"},\"forks\":1,\"open_issues\":1,\"watchers\":1}"
          }
        ]
      },
      {
        "code": 204,
        "description": "Response if repository is managed by this team",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if repository is not managed by this team",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a team",
    "scope": "teams",
    "id": "create",
    "method": "POST",
    "url": "/orgs/{org}/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"\n\nWhen you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see \"[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)\".",
    "documentationUrl": "https://docs.github.com/v3/teams/#create-a-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the team.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "The description of the team.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "maintainers",
        "description": "List GitHub IDs for organization members who will become team maintainers.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo_names",
        "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
        "in": "BODY",
        "type": "string[]",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "privacy",
        "description": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.  \nDefault for child team: `closed`",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["secret", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "parent_team_id",
        "description": "The ID of a team to set as the parent team.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"type\":\"Organization\"}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a discussion comment",
    "scope": "teams",
    "id": "createDiscussionCommentInOrg",
    "method": "POST",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#create-a-discussion-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion comment's body text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like apples?\",\"body_html\":\"<p>Do you like apples?</p>\",\"body_version\":\"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":null,\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-15T23:53:58Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a discussion comment (Legacy)",
    "scope": "teams",
    "id": "createDiscussionCommentLegacy",
    "method": "POST",
    "url": "/teams/{team_id}/discussions/{discussion_number}/comments",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Create a discussion comment](https://docs.github.com/rest/reference/teams#create-a-discussion-comment) endpoint.\n\nCreates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#create-a-discussion-comment-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion comment's body text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like apples?\",\"body_html\":\"<p>Do you like apples?</p>\",\"body_version\":\"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":null,\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-15T23:53:58Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a discussion",
    "scope": "teams",
    "id": "createDiscussionInOrg",
    "method": "POST",
    "url": "/orgs/{org}/teams/{team_slug}/discussions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#create-a-discussion",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The discussion post's title.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion post's body text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":0,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":null,\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Our first team post\",\"updated_at\":\"2018-01-25T18:56:31Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a discussion (Legacy)",
    "scope": "teams",
    "id": "createDiscussionLegacy",
    "method": "POST",
    "url": "/teams/{team_id}/discussions",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create a discussion`](https://docs.github.com/rest/reference/teams#create-a-discussion) endpoint.\n\nCreates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)\" for details.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#create-a-discussion-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The discussion post's title.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion post's body text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "private",
        "description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":0,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":null,\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Our first team post\",\"updated_at\":\"2018-01-25T18:56:31Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Delete a discussion comment",
    "scope": "teams",
    "id": "deleteDiscussionCommentInOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#delete-a-discussion-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a discussion comment (Legacy)",
    "scope": "teams",
    "id": "deleteDiscussionCommentLegacy",
    "method": "DELETE",
    "url": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a discussion comment](https://docs.github.com/rest/reference/teams#delete-a-discussion-comment) endpoint.\n\nDeletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#delete-a-discussion-comment-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a discussion",
    "scope": "teams",
    "id": "deleteDiscussionInOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#delete-a-discussion",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a discussion (Legacy)",
    "scope": "teams",
    "id": "deleteDiscussionLegacy",
    "method": "DELETE",
    "url": "/teams/{team_id}/discussions/{discussion_number}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Delete a discussion`](https://docs.github.com/rest/reference/teams#delete-a-discussion) endpoint.\n\nDelete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#delete-a-discussion-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a team",
    "scope": "teams",
    "id": "deleteInOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "To delete a team, the authenticated user must be an organization owner or team maintainer.\n\nIf you are an organization owner, deleting a parent team will delete all of its child teams as well.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#delete-a-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a team (Legacy)",
    "scope": "teams",
    "id": "deleteLegacy",
    "method": "DELETE",
    "url": "/teams/{team_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a team](https://docs.github.com/rest/reference/teams#delete-a-team) endpoint.\n\nTo delete a team, the authenticated user must be an organization owner or team maintainer.\n\nIf you are an organization owner, deleting a parent team will delete all of its child teams as well.",
    "documentationUrl": "https://docs.github.com/v3/teams/#delete-a-team-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a team by name",
    "scope": "teams",
    "id": "getByName",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#get-a-team-by-name",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"type\":\"Organization\"}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a discussion comment",
    "scope": "teams",
    "id": "getDiscussionCommentInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#get-a-discussion-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like apples?\",\"body_html\":\"<p>Do you like apples?</p>\",\"body_version\":\"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":null,\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-15T23:53:58Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a discussion comment (Legacy)",
    "scope": "teams",
    "id": "getDiscussionCommentLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/rest/reference/teams#get-a-discussion-comment) endpoint.\n\nGet a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#get-a-discussion-comment-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like apples?\",\"body_html\":\"<p>Do you like apples?</p>\",\"body_version\":\"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":null,\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-15T23:53:58Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a discussion",
    "scope": "teams",
    "id": "getDiscussionInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#get-a-discussion",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":0,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":null,\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Our first team post\",\"updated_at\":\"2018-01-25T18:56:31Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a discussion (Legacy)",
    "scope": "teams",
    "id": "getDiscussionLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/discussions/{discussion_number}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/rest/reference/teams#get-a-discussion) endpoint.\n\nGet a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#get-a-discussion-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":0,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":null,\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Our first team post\",\"updated_at\":\"2018-01-25T18:56:31Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Get a team (Legacy)",
    "scope": "teams",
    "id": "getLegacy",
    "method": "GET",
    "url": "/teams/{team_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/rest/reference/teams#get-a-team-by-name) endpoint.",
    "documentationUrl": "https://docs.github.com/v3/teams/#get-a-team-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"type\":\"Organization\"}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get team member (Legacy)",
    "scope": "teams",
    "id": "getMemberLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/members/{username}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#get-team-member-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if user is a member",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if user is not a member",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Get team membership for a user",
    "scope": "teams",
    "id": "getMembershipForUserInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/memberships/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/reference/teams#create-a-team).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"active\"}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"maintainer\",\"state\":\"active\"}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"pending\"}"
          }
        ]
      },
      {
        "code": 404,
        "description": "Response if user has no team membership",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Get team membership for a user (Legacy)",
    "scope": "teams",
    "id": "getMembershipForUserLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/memberships/{username}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user) endpoint.\n\nTeam members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/reference/teams#create-a-team).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"active\"}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"maintainer\",\"state\":\"active\"}"
          },
          {
            "data": "{\"url\":\"https://api.github.com/teams/1/memberships/octocat\",\"role\":\"member\",\"state\":\"pending\"}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List teams",
    "scope": "teams",
    "id": "list",
    "method": "GET",
    "url": "/orgs/{org}/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all teams in an organization that are visible to the authenticated user.",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-teams",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null}]"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List child teams",
    "scope": "teams",
    "id": "listChildInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the child teams of the team specified by `{team_slug}`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-child-teams",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if child teams exist",
        "examples": [
          {
            "data": "[{\"id\":2,\"node_id\":\"MDQ6VGVhbTI=\",\"url\":\"https://api.github.com/teams/2\",\"name\":\"Original Roster\",\"slug\":\"original-roster\",\"description\":\"Started it all.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/2/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/2/repos\",\"parent\":{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"},\"html_url\":\"https://github.com/orgs/rails/teams/core\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List child teams (Legacy)",
    "scope": "teams",
    "id": "listChildLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/teams",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/rest/reference/teams#list-child-teams) endpoint.",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-child-teams-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "Response if child teams exist",
        "examples": [
          {
            "data": "[{\"id\":2,\"node_id\":\"MDQ6VGVhbTI=\",\"url\":\"https://api.github.com/teams/2\",\"name\":\"Original Roster\",\"slug\":\"original-roster\",\"description\":\"Started it all.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/2/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/2/repos\",\"parent\":{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\"},\"html_url\":\"https://github.com/orgs/rails/teams/core\"}]"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List discussion comments",
    "scope": "teams",
    "id": "listDiscussionCommentsInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-discussion-comments",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like apples?\",\"body_html\":\"<p>Do you like apples?</p>\",\"body_version\":\"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":null,\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-15T23:53:58Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List discussion comments (Legacy)",
    "scope": "teams",
    "id": "listDiscussionCommentsLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/discussions/{discussion_number}/comments",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/rest/reference/teams#list-discussion-comments) endpoint.\n\nList all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-discussion-comments-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like apples?\",\"body_html\":\"<p>Do you like apples?</p>\",\"body_version\":\"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":null,\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-15T23:53:58Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List discussions",
    "scope": "teams",
    "id": "listDiscussionsInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/discussions",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-discussions",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":0,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":null,\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Our first team post\",\"updated_at\":\"2018-01-25T18:56:31Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List discussions (Legacy)",
    "scope": "teams",
    "id": "listDiscussionsLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/discussions",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/rest/reference/teams#list-discussions) endpoint.\n\nList all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-discussions-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["asc", "desc"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":0,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":null,\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Our first team post\",\"updated_at\":\"2018-01-25T18:56:31Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List teams for the authenticated user",
    "scope": "teams",
    "id": "listForAuthenticatedUser",
    "method": "GET",
    "url": "/user/teams",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/apps/building-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-teams-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"type\":\"Organization\"}}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List team members",
    "scope": "teams",
    "id": "listMembersInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/members",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-team-members",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["member", "maintainer", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List team members (Legacy)",
    "scope": "teams",
    "id": "listMembersLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/members",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/rest/reference/teams#list-team-members) endpoint.\n\nTeam members will include the members of child teams.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-team-members-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "role",
        "description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["member", "maintainer", "all"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List pending team invitations",
    "scope": "teams",
    "id": "listPendingInvitationsInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/invitations",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-pending-team-invitations",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"login\":\"monalisa\",\"email\":\"octocat@github.com\",\"role\":\"direct_member\",\"created_at\":\"2016-11-30T06:46:10-08:00\",\"inviter\":{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false},\"team_count\":2,\"invitation_team_url\":\"https://api.github.com/organizations/2/invitations/1/teams\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List pending team invitations (Legacy)",
    "scope": "teams",
    "id": "listPendingInvitationsLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/invitations",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List pending team invitations`](https://docs.github.com/rest/reference/teams#list-pending-team-invitations) endpoint.\n\nThe return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#list-pending-team-invitations-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1,\"login\":\"monalisa\",\"email\":\"octocat@github.com\",\"role\":\"direct_member\",\"created_at\":\"2016-11-30T06:46:10-08:00\",\"inviter\":{\"login\":\"other_user\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/other_user_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/other_user\",\"html_url\":\"https://github.com/other_user\",\"followers_url\":\"https://api.github.com/users/other_user/followers\",\"following_url\":\"https://api.github.com/users/other_user/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/other_user/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/other_user/subscriptions\",\"organizations_url\":\"https://api.github.com/users/other_user/orgs\",\"repos_url\":\"https://api.github.com/users/other_user/repos\",\"events_url\":\"https://api.github.com/users/other_user/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/other_user/received_events\",\"type\":\"User\",\"site_admin\":false},\"team_count\":2,\"invitation_team_url\":\"https://api.github.com/organizations/2/invitations/1/teams\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List team projects",
    "scope": "teams",
    "id": "listProjectsInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/projects",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the organization projects for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-team-projects",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\",\"organization_permission\":\"write\",\"private\":false,\"permissions\":{\"read\":true,\"write\":true,\"admin\":false}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List team projects (Legacy)",
    "scope": "teams",
    "id": "listProjectsLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/projects",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/rest/reference/teams#list-team-projects) endpoint.\n\nLists the organization projects for a team.",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-team-projects-legacy",
    "previews": [{ "name": "inertia" }],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"owner_url\":\"https://api.github.com/orgs/octocat\",\"url\":\"https://api.github.com/projects/1002605\",\"html_url\":\"https://github.com/orgs/api-playground/projects/1\",\"columns_url\":\"https://api.github.com/projects/1002605/columns\",\"id\":1002605,\"node_id\":\"MDc6UHJvamVjdDEwMDI2MDU=\",\"name\":\"Organization Roadmap\",\"body\":\"High-level roadmap for the upcoming year.\",\"number\":1,\"state\":\"open\",\"creator\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2011-04-11T20:09:31Z\",\"updated_at\":\"2014-03-04T18:58:10Z\",\"organization_permission\":\"write\",\"private\":false,\"permissions\":{\"read\":true,\"write\":true,\"admin\":false}}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List team repositories",
    "scope": "teams",
    "id": "listReposInOrg",
    "method": "GET",
    "url": "/orgs/{org}/teams/{team_slug}/repos",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists a team's repositories visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-team-repositories",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List team repositories (Legacy)",
    "scope": "teams",
    "id": "listReposLegacy",
    "method": "GET",
    "url": "/teams/{team_id}/repos",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/rest/reference/teams#list-team-repositories) endpoint.",
    "documentationUrl": "https://docs.github.com/v3/teams/#list-team-repositories-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":1296269,\"node_id\":\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\"name\":\"Hello-World\",\"full_name\":\"octocat/Hello-World\",\"owner\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"private\":false,\"html_url\":\"https://github.com/octocat/Hello-World\",\"description\":\"This your first repo!\",\"fork\":false,\"url\":\"https://api.github.com/repos/octocat/Hello-World\",\"archive_url\":\"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\"assignees_url\":\"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\"blobs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\"branches_url\":\"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\"collaborators_url\":\"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\"comments_url\":\"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\"commits_url\":\"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\"compare_url\":\"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\"contents_url\":\"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\"contributors_url\":\"https://api.github.com/repos/octocat/Hello-World/contributors\",\"deployments_url\":\"https://api.github.com/repos/octocat/Hello-World/deployments\",\"downloads_url\":\"https://api.github.com/repos/octocat/Hello-World/downloads\",\"events_url\":\"https://api.github.com/repos/octocat/Hello-World/events\",\"forks_url\":\"https://api.github.com/repos/octocat/Hello-World/forks\",\"git_commits_url\":\"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\"git_url\":\"git:github.com/octocat/Hello-World.git\",\"issue_comment_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\"issue_events_url\":\"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\"issues_url\":\"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\"keys_url\":\"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\"labels_url\":\"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\"languages_url\":\"https://api.github.com/repos/octocat/Hello-World/languages\",\"merges_url\":\"https://api.github.com/repos/octocat/Hello-World/merges\",\"milestones_url\":\"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\"pulls_url\":\"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\"releases_url\":\"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\"ssh_url\":\"git@github.com:octocat/Hello-World.git\",\"stargazers_url\":\"https://api.github.com/repos/octocat/Hello-World/stargazers\",\"statuses_url\":\"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\"subscribers_url\":\"https://api.github.com/repos/octocat/Hello-World/subscribers\",\"subscription_url\":\"https://api.github.com/repos/octocat/Hello-World/subscription\",\"tags_url\":\"https://api.github.com/repos/octocat/Hello-World/tags\",\"teams_url\":\"https://api.github.com/repos/octocat/Hello-World/teams\",\"trees_url\":\"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\"clone_url\":\"https://github.com/octocat/Hello-World.git\",\"mirror_url\":\"git:git.example.com/octocat/Hello-World\",\"hooks_url\":\"https://api.github.com/repos/octocat/Hello-World/hooks\",\"svn_url\":\"https://svn.github.com/octocat/Hello-World\",\"homepage\":\"https://github.com\",\"language\":null,\"forks_count\":9,\"stargazers_count\":80,\"watchers_count\":80,\"size\":108,\"default_branch\":\"master\",\"open_issues_count\":0,\"is_template\":true,\"topics\":[\"octocat\",\"atom\",\"electron\",\"api\"],\"has_issues\":true,\"has_projects\":true,\"has_wiki\":true,\"has_pages\":false,\"has_downloads\":true,\"archived\":false,\"disabled\":false,\"visibility\":\"public\",\"pushed_at\":\"2011-01-26T19:06:43Z\",\"created_at\":\"2011-01-26T19:01:12Z\",\"updated_at\":\"2011-01-26T19:14:43Z\",\"permissions\":{\"admin\":false,\"push\":false,\"pull\":true},\"template_repository\":\"octocat/template\",\"temp_clone_token\":\"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\"delete_branch_on_merge\":true,\"subscribers_count\":42,\"network_count\":0,\"license\":{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZW1pdA==\"}}]"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove team member (Legacy)",
    "scope": "teams",
    "id": "removeMemberLegacy",
    "method": "DELETE",
    "url": "/teams/{team_id}/members/{username}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "The \"Remove team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Remove team membership for a user](https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#remove-team-member-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      {
        "code": 404,
        "description": "Response if team synchronization is setup",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove team membership for a user",
    "scope": "teams",
    "id": "removeMembershipForUserInOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}/memberships/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      {
        "code": 403,
        "description": "Response if team synchronization is set up",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove team membership for a user (Legacy)",
    "scope": "teams",
    "id": "removeMembershipForUserLegacy",
    "method": "DELETE",
    "url": "/teams/{team_id}/memberships/{username}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove team membership for a user](https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      {
        "code": 403,
        "description": "Response if team synchronization is set up",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Remove a project from a team",
    "scope": "teams",
    "id": "removeProjectInOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#remove-a-project-from-a-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove a project from a team (Legacy)",
    "scope": "teams",
    "id": "removeProjectLegacy",
    "method": "DELETE",
    "url": "/teams/{team_id}/projects/{project_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a project from a team](https://docs.github.com/rest/reference/teams#remove-a-project-from-a-team) endpoint.\n\nRemoves an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.",
    "documentationUrl": "https://docs.github.com/v3/teams/#remove-a-project-from-a-team-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "project_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      {
        "code": 415,
        "description": "Preview Header Missing",
        "examples": null
      },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove a repository from a team",
    "scope": "teams",
    "id": "removeRepoInOrg",
    "method": "DELETE",
    "url": "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#remove-a-repository-from-a-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Remove a repository from a team (Legacy)",
    "scope": "teams",
    "id": "removeRepoLegacy",
    "method": "DELETE",
    "url": "/teams/{team_id}/repos/{owner}/{repo}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a repository from a team](https://docs.github.com/rest/reference/teams#remove-a-repository-from-a-team) endpoint.\n\nIf the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.",
    "documentationUrl": "https://docs.github.com/v3/teams/#remove-a-repository-from-a-team-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "owner",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "repo",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update a discussion comment",
    "scope": "teams",
    "id": "updateDiscussionCommentInOrg",
    "method": "PATCH",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#update-a-discussion-comment",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion comment's body text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like pineapples?\",\"body_html\":\"<p>Do you like pineapples?</p>\",\"body_version\":\"e6907b24d9c93cc0c5024a7af5888116\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":\"2018-01-26T18:22:20Z\",\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-26T18:22:20Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a discussion comment (Legacy)",
    "scope": "teams",
    "id": "updateDiscussionCommentLegacy",
    "method": "PATCH",
    "url": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion comment](https://docs.github.com/rest/reference/teams#update-a-discussion-comment) endpoint.\n\nEdits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#update-a-discussion-comment-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "comment_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion comment's body text.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Do you like pineapples?\",\"body_html\":\"<p>Do you like pineapples?</p>\",\"body_version\":\"e6907b24d9c93cc0c5024a7af5888116\",\"created_at\":\"2018-01-15T23:53:58Z\",\"last_edited_at\":\"2018-01-26T18:22:20Z\",\"discussion_url\":\"https://api.github.com/teams/2403582/discussions/1\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\"node_id\":\"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\"number\":1,\"updated_at\":\"2018-01-26T18:22:20Z\",\"url\":\"https://api.github.com/teams/2403582/discussions/1/comments/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2403582/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a discussion",
    "scope": "teams",
    "id": "updateDiscussionInOrg",
    "method": "PATCH",
    "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#update-a-discussion",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The discussion post's title.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion post's body text.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":1,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":\"2018-01-26T18:22:20Z\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Welcome to our first team post\",\"updated_at\":\"2018-01-26T18:22:20Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a discussion (Legacy)",
    "scope": "teams",
    "id": "updateDiscussionLegacy",
    "method": "PATCH",
    "url": "/teams/{team_id}/discussions/{discussion_number}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion](https://docs.github.com/rest/reference/teams#update-a-discussion) endpoint.\n\nEdits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/teams#update-a-discussion-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "discussion_number",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "title",
        "description": "The discussion post's title.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "body",
        "description": "The discussion post's body text.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"author\":{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Hi! This is an area for us to collaborate as a team.\",\"body_html\":\"<p>Hi! This is an area for us to collaborate as a team</p>\",\"body_version\":\"0d495416a700fb06133c612575d92bfb\",\"comments_count\":1,\"comments_url\":\"https://api.github.com/teams/2343027/discussions/1/comments\",\"created_at\":\"2018-01-25T18:56:31Z\",\"last_edited_at\":\"2018-01-26T18:22:20Z\",\"html_url\":\"https://github.com/orgs/github/teams/justice-league/discussions/1\",\"node_id\":\"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\"number\":1,\"pinned\":false,\"private\":false,\"team_url\":\"https://api.github.com/teams/2343027\",\"title\":\"Welcome to our first team post\",\"updated_at\":\"2018-01-26T18:22:20Z\",\"url\":\"https://api.github.com/teams/2343027/discussions/1\",\"reactions\":{\"url\":\"https://api.github.com/teams/2343027/discussions/1/reactions\",\"total_count\":5,\"+1\":3,\"-1\":1,\"laugh\":0,\"confused\":0,\"heart\":1,\"hooray\":0,\"eyes\":1,\"rocket\":1}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a team",
    "scope": "teams",
    "id": "updateInOrg",
    "method": "PATCH",
    "url": "/orgs/{org}/teams/{team_slug}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "To edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#update-a-team",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "org",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the team.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "The description of the team.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "privacy",
        "description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. When a team is nested, the `privacy` for parent teams cannot be `secret`. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["secret", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "parent_team_id",
        "description": "The ID of a team to set as the parent team.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"type\":\"Organization\"}}"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "Update a team (Legacy)",
    "scope": "teams",
    "id": "updateLegacy",
    "method": "PATCH",
    "url": "/teams/{team_id}",
    "isDeprecated": true,
    "deprecationDate": "2020-01-21",
    "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a team](https://docs.github.com/rest/reference/teams#update-a-team) endpoint.\n\nTo edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.",
    "documentationUrl": "https://docs.github.com/v3/teams/#update-a-team-legacy",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "team_id",
        "description": "",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "name",
        "description": "The name of the team.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "description",
        "description": "The description of the team.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "privacy",
        "description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["secret", "closed"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "permission",
        "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": ["pull", "push", "admin"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "parent_team_id",
        "description": "The ID of a team to set as the parent team.",
        "in": "BODY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":1,\"node_id\":\"MDQ6VGVhbTE=\",\"url\":\"https://api.github.com/teams/1\",\"html_url\":\"https://api.github.com/teams/justice-league\",\"name\":\"Justice League\",\"slug\":\"justice-league\",\"description\":\"A great team.\",\"privacy\":\"closed\",\"permission\":\"admin\",\"members_url\":\"https://api.github.com/teams/1/members{/member}\",\"repositories_url\":\"https://api.github.com/teams/1/repos\",\"parent\":null,\"members_count\":3,\"repos_count\":10,\"created_at\":\"2017-07-14T16:53:42Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"organization\":{\"login\":\"github\",\"id\":1,\"node_id\":\"MDEyOk9yZ2FuaXphdGlvbjE=\",\"url\":\"https://api.github.com/orgs/github\",\"repos_url\":\"https://api.github.com/orgs/github/repos\",\"events_url\":\"https://api.github.com/orgs/github/events\",\"hooks_url\":\"https://api.github.com/orgs/github/hooks\",\"issues_url\":\"https://api.github.com/orgs/github/issues\",\"members_url\":\"https://api.github.com/orgs/github/members{/member}\",\"public_members_url\":\"https://api.github.com/orgs/github/public_members{/member}\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"description\":\"A great organization\",\"name\":\"github\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"is_verified\":true,\"has_organization_projects\":true,\"has_repository_projects\":true,\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"html_url\":\"https://github.com/octocat\",\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2017-08-17T12:37:15Z\",\"type\":\"Organization\"}}"
          }
        ]
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Add an email address for the authenticated user",
    "scope": "users",
    "id": "addEmailForAuthenticated",
    "method": "POST",
    "url": "/user/emails",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint is accessible with the `user` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#add-an-email-address-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "emails",
        "description": "Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "[{\"email\":\"octocat@octocat.org\",\"primary\":false,\"verified\":false,\"visibility\":\"public\"},{\"email\":\"octocat@github.com\",\"primary\":false,\"verified\":false,\"visibility\":null},{\"email\":\"mona@github.com\",\"primary\":false,\"verified\":false,\"visibility\":null}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Block a user",
    "scope": "users",
    "id": "block",
    "method": "PUT",
    "url": "/user/blocks/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/users#block-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Check if a user is blocked by the authenticated user",
    "scope": "users",
    "id": "checkBlocked",
    "method": "GET",
    "url": "/user/blocks/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "If the user is blocked:\n\nIf the user is not blocked:",
    "documentationUrl": "https://docs.github.com/rest/reference/users#check-if-a-user-is-blocked-by-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "If the user is blocked:",
        "examples": null
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "If the user is not blocked:",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Check if a user follows another user",
    "scope": "users",
    "id": "checkFollowingForUser",
    "method": "GET",
    "url": "/users/{username}/following/{target_user}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/users#check-if-a-user-follows-another-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "target_user",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if the user follows the target user",
        "examples": null
      },
      {
        "code": 404,
        "description": "Response if the user does not follow the target user",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Check if a person is followed by the authenticated user",
    "scope": "users",
    "id": "checkPersonIsFollowedByAuthenticated",
    "method": "GET",
    "url": "/user/following/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 204,
        "description": "Response if the person is followed by the authenticated user",
        "examples": null
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      {
        "code": 404,
        "description": "Response if the person is not followed by the authenticated user",
        "examples": null
      }
    ],
    "renamed": null
  },
  {
    "name": "Create a GPG key for the authenticated user",
    "scope": "users",
    "id": "createGpgKeyForAuthenticated",
    "method": "POST",
    "url": "/user/gpg_keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#create-a-gpg-key-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "armored_public_key",
        "description": "A GPG key in ASCII-armored format.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":3,\"primary_key_id\":2,\"key_id\":\"3262EFF25BA0D270\",\"public_key\":\"xsBNBFayYZ...\",\"emails\":[{\"email\":\"mastahyeti@users.noreply.github.com\",\"verified\":true}],\"subkeys\":[{\"id\":4,\"primary_key_id\":3,\"key_id\":\"4A595D4C72EE49C7\",\"public_key\":\"zsBNBFayYZ...\",\"emails\":[],\"subkeys\":[],\"can_sign\":false,\"can_encrypt_comms\":true,\"can_encrypt_storage\":true,\"can_certify\":false,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\"}],\"can_sign\":true,\"can_encrypt_comms\":false,\"can_encrypt_storage\":false,\"can_certify\":true,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\",\"raw_key\":\"\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\nVersion: GnuPG v2\\\\n\\\\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\\\\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\\\\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\\\\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\\\\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\\\\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\\\\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\\\\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\\\\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\\\\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\\\\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\\\\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\\\\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\\\\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\\\\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\\\\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\\\\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\\\\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\\\\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\\\\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\\\\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\\\\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\\\\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\\\\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\\\\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\\\\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\\\\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\\\\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\\\\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\\\\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\\\\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\\\\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\\\\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\\\\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\\\\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\\\\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\\\\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\\\\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\\\\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\\\\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\\\\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\\\\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\\\\nIts/HFYRLiFgDLmTlxo=\\\\n=+OzK\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\"\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Create a public SSH key for the authenticated user",
    "scope": "users",
    "id": "createPublicSshKeyForAuthenticated",
    "method": "POST",
    "url": "/user/keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "title",
        "description": "A descriptive name for the new key.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "key",
        "description": "The public SSH key to add to your GitHub account.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": "^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) ",
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 201,
        "description": "response",
        "examples": [
          {
            "data": "{\"key_id\":\"012345678912345678\",\"key\":\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\",\"id\":2,\"url\":\"https://api.github.com/user/keys/2\",\"title\":\"ssh-rsa AAAAB3NzaC1yc2EAAA\",\"created_at\":\"2020-06-11T21:31:57Z\",\"verified\":false,\"read_only\":false}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete an email address for the authenticated user",
    "scope": "users",
    "id": "deleteEmailForAuthenticated",
    "method": "DELETE",
    "url": "/user/emails",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "This endpoint is accessible with the `user` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#delete-an-email-address-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "emails",
        "description": "Email addresses associated with the GitHub user account.",
        "in": "BODY",
        "type": "string[]",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a GPG key for the authenticated user",
    "scope": "users",
    "id": "deleteGpgKeyForAuthenticated",
    "method": "DELETE",
    "url": "/user/gpg_keys/{gpg_key_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gpg_key_id",
        "description": "gpg_key_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Delete a public SSH key for the authenticated user",
    "scope": "users",
    "id": "deletePublicSshKeyForAuthenticated",
    "method": "DELETE",
    "url": "/user/keys/{key_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Follow a user",
    "scope": "users",
    "id": "follow",
    "method": "PUT",
    "url": "/user/following/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nFollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#follow-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get the authenticated user",
    "scope": "users",
    "id": "getAuthenticated",
    "method": "GET",
    "url": "/user",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the response lists public and private profile information.\n\nIf the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.",
    "documentationUrl": "https://docs.github.com/v3/users/#get-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"name\":\"monalisa octocat\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"hireable\":false,\"bio\":\"There once was...\",\"twitter_username\":\"monatheoctocat\",\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2008-01-14T04:33:35Z\",\"private_gists\":81,\"total_private_repos\":100,\"owned_private_repos\":100,\"disk_usage\":10000,\"collaborators\":8,\"two_factor_authentication\":true,\"plan\":{\"name\":\"Medium\",\"space\":400,\"private_repos\":20,\"collaborators\":0}}"
          },
          {
            "data": "{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"name\":\"monalisa octocat\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"hireable\":false,\"bio\":\"There once was...\",\"twitter_username\":\"monatheoctocat\",\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2008-01-14T04:33:35Z\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a user",
    "scope": "users",
    "id": "getByUsername",
    "method": "GET",
    "url": "/users/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/rest/reference/users#emails)\".",
    "documentationUrl": "https://docs.github.com/v3/users/#get-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"name\":\"monalisa octocat\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"hireable\":false,\"bio\":\"There once was...\",\"twitter_username\":\"monatheoctocat\",\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2008-01-14T04:33:35Z\"}"
          },
          {
            "data": "{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"name\":\"monalisa octocat\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"hireable\":false,\"bio\":\"There once was...\",\"twitter_username\":\"monatheoctocat\",\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2008-01-14T04:33:35Z\",\"plan\":{\"name\":\"pro\",\"space\":976562499,\"collaborators\":0,\"private_repos\":9999}}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get contextual information for a user",
    "scope": "users",
    "id": "getContextForUser",
    "method": "GET",
    "url": "/users/{username}/hovercard",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\nThe `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:\n\n```shell\n curl -u username:token\n  https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192\n```",
    "documentationUrl": "https://docs.github.com/v3/users/#get-contextual-information-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "subject_type",
        "description": "Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": ["organization", "repository", "issue", "pull_request"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "subject_id",
        "description": "Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`.",
        "in": "QUERY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"contexts\":[{\"message\":\"Owns this repository\",\"octicon\":\"repo\"}]}"
          }
        ]
      },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a GPG key for the authenticated user",
    "scope": "users",
    "id": "getGpgKeyForAuthenticated",
    "method": "GET",
    "url": "/user/gpg_keys/{gpg_key_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#get-a-gpg-key-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "gpg_key_id",
        "description": "gpg_key_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"id\":3,\"primary_key_id\":2,\"key_id\":\"3262EFF25BA0D270\",\"public_key\":\"xsBNBFayYZ...\",\"emails\":[{\"email\":\"mastahyeti@users.noreply.github.com\",\"verified\":true}],\"subkeys\":[{\"id\":4,\"primary_key_id\":3,\"key_id\":\"4A595D4C72EE49C7\",\"public_key\":\"zsBNBFayYZ...\",\"emails\":[],\"subkeys\":[],\"can_sign\":false,\"can_encrypt_comms\":true,\"can_encrypt_storage\":true,\"can_certify\":false,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\"}],\"can_sign\":true,\"can_encrypt_comms\":false,\"can_encrypt_storage\":false,\"can_certify\":true,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\",\"raw_key\":\"\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\nVersion: GnuPG v2\\\\n\\\\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\\\\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\\\\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\\\\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\\\\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\\\\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\\\\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\\\\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\\\\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\\\\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\\\\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\\\\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\\\\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\\\\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\\\\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\\\\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\\\\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\\\\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\\\\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\\\\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\\\\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\\\\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\\\\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\\\\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\\\\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\\\\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\\\\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\\\\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\\\\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\\\\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\\\\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\\\\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\\\\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\\\\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\\\\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\\\\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\\\\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\\\\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\\\\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\\\\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\\\\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\\\\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\\\\nIts/HFYRLiFgDLmTlxo=\\\\n=+OzK\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\"\"}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Get a public SSH key for the authenticated user",
    "scope": "users",
    "id": "getPublicSshKeyForAuthenticated",
    "method": "GET",
    "url": "/user/keys/{key_id}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "PATH",
        "type": "integer",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"key_id\":\"012345678912345678\",\"key\":\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\",\"id\":2,\"url\":\"https://api.github.com/user/keys/2\",\"title\":\"ssh-rsa AAAAB3NzaC1yc2EAAA\",\"created_at\":\"2020-06-11T21:31:57Z\",\"verified\":false,\"read_only\":false}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List users",
    "scope": "users",
    "id": "list",
    "method": "GET",
    "url": "/users",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.",
    "documentationUrl": "https://docs.github.com/v3/users/#list-users",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "since",
        "description": "A user ID. Only return users with an ID greater than this ID.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List users blocked by the authenticated user",
    "scope": "users",
    "id": "listBlockedByAuthenticated",
    "method": "GET",
    "url": "/user/blocks",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "List the users you've blocked on your personal account.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-users-blocked-by-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 415, "description": "Preview Header Missing", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List email addresses for the authenticated user",
    "scope": "users",
    "id": "listEmailsForAuthenticated",
    "method": "GET",
    "url": "/user/emails",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-email-addresses-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"email\":\"octocat@github.com\",\"verified\":true,\"primary\":true,\"visibility\":\"public\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List the people the authenticated user follows",
    "scope": "users",
    "id": "listFollowedByAuthenticated",
    "method": "GET",
    "url": "/user/following",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the people who the authenticated user follows.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-the-people-the-authenticated-user-follows",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List followers of the authenticated user",
    "scope": "users",
    "id": "listFollowersForAuthenticatedUser",
    "method": "GET",
    "url": "/user/followers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the people following the authenticated user.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-followers-of-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List followers of a user",
    "scope": "users",
    "id": "listFollowersForUser",
    "method": "GET",
    "url": "/users/{username}/followers",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the people following the specified user.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-followers-of-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List the people a user follows",
    "scope": "users",
    "id": "listFollowingForUser",
    "method": "GET",
    "url": "/users/{username}/following",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the people who the specified user follows.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-the-people-a-user-follows",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List GPG keys for the authenticated user",
    "scope": "users",
    "id": "listGpgKeysForAuthenticated",
    "method": "GET",
    "url": "/user/gpg_keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-gpg-keys-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":3,\"primary_key_id\":2,\"key_id\":\"3262EFF25BA0D270\",\"public_key\":\"xsBNBFayYZ...\",\"emails\":[{\"email\":\"mastahyeti@users.noreply.github.com\",\"verified\":true}],\"subkeys\":[{\"id\":4,\"primary_key_id\":3,\"key_id\":\"4A595D4C72EE49C7\",\"public_key\":\"zsBNBFayYZ...\",\"emails\":[],\"subkeys\":[],\"can_sign\":false,\"can_encrypt_comms\":true,\"can_encrypt_storage\":true,\"can_certify\":false,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\"}],\"can_sign\":true,\"can_encrypt_comms\":false,\"can_encrypt_storage\":false,\"can_certify\":true,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\",\"raw_key\":\"string\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List GPG keys for a user",
    "scope": "users",
    "id": "listGpgKeysForUser",
    "method": "GET",
    "url": "/users/{username}/gpg_keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the GPG keys for a user. This information is accessible by anyone.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-gpg-keys-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"id\":3,\"primary_key_id\":2,\"key_id\":\"3262EFF25BA0D270\",\"public_key\":\"xsBNBFayYZ...\",\"emails\":[{\"email\":\"mastahyeti@users.noreply.github.com\",\"verified\":true}],\"subkeys\":[{\"id\":4,\"primary_key_id\":3,\"key_id\":\"4A595D4C72EE49C7\",\"public_key\":\"zsBNBFayYZ...\",\"emails\":[],\"subkeys\":[],\"can_sign\":false,\"can_encrypt_comms\":true,\"can_encrypt_storage\":true,\"can_certify\":false,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\"}],\"can_sign\":true,\"can_encrypt_comms\":false,\"can_encrypt_storage\":false,\"can_certify\":true,\"created_at\":\"2016-03-24T11:31:04-06:00\",\"expires_at\":\"2016-03-24T11:31:04-07:00\",\"raw_key\":\"string\"}]"
          }
        ]
      }
    ],
    "renamed": null
  },
  {
    "name": "List public email addresses for the authenticated user",
    "scope": "users",
    "id": "listPublicEmailsForAuthenticated",
    "method": "GET",
    "url": "/user/public_emails",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-public-email-addresses-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"email\":\"octocat@github.com\",\"verified\":true,\"primary\":true,\"visibility\":\"public\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "List public keys for a user",
    "scope": "users",
    "id": "listPublicKeysForUser",
    "method": "GET",
    "url": "/users/{username}/keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the _verified_ public SSH keys for a user. This is accessible by anyone.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-public-keys-for-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [{ "data": "[{\"id\":1,\"key\":\"ssh-rsa AAA...\"}]" }]
      }
    ],
    "renamed": null
  },
  {
    "name": "List public SSH keys for the authenticated user",
    "scope": "users",
    "id": "listPublicSshKeysForAuthenticated",
    "method": "GET",
    "url": "/user/keys",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "documentationUrl": "https://docs.github.com/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "QUERY",
        "type": "integer",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"key_id\":\"012345678912345678\",\"key\":\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\",\"id\":2,\"url\":\"https://api.github.com/user/keys/2\",\"title\":\"ssh-rsa AAAAB3NzaC1yc2EAAA\",\"created_at\":\"2020-06-11T21:31:57Z\",\"verified\":false,\"read_only\":false},{\"key_id\":\"012345678912345608\",\"key\":\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234\",\"id\":3,\"url\":\"https://api.github.com/user/keys/3\",\"title\":\"ssh-rsa AAAAB3NzaC1yc2EAAB\",\"created_at\":\"2020-07-11T21:31:57Z\",\"verified\":false,\"read_only\":false}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Set primary email visibility for the authenticated user",
    "scope": "users",
    "id": "setPrimaryEmailVisibilityForAuthenticated",
    "method": "PATCH",
    "url": "/user/email/visibility",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Sets the visibility for your primary email addresses.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "email",
        "description": "An email address associated with the GitHub user account to manage.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "visibility",
        "description": "Denotes whether an email is publically visible.",
        "in": "BODY",
        "type": "string",
        "required": true,
        "enum": ["public", "private"],
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "[{\"email\":\"octocat@github.com\",\"primary\":true,\"verified\":true,\"visibility\":\"private\"}]"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unblock a user",
    "scope": "users",
    "id": "unblock",
    "method": "DELETE",
    "url": "/user/blocks/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "",
    "documentationUrl": "https://docs.github.com/rest/reference/users#unblock-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Unfollow a user",
    "scope": "users",
    "id": "unfollow",
    "method": "DELETE",
    "url": "/user/following/{username}",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
    "documentationUrl": "https://docs.github.com/rest/reference/users#unfollow-a-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "username",
        "description": "",
        "in": "PATH",
        "type": "string",
        "required": true,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      { "code": 204, "description": "Empty response", "examples": null },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null }
    ],
    "renamed": null
  },
  {
    "name": "Update the authenticated user",
    "scope": "users",
    "id": "updateAuthenticated",
    "method": "PATCH",
    "url": "/user",
    "isDeprecated": false,
    "deprecationDate": null,
    "description": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.",
    "documentationUrl": "https://docs.github.com/v3/users/#update-the-authenticated-user",
    "previews": [],
    "headers": [],
    "parameters": [
      {
        "name": "name",
        "description": "The new name of the user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "email",
        "description": "The publicly visible email address of the user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "blog",
        "description": "The new blog URL of the user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "twitter_username",
        "description": "The new Twitter username of the user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": true,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "company",
        "description": "The new company of the user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "location",
        "description": "The new location of the user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "hireable",
        "description": "The new hiring availability of the user.",
        "in": "BODY",
        "type": "boolean",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      },
      {
        "name": "bio",
        "description": "The new short biography of the user.",
        "in": "BODY",
        "type": "string",
        "required": false,
        "enum": null,
        "allowNull": false,
        "mapToData": null,
        "validation": null,
        "alias": null,
        "deprecated": null
      }
    ],
    "responses": [
      {
        "code": 200,
        "description": "response",
        "examples": [
          {
            "data": "{\"login\":\"octocat\",\"id\":1,\"node_id\":\"MDQ6VXNlcjE=\",\"avatar_url\":\"https://github.com/images/error/octocat_happy.gif\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/octocat\",\"html_url\":\"https://github.com/octocat\",\"followers_url\":\"https://api.github.com/users/octocat/followers\",\"following_url\":\"https://api.github.com/users/octocat/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/octocat/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/octocat/subscriptions\",\"organizations_url\":\"https://api.github.com/users/octocat/orgs\",\"repos_url\":\"https://api.github.com/users/octocat/repos\",\"events_url\":\"https://api.github.com/users/octocat/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/octocat/received_events\",\"type\":\"User\",\"site_admin\":false,\"name\":\"monalisa octocat\",\"company\":\"GitHub\",\"blog\":\"https://github.com/blog\",\"location\":\"San Francisco\",\"email\":\"octocat@github.com\",\"hireable\":false,\"bio\":\"There once was...\",\"twitter_username\":\"monatheoctocat\",\"public_repos\":2,\"public_gists\":1,\"followers\":20,\"following\":0,\"created_at\":\"2008-01-14T04:33:35Z\",\"updated_at\":\"2008-01-14T04:33:35Z\",\"private_gists\":81,\"total_private_repos\":100,\"owned_private_repos\":100,\"disk_usage\":10000,\"collaborators\":8,\"two_factor_authentication\":true,\"plan\":{\"name\":\"Medium\",\"space\":400,\"private_repos\":20,\"collaborators\":0}}"
          }
        ]
      },
      { "code": 304, "description": "Not Modified", "examples": null },
      {
        "code": 401,
        "description": "Requires Authentication",
        "examples": null
      },
      { "code": 403, "description": "Forbidden", "examples": null },
      { "code": 404, "description": "Resource Not Found", "examples": null },
      { "code": 422, "description": "Validation Failed", "examples": null }
    ],
    "renamed": null
  }
]
