name: Update
on:
  repository_dispatch:
    types:
      - octokit/openapi release
      - octokit/types.ts release

  workflow_dispatch:
    inputs:
      version:
        description: "Version of https://www.npmjs.com/package/@octokit/openapi"
        required: true

jobs:
  update_routes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - uses: hmarr/debug-action@v1.0.0

      # try checking out routes-update branch. Ignore error if it does not exist
      - run: git checkout routes-update || true
      - run: npm ci
      - run: rm -rf docs/

      # if update is coming from octokit/openapi, use the version from event
      - run: npm run update-endpoints
        if: github.event_name == 'repository_dispatch' && github.event.action == 'octokit/openapi release'
        env:
          VERSION: ${{ github.event.client_payload.release.tag_name }}

      # if event is workflow dispatch event, use version from input
      - run: npm run update-endpoints
        if: github.event_name == 'workflow_dispatch'
        env:
          VERSION: ${{ github.event.inputs.version }}

      # if event is coming from octokit/types.ts, update @octokit/types to latest version and get OpenAPI version from its package.json
      - run: npm install @octokit/types@latest
        if: github.event_name == 'repository_dispatch' && github.event.action == 'octokit/types.ts release'
      - run: node -e "console.log('::set-output name=version::' + require('@octokit/types/package').octokit['openapi-version'])"
        if: github.event_name == 'repository_dispatch' && github.event.action == 'octokit/types.ts release'
        id: openapi_types
      - run: npm run update-endpoints
        if: github.event_name == 'repository_dispatch' && github.event.action == 'octokit/types.ts release'
        env:
          VERSION: ${{ steps.openapi_types.outputs.version }}

      - name: Create Pull Request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        env:
          GITHUB_TOKEN: ${{ secrets.OCTOKITBOT_PAT }}
        with:
          title: "ðŸš§ GitHub OpenAPI specifications changed"
          body: |
            If there are any new endpoints, then the code changes will likely required an update of [`@octokit/types`](https://github.com/octokit/types.ts/pulls). It should have received a pull request as well, merge & release it first. The `@octokit/types` should be updated automatically shortly after in this pull request.

            Make sure to update the commits so that the merge results in helpful release notes, see [Merging the Pull Request & releasing a new version](https://github.com/octokit/rest.js/blob/master/CONTRIBUTING.md#merging-the-pull-request--releasing-a-new-version).

            In general

            - Avoid breaking changes at all costs
            - If there are no typescript or code changes, use a `docs` prefix
            - If there are typescript changes but no code changes, use `fix(typescript)` prefix
            - If there are code changes, use `fix` if a problem was resolved, `feat` if new endpoints / parameters were added, and `feat(deprecation)` if a method was deprecated.
          branch: "openapi-update"
          commit-message: "WIP octokit/openapi updated"
          author: "Octokit Bot <33075676+octokitbot@users.noreply.github.com>"
          labels: "maintenance"
